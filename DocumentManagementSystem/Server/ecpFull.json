{
  "openapi": "3.0.1",
  "info": {
    "title": "ECP MIS API",
    "description": "Ниже описаны API, необходимые для осуществления логики взаимодействия между системами МИС и ЭКФ, описанные в [памятке](https://www.ecp.umkb.com/mis) по интеграции.\r\n\r\nДомен для запросов [https://service.socmedica.com:9004](https://service.socmedica.com:9004).\r\n\r\nВсе запросы должны быть отправлены методом POST. Все ответы приходят в формате JSON. Для запросов и ответов используется один и тот же формат передачи данных.\r\n\r\nВнимание:\r\n- приведённые ниже примеры описывают лишь структуру ожидаемых данных,\r\n- формат зависит от используемых для передачи запросов технологий,\r\n- во всех запросах должен присутствовать параметр key (ключ доступа),\r\n- параметры, указанные в каждом API ниже рекомендуемы к заполнению,\r\n- параметры, помеченные красной * - обязательные.\r\n\r\n",
    "version": "2.0.2.0"
  },
  "servers": [
    {
      "url": "https://service.socmedica.com:9004"
    },
    {
      "url": "https://service.socmedica.dev:9004"
    }
  ],
  "paths": {
    "/AI/CG": {
      "post": {
        "tags": [
          "AI"
        ],
        "summary": "Клинические рекомендации - рекомендуемая фармакотерапия.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Manager.Models.AIRequestCG"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Manager.Models.AIRequestCG"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Manager.Models.AIRequestCG"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Manager.Models.AIResponseCG"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manager.Models.AIResponseCG"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manager.Models.AIResponseCG"
                }
              }
            }
          }
        }
      }
    },
    "/AI/Index": {
      "get": {
        "tags": [
          "AI"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Assortment/Add": {
      "post": {
        "tags": [
          "Assortment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.AUploadsArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.AUploadsArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.AUploadsArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              }
            }
          }
        }
      }
    },
    "/Assortment/Index": {
      "get": {
        "tags": [
          "Assortment"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Auth/Authorization": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Авторизация пользователя, получение authkey. Фактически является proxy к https://cs.socmedica.com/api/user/authorization соответственно key должен быть для этого API ядра",
        "description": "Пример запроса, параметр key взят с фронта и может поменяться\r\n\r\n    POST /Authorization\r\n    {\r\n        \"key\":\"\",\r\n        \"email\":\"dsfdn@jdf.com\",\r\n        \"password\":\"123456\",\r\n        \"service\":\"108\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.User.RequestAuthorization"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.User.RequestAuthorization"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.User.RequestAuthorization"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.User.ResponseAuthorization"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.User.ResponseAuthorization"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.User.ResponseAuthorization"
                }
              }
            }
          }
        }
      }
    },
    "/Auth/Check": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Первый вход - проверка регистрации, получение userid, получение списка врачей, ЛПУ и пациентов",
        "description": "Пример запроса, параметр key или authkey надо заполнить\r\n\r\n    POST /Check\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"service\":\"108\",\r\n        \"active_language\":\"ru\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.LpuDocPatList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.LpuDocPatList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.LpuDocPatList"
                }
              }
            }
          }
        }
      }
    },
    "/Auth/ConfirmEMail": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Для подтверждения email. Фактически является proxy к https://cs.socmedica.com/api/registration/confirmemail соответственно key должен быть для этого API ядра",
        "description": "Пример запроса, параметр key, code надо заполнить\r\n\r\n    POST /ConfirmEMail\r\n    {\r\n        \"key\":\"\",\r\n        \"email\":\"dsfdn@jdf.com\",\r\n        \"code\":\"\",\r\n        \"service\":\"108\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.Registration.RequestConfirmEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.Registration.RequestConfirmEmail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.Registration.RequestConfirmEmail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              }
            }
          }
        }
      }
    },
    "/Auth/Exit": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Данный API предназначен для выхода пользователя из аккаунта. Фактически является proxy к https://cs.socmedica.com/api/user/authexit",
        "description": "Пример запроса, параметр key или authkey надо заполнить\r\n\r\n    POST /Exit\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"active_language\":\"ru\",\r\n        \"service\":\"108\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.User.RequestAuthExit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.User.RequestAuthExit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.User.RequestAuthExit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              }
            }
          }
        }
      }
    },
    "/Auth/Functional": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Проверка доступа к фунционалу",
        "description": "Пример запроса, параметр key или authkey надо заполнить\r\n\r\n    POST /Functional\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"active_language\":\"ru\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.FunctionalResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.FunctionalResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.FunctionalResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Auth/GetUserInfoByEmail": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Предоставляет информацию о пользователе по его email",
        "description": "Пример запроса, параметр key, email надо заполнить. Фактически является proxy к https://cs.socmedica.com/api/user/getUserInfoByEmail соответственно key должен быть для этого API ядра\r\n\r\n    POST /GetUserInfoByEmail\r\n    {\r\n        \"key\":\"\",\r\n        \"email\":\"dsfdn@jdf.com\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.User.RequestGetUserInfoByEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.User.RequestGetUserInfoByEmail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.User.RequestGetUserInfoByEmail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.User.ResponseGetUserInfoByEmail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.User.ResponseGetUserInfoByEmail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.User.ResponseGetUserInfoByEmail"
                }
              }
            }
          }
        }
      }
    },
    "/Auth/Index": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Auth/ReConfirmEMail": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Для повторного подтверждения email. Фактически является proxy к https://cs.socmedica.com/api/registration/getconfirmemail соответственно key должен быть для этого API ядра",
        "description": "Пример запроса, параметр key, code надо заполнить\r\n\r\n    POST /ReConfirmEMail\r\n    {\r\n        \"key\":\"\",\r\n        \"email\":\"dsfdn@jdf.com\",\r\n        \"service\":\"108\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.Registration.RequestGetConfirmEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.Registration.RequestGetConfirmEmail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.Registration.RequestGetConfirmEmail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              }
            }
          }
        }
      }
    },
    "/Auth/Registration": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Регистрация пользователя, если ответ не пустой, то содержит ошибки. Фактически является proxy к https://cs.socmedica.com/api/registration/send соответственно key должен быть для этого API ядра",
        "description": "Пример запроса, параметр key, email, password, lastName, firstName, middleName надо заполнить\r\n\r\n    POST /Registration\r\n    {\r\n        \"key\":\"\",\r\n        \"email\":\"dsfdn@jdf.com\",\r\n        \"password\":\"123456\",\r\n        \"lastName\":\"фамилия\",\r\n        \"firstName\":\"имя\",\r\n        \"middleName\":\"отчество\",\r\n        \"lpuName\":\"клиника\",\r\n        \"department\":\"отделение\",\r\n        \"service\":\"108\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.Registration.RequestRegistrationSend"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.Registration.RequestRegistrationSend"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.Registration.RequestRegistrationSend"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              }
            }
          }
        }
      }
    },
    "/Auth/ResetPassword": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Получения ссылки на сброс пароля. Фактически является proxy к https://cs.socmedica.com/api/user/recovery соответственно key должен быть для этого API ядра",
        "description": "Пример запроса, параметр key надо заполнить\r\n\r\n    POST /ResetPassword\r\n    {\r\n        \"key\":\"\",\r\n        \"email\":\"dsfdn@jdf.com\",\r\n        \"service\":\"108\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.User.RequestRecovery"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.User.RequestRecovery"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.User.RequestRecovery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              }
            }
          }
        }
      }
    },
    "/Check/Index": {
      "get": {
        "tags": [
          "Check"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Check/WarningInfo": {
      "post": {
        "tags": [
          "Check"
        ],
        "summary": "Получение выдержки из инструкций ЛС по типу варнинга",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.WarningInfoArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.WarningInfoArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.WarningInfoArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.WarningInfoArgs"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.WarningInfoArgs"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.WarningInfoArgs"
                }
              }
            }
          }
        }
      }
    },
    "/Check/Warnings": {
      "post": {
        "tags": [
          "Check"
        ],
        "summary": "Проверка списка назначений на конфликты (варнинги)",
        "description": "Пример запроса, параметр key или authkey, clinic_id, doctor_id, patient.id надо заполнить\r\n\r\n    POST /Warnings\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"clinic_id\": \"\",\r\n\t\t\"clinic_name\": \"\",\r\n\t\t\"doctor_id\": \"\",\r\n\t\t\"doctor_name\": \"\",\r\n\t\t\"patient\": {\r\n\t\t\t\"id\": \"\",\r\n\t\t\t\"email\": \"ecp@gmail.com\",\r\n\t\t\t\"name\": \"тест рецепт шавм\",\r\n\t\t\t\"fio\": \"тест рецепт шавм\",\r\n\t\t\t\"snils\": \"545-484-651 65\",\r\n\t\t\t\"birthdate\": 672339281291,\r\n\t\t\t\"sex\": \"male\",\r\n\t\t\t\"growth\": 170,\r\n\t\t\t\"weight\": 80,\r\n\t\t\t\"disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"6TcKwCDuD0CCr2QjUgl0UA==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"диарея\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"tDZ/lbIl+J157GZPZTaOVg==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"геморрой\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"x9iOERvHhEvz6n5XoXwrCw==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"коронавирусная инфекция COVID-19\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"fIWQDpvvyztQF2Xm2po7wg==\",\r\n\t\t\t\t\t\"type\": \"MKB10\",\r\n\t\t\t\t\t\"name\": \"Геморрой\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"vneaYow+8KFxI2MN0or/3g==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"отравление\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"co_disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"1+/JJBEa1GEkoJPaqHoAlg==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"лактостаз\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"allergy\": [],\r\n\t\t\t\"labparams\": [],\r\n\t\t\t\"pregnancy\": false,\r\n\t\t\t\"lactation\": false,\r\n\t\t\t\"driving\": true,\r\n\t\t\t\"alcohol\": true,\r\n\t\t\t\"genpassport_exist\": true,\r\n\t\t\t\"mutations\": [],\r\n\t\t\t\"lastname\": \"тест\",\r\n\t\t\t\"patronymic\": \"шаверма\",\r\n\t\t\t\"firstname\": \"рецепт\",\r\n\t\t\t\"policy_num\": \"4863 4348 6767 5345\",\r\n\t\t\t\"medcard_num\": {\r\n\t\t\t\t\"default\": \"аывпукпукп\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"liquids\": [],\r\n\t\t\"drugs\": [\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0001\",\r\n\t\t\t\t\"id\": \"FvAHVPvYcrCQRkHH0nem4g==\",\r\n\t\t\t\t\"name\": \"Лирика\",\r\n\t\t\t\t\"mnnname\": \"Pregabalinum\",\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"freq\": \"каждые 30 мин\",\r\n\t\t\t\t\"freq_id\": \"BJ6ybdRulIhypOEQtOpszQ==\",\r\n\t\t\t\t\"duration\": \"16 дней\",\r\n\t\t\t\t\"solute\": false,\r\n\t\t\t\t\"dosage\": {\r\n\t\t\t\t\t\"form\": \"LzgxSBp948dZW6Jk8Yn0Jw==\",\r\n\t\t\t\t\t\"method\": \"azk9D8yXCUT1fH5MCHl0mg==\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"value_1\": 25,\r\n\t\t\t\t\t\t\t\"id_1\": \"248\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"value\": [\r\n\t\t\t\t\t\t25\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"342\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"252\",\r\n\t\t\t\t\t\"dayCount\": 48,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0.000003125\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0.012\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0.00015000000000000001\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {\r\n\t\t\t\t\t\"dateStart\": 1631221200000,\r\n\t\t\t\t\t\"dateFinish\": 1632689999999,\r\n\t\t\t\t\t\"interval\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"every\",\r\n\t\t\t\t\t\t\t\"x\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"mnnid\": \"P4JRpmB91i8DAPnvivqr5g==\",\r\n\t\t\t\t\"liquid\": false,\r\n\t\t\t\t\"proto\": \"613b40f86512ebd7999ce3a1\",\r\n\t\t\t\t\"proto_date\": \"2021_09\",\r\n\t\t\t\t\"proto_key\": \"Drug_0001\",\r\n\t\t\t\t\"pdate\": \"2021_09\",\r\n\t\t\t\t\"pproto\": \"61375aa52905407ff0c9e459\",\r\n\t\t\t\t\"pkey\": \"1631017627406\",\r\n\t\t\t\t\"repeal\": false,\r\n\t\t\t\t\"recipes\": [\r\n\t\t\t\t\t\"SZQ\"\r\n\t\t\t\t],\r\n\t\t\t\t\"lastrecipe\": \"SZQ\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0002\",\r\n\t\t\t\t\"id\": \"MQ9YphmNn3183svjp1oDAA==\",\r\n\t\t\t\t\"name\": \"Трамадол\",\r\n\t\t\t\t\"mnnname\": \"Tramadolum\",\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"freq\": \"3 раза в день\",\r\n\t\t\t\t\"freq_id\": \"d0KWzXuvobA1wfOiLWyusA==\",\r\n\t\t\t\t\"duration\": \"10 дней\",\r\n\t\t\t\t\"solute\": true,\r\n\t\t\t\t\"dosage\": {\r\n\t\t\t\t\t\"form\": \"aEJd0HuLPFsMG/QDaKiwSg==\",\r\n\t\t\t\t\t\"method\": \"azk9D8yXCUT1fH5MCHl0mg==\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"value_1\": 100,\r\n\t\t\t\t\t\t\t\"id_1\": \"248\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"value\": [\r\n\t\t\t\t\t\t100\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0.1\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"342\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"248\",\r\n\t\t\t\t\t\"dayCount\": 3,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0.1\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0.00125\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0.30000000000000004\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0.00375\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {\r\n\t\t\t\t\t\"dateStart\": 1631566800000,\r\n\t\t\t\t\t\"dateFinish\": 1632517199999,\r\n\t\t\t\t\t\"interval\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"count\",\r\n\t\t\t\t\t\t\t\"x\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"mnnid\": \"4XQW4wHrVOq7KghPzzwFaA==\",\r\n\t\t\t\t\"liquid\": false,\r\n\t\t\t\t\"proto\": \"6140bc59223a8507395952ea\",\r\n\t\t\t\t\"proto_date\": \"2021_09\",\r\n\t\t\t\t\"proto_key\": \"Drug_0001\",\r\n\t\t\t\t\"pdate\": \"2021_09\",\r\n\t\t\t\t\"pproto\": \"6138de26571cbaa8baee0bf1\",\r\n\t\t\t\t\"pkey\": \"1631116830018\",\r\n\t\t\t\t\"repeal\": false,\r\n\t\t\t\t\"recipes\": [\r\n\t\t\t\t\t\"2LQ\"\r\n\t\t\t\t],\r\n\t\t\t\t\"lastrecipe\": \"2LQ\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0003\",\r\n\t\t\t\t\"id\": \"MQ9YphmNn3183svjp1oDAA==\",\r\n\t\t\t\t\"name\": \"Трамадол\",\r\n\t\t\t\t\"mnnname\": \"Tramadolum\",\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"group\": 0,\r\n\t\t\t\t\"solute\": true,\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"42\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"248\",\r\n\t\t\t\t\t\"dayCount\": 1,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {},\r\n\t\t\t\t\"mnnid\": \"4XQW4wHrVOq7KghPzzwFaA==\",\r\n\t\t\t\t\"proto\": \"6140bc59223a8507395952ea\",\r\n\t\t\t\t\"proto_date\": \"2021_09\",\r\n\t\t\t\t\"proto_key\": \"1631623654183\",\r\n\t\t\t\t\"repeal\": false,\r\n\t\t\t\t\"recipes\": [\r\n\t\t\t\t\t\"8LQ\"\r\n\t\t\t\t],\r\n\t\t\t\t\"lastrecipe\": \"8LQ\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0004\",\r\n\t\t\t\t\"id\": \"EkCSR12cihwoG6eRvjQgsQ==\",\r\n\t\t\t\t\"name\": \"Валидол\",\r\n\t\t\t\t\"mnnname\": \"Solutio Levomentholi in Menthylii isovalerate\",\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"specials\": \"комент\",\r\n\t\t\t\t\"freq\": \"1 раз в день\",\r\n\t\t\t\t\"freq_id\": \"CrjuCSzHZJ4I6PSMAXzTpw==\",\r\n\t\t\t\t\"duration\": \"10 дней\",\r\n\t\t\t\t\"solute\": false,\r\n\t\t\t\t\"dosage\": {\r\n\t\t\t\t\t\"form\": \"Cr4vKExMlmKfD0VxZFHpfg==\",\r\n\t\t\t\t\t\"method\": \"JCdH/pHsBIClXumxbFdyWQ==\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"value_1\": 60,\r\n\t\t\t\t\t\t\t\"id_1\": \"248\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"value\": [\r\n\t\t\t\t\t\t60\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0.06\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"342\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"248\",\r\n\t\t\t\t\t\"dayCount\": 1,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0.06\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0.00075\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0.06\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0.00075\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {\r\n\t\t\t\t\t\"dateStart\": 1631566800000,\r\n\t\t\t\t\t\"dateFinish\": 1632517199999,\r\n\t\t\t\t\t\"interval\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"count\",\r\n\t\t\t\t\t\t\t\"x\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"mnnid\": \"SmsI4b+of0d5hwhW3PW0tQ==\",\r\n\t\t\t\t\"proto\": \"6140bc59223a8507395952ea\",\r\n\t\t\t\t\"proto_date\": \"2021_09\",\r\n\t\t\t\t\"proto_key\": \"1631624118829\",\r\n\t\t\t\t\"repeal\": false\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"return_subjects\": false,\r\n\t\t\"service\": \"108\"\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.SetInfoPreparations"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.SetInfoPreparations"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.SetInfoPreparations"
                }
              }
            }
          }
        }
      }
    },
    "/Drugs/Analog": {
      "post": {
        "tags": [
          "Drugs"
        ],
        "summary": "Получение аналогов ЛС и их цен (через ТН) - работает по старому формату хранения данных по фп.",
        "description": "Пример запроса, параметр key или authkey, надо заполнить\r\n\r\n    POST /Analog\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"drug\": {\r\n\t\t\t\"id\": \"cbAg2yetjqZrthRduwHYWQ==\",\r\n\t\t\t\"name\": \"Варфарин\",\r\n\t\t\t\"type\": \"TN\"\r\n\t\t}\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalog.Models.Answer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalog.Models.Answer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalog.Models.Answer"
                }
              }
            }
          }
        }
      }
    },
    "/Drugs/ByFG": {
      "post": {
        "tags": [
          "Drugs"
        ],
        "summary": "Получение ЛС по фармгруппе.",
        "description": "Пример запроса, параметр key или authkey, надо заполнить\r\n\r\n    POST /ByFG\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"drug\": {\r\n\t\t\t\"id\": \"/AegbKunuotUiyBh7gjz3A==\",\r\n\t\t\t\"type\": \"FG\",\r\n\t\t\t\"name\": \"Дезинтоксикационные средства\"\r\n\t\t}\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicalGuidelines.Models.LSList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicalGuidelines.Models.LSList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicalGuidelines.Models.LSList"
                }
              }
            }
          }
        }
      }
    },
    "/Drugs/ByNZ": {
      "post": {
        "tags": [
          "Drugs"
        ],
        "summary": "Получение ЛС по нозологии.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicalGuidelines.Models.LSList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicalGuidelines.Models.LSList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicalGuidelines.Models.LSList"
                }
              }
            }
          }
        }
      }
    },
    "/Drugs/CreateDosage": {
      "post": {
        "tags": [
          "Drugs"
        ],
        "summary": "Контроллер для безусловного создания кэша дозировок, ЛФ, первичных упаковок по ДВ/ТН (нужен для фронта фармтакси)",
        "description": "Пример запроса, параметр key или authkey, надо заполнить\r\n\r\n    POST /Dosages\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"drug\": {\r\n\t\t\t\"id\": \"FvAHVPvYcrCQRkHH0nem4g==\",\r\n\t\t\t\"type\": \"TN\",\r\n\t\t\t\"name\": \"Лирика\"\r\n\t\t}\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDosage.Models.Answer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDosage.Models.Answer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDosage.Models.Answer"
                }
              }
            }
          }
        }
      }
    },
    "/Drugs/Dosages": {
      "post": {
        "tags": [
          "Drugs"
        ],
        "summary": "Получение дозировок, ЛФ, первичных упаковок по ДВ/ТН",
        "description": "Пример запроса, параметр key или authkey, надо заполнить\r\n\r\n    POST /Dosages\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"drug\": {\r\n\t\t\t\"id\": \"FvAHVPvYcrCQRkHH0nem4g==\",\r\n\t\t\t\"type\": \"TN\",\r\n\t\t\t\"name\": \"Лирика\"\r\n\t\t}\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDosage.Models.Answer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDosage.Models.Answer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDosage.Models.Answer"
                }
              }
            }
          }
        }
      }
    },
    "/Drugs/DrugsByFD": {
      "post": {
        "tags": [
          "Drugs"
        ],
        "summary": "Получение ЛС по списку ФармДействий (Оригинальный ЛС обязателен)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.RequestConcepts"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.RequestConcepts"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.RequestConcepts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalog.Models.ResponseDrugs"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalog.Models.ResponseDrugs"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalog.Models.ResponseDrugs"
                }
              }
            }
          }
        }
      }
    },
    "/Drugs/FDByDrug": {
      "post": {
        "tags": [
          "Drugs"
        ],
        "summary": "Получение основных ФармДействий ЛС",
        "description": "Пример запроса, параметр key или authkey, надо заполнить\r\n\r\n    POST /FPDosage\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"drug\": {\r\n\t\t\t\"id\": \"MrO4sIzFdZWdLo13z15jmg==\"\r\n\t\t}\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.RequestDrug"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.RequestDrug"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.RequestDrug"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalog.Models.ResponseFD"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalog.Models.ResponseFD"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalog.Models.ResponseFD"
                }
              }
            }
          }
        }
      }
    },
    "/Drugs/FPDosage": {
      "post": {
        "tags": [
          "Drugs"
        ],
        "summary": "Получение дозировок, ЛФ, первичных упаковок по Фармпрепарату",
        "description": "Пример запроса, параметр key или authkey, надо заполнить\r\n\r\n    POST /FPDosage\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"drug\": {\r\n\t\t\t\"id\": \"MrO4sIzFdZWdLo13z15jmg==\",\r\n\t\t\t\"name\": \"Варфарин Никомед\",\r\n\t\t\t\"fpid\": \"Ha9AGdDiNuEs7mhjzY9HVQ==\",\r\n\t\t\t\"type\": \"TN\"\r\n\t\t}\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.DrugDosage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.DrugDosage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.DrugDosage"
                }
              }
            }
          }
        }
      }
    },
    "/Drugs/GetMNN": {
      "post": {
        "tags": [
          "Drugs"
        ],
        "summary": "Получение списка МНН по списку ID лекарственных средств (ТН)",
        "description": "Пример запроса, параметр key или authkey, надо заполнить\r\n\r\n    POST /GetMNN\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"ids\":[\r\n\t\t\t\"JhA28OzggOkyfc2+ulGLDQ==\",\r\n\t\t\t\"qpjRS+2XDiEq84vBZgesXA==\",\r\n\t\t\t\"Vz6BsnXtkPUTrAGaCMnhdg==\"\r\n\t\t]\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.IdsList"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.IdsList"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.IdsList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.GetMNNResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.GetMNNResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.GetMNNResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Drugs/Index": {
      "get": {
        "tags": [
          "Drugs"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Drugs/Info": {
      "post": {
        "tags": [
          "Drugs"
        ],
        "summary": "Получение всей информации о препарате",
        "description": "Пример запроса, параметр key или authkey надо заполнить\r\n\r\n    POST /Info\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"drug\": {\r\n\t\t\t\"id\": \"MQ9YphmNn3183svjp1oDAA==\",\r\n\t\t\t\"type\": \"TN\",\r\n\t\t\t\"name\": \"Трамадол\"\r\n\t\t}\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.RequestDrug"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.RequestDrug"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.RequestDrug"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.InfoTypesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.InfoTypesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.InfoTypesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Drugs/MNNfromTN": {
      "post": {
        "tags": [
          "Drugs"
        ],
        "summary": "Получение МНН лекарственного средства",
        "description": "    Пример запроса, параметр key или authkey надо заполнить\r\n\r\n    POST /MNNfromTN\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"drug\": {\r\n\t\t\t\"id\": \"FvAHVPvYcrCQRkHH0nem4g==\",\r\n\t\t\t\"type\": \"TN\",\r\n\t\t\t\"name\": \"Лирика\"\r\n\t\t}\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.RequestDrug"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.RequestDrug"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.RequestDrug"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Manager.Models.ConceptAnswer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manager.Models.ConceptAnswer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manager.Models.ConceptAnswer"
                }
              }
            }
          }
        }
      }
    },
    "/Drugs/Parse": {
      "post": {
        "tags": [
          "Drugs"
        ],
        "summary": "Формализация ЛС из списка строк (в свободной форме). 1 строка в списке - 1 ЛС. Индексы ответа и запроса совпадают. Если строку не удалось формализовать, то будет null",
        "description": "Пример запроса, параметр key или authkey надо заполнить\r\n\r\n    POST /Parse\r\n    {\r\n\t  \"key\": \"\",\r\n\t  \"authkey\": \"\",\r\n\t  \"texts\": [\r\n\t\t\"валидол капли подъязычные 10 мл сублингвальное введение 10 мл 4 раза в день 9 дней\",\r\n\t\t\"трамадол табл 2.5 мг внутрь 2.5 мг каждый час 13 дней\"\r\n\t  ],\r\n\t  \"active_language\": \"ru\"\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.ParseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.ParseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.ParseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.ParseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.ParseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.ParseResult"
                }
              }
            }
          }
        }
      }
    },
    "/ECP/ForceRestart": {
      "get": {
        "tags": [
          "ECP"
        ],
        "summary": "Горячая перезагрузка !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!использовать только для дебага коробки!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ECP/Index": {
      "get": {
        "tags": [
          "ECP"
        ],
        "summary": "Статус сервера",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ECP/Stop": {
      "get": {
        "tags": [
          "ECP"
        ],
        "summary": "Завершить работу ЭКФ  !!!!!!!!!!использовать осторожно, обязательно проверять что новый ЭКФ поднялся!!!!!",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Info/ButtonTexts": {
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Получение текстов нужных для интерфейса(названия кнопок, лицензионое соглашение и т.д.) в нужной локализации из умкб",
        "description": "Пример запроса\r\n\r\n    POST /ButtonTexts\r\n    {\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"service\": \"108\"\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerNames"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerNames"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerNames"
                }
              }
            }
          }
        }
      }
    },
    "/Info/ByCodes": {
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Получение сообщений из \"Текстовые обращения к пользователю\" по публичным кодам",
        "description": "Пример запроса\r\n\r\n    POST /ByCodes\r\n    {\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"codes\":[\r\n\t\t\t\"consent_personal_data_doctor_patient\",\r\n\t\t\t\"comments_recipe\"\r\n\t\t\t]\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.CodesArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.CodesArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.CodesArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.ResponseByCodes"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.ResponseByCodes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.ResponseByCodes"
                }
              }
            }
          }
        }
      }
    },
    "/Info/Elements": {
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Получение наборов различных типовых концептов (рискфактор, уровень доверя, степень опасности, уровень взаимодействия) с их количественными параметрами",
        "description": "Пример запроса\r\n\r\n    POST /Elements\r\n    {\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"service\": \"108\"\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerElements"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerElements"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerElements"
                }
              }
            }
          }
        }
      }
    },
    "/Info/GetMKB10": {
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Получение концепта(id/code/name) UMKB10 из нозологии/пат.признака. Если id валидный апи отработает только по нему, ответ может быть пустым потому, что может не найдена синонимия",
        "description": "Пример запроса\r\n\r\n    POST /GetMKB10\r\n    {\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"id\":\"C5Xt13Y3wn+Tf6jhEidsbg==\",\r\n\t\t\"name\":\"грипп\"\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.MKB10Args"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.MKB10Args"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.MKB10Args"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.MKB10Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.MKB10Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.MKB10Response"
                }
              }
            }
          }
        }
      }
    },
    "/Info/Index": {
      "get": {
        "tags": [
          "Info"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Info/LiqMethod": {
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Получение способов применения растворов",
        "description": "Пример запроса\r\n\r\n    POST /LiqMethod\r\n    {\r\n        \"service\": \"108\",\r\n        \"active_language\": \"ru\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.LiqMethodResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.LiqMethodResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.LiqMethodResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Info/Names": {
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Получения всех данных, необходимых для функционирования фронта ЭКФ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.NamesArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.NamesArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.NamesArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.NamesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.NamesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.NamesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Info/RecipeData": {
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Получение концептов, необходимых для формирования рецепта (включая параметрические значения)",
        "description": "Пример запроса\r\n\r\n    POST /RecipeData\r\n    {\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"service\": \"108\"\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.RecipeDataResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.RecipeDataResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.RecipeDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Info/Schedule": {
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Получение наборов концептов с их количественными параметрами (частота, длительность приёма)",
        "description": "Пример запроса\r\n\r\n    POST /Schedule\r\n    {\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"service\": \"108\"\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerSchedule"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/Info/Tech": {
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Техническое API для получения всех данных, необходимых для функционирования фронта ЭКФ",
        "description": "Пример запроса\r\n\r\n    POST /Tech\r\n    {\r\n\t\t\"active_language\": \"ru\"\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.InfoTechData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.InfoTechData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.InfoTechData"
                }
              }
            }
          }
        }
      }
    },
    "/Info/TextByCode": {
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Получение имён и описаний для пользователей по публичным кодам концептов из библиотеки \"Текстовые обращения к пользователю\"",
        "description": "Пример запроса\r\n\r\n    POST /UIText\r\n    {\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"codes\": [\"need_auth_text\",\"system_information_ecp\", \"report_an_error\", \"user_agreement_text\"]\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Services.TextByCode+PublicCodesArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Services.TextByCode+PublicCodesArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Services.TextByCode+PublicCodesArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Services.TextByCode+PublicCodesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Services.TextByCode+PublicCodesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Services.TextByCode+PublicCodesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Info/UIText": {
      "post": {
        "tags": [
          "Info"
        ],
        "summary": "Получение всевозможных имён скопом (без количественныъ параметров) - сервисные сообщения, частота/длительность приёма, опасность/факторы риска и т.д.",
        "description": "Пример запроса\r\n\r\n    POST /UIText\r\n    {\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"service\": \"108\"\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SecurityArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerUIText"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerUIText"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerUIText"
                }
              }
            }
          }
        }
      }
    },
    "/LogLevel/Get": {
      "get": {
        "tags": [
          "LogLevel"
        ],
        "parameters": [
          {
            "name": "password",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Serilog.Events.LogEventLevel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Serilog.Events.LogEventLevel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Serilog.Events.LogEventLevel"
                }
              }
            }
          }
        }
      }
    },
    "/LogLevel/Set": {
      "put": {
        "tags": [
          "LogLevel"
        ],
        "parameters": [
          {
            "name": "ChangingPassword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LogLevel",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Serilog.Events.LogEventLevel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Mis/ActualAddTherapy": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "(Дополнительное) Проверка и назначение пациенту новой фармакотерапии с учетом актуальных назначений",
        "description": "Данный API предназначен для проверки и назначения пациенту новой фармакотерапии добавляя к указанной фармакотерапии, актульную фармакотерапию. \r\nТ.е. к ЛС из запроса, добавятся ЛС из прошлых назначений, которые по расписанию пациент еще принимает.\r\n\r\nДля всех запросов в ответе будет одинаковая ссылка, при открытии которой будет отображаться актульная фармакотерапия и противопоказания по ней.\r\n\r\nПротивопоказания и ЛС отображаемые при открытии ссылки будут меняться с течением времени, если у ЛС была указана дата окончания приема. \r\nПри запросе на /Mis/ActualAddTherapy фармакотерапия будет дополняться. \r\nПри запросах на /Mis/ActualNewTherapy или /Mis/NewTherapy фармакотерапия будет заменяться.\r\n\r\nДля правильной работы API с растворами есть несколько правил:\r\n- сам раствор добавляется в запрос как отдельный объект \"MisDrug\" в \"drugs\", с \"type\": \"LQ\",\r\n- компоненты раствора добавляются как отдельные объекты \"MisDrug\" в \"drugs\",\r\n- у раствора и его компонентов должен быть одинаковый \"group\", он должен быть заполнен и не равен 0,\r\n- у компонентов раствора \"schedule\" не нужно заполнять, данные будут сохранены, но в расчетах участвовать не будут, будут использованы данные из \"schedule\" раствора,\r\n- \"method\" нужно указывать только для раствора, у компонентов раствора это будет проигнорировано,\r\n- все дозировки нужно указывать у компонентов раствора, для раствора все дозировки считаются по дозировкам компонентов,\r\n- для расчета скорости введения раствора нужно указать \"use_duration\" и \"use_duration_unit\", по умолчанию \"use_duration\" - 1, \"use_duration_unit\" - минута.\r\n\r\nВ поле disease_classifier указывается:\r\n- null или string.Empty - поиск по именам во всех классификаторах,\r\n- mkb10 - Поиск именам МКБ10,\r\n- mkb10code - Поиск кодам МКБ10,\r\n- mkb10multi - Поиск в МКБ10 и по именам и по кодам (не нежелательно - в редких случаях возможны неоднозначности в случае равноценных совпадений).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/ActualArguments": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "Получение данных авторизации, клиники, врача и пациента из адресной строки, внутренее API нужно только для нашего фронта, для отрытия МИСовской ссылки",
        "description": "Значения для параметра key надо брать из ответа API Mis/ActualAddTherapy или Mis/ActualNewTherapy, параметр \"url\", все что после \"*/MisPatient/\" \r\n\r\nПример запроса\r\n\r\n    POST /ActualArguments\r\n    {\r\n        \"key\": \"CucBCgASGHM2MENzVHluSTFUbjN3MDdCZUphRlJkcBoYNGNTUjZpTDFnekZ3ZHQzLzdBZkRIZz09IgkyNjk3OTgwMDEqFNCf0LDRhtC40LXQvdGCINCRLi4uMhgxNWllTFMxMys3NE1vQVA1Z2lpVFR3PT06AzAwMEIh0JzQtdC00LjRhtC40L3RgdC60LjQuSDRhtC10L3RgtGAYhhpYkFtdU9zcUt3WWp1V2owTGFSSzBRPT1qBTExMTEycivQodC+0YLRgNGD0LTQvdC40Log0YDQsNC30YDQsNCx0L7RgtGH0LjQutCw\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.ResultCheckingArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.ResultCheckingArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.ResultCheckingArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.MisArgsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.MisArgsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.MisArgsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/ActualCheck": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "(Дополнительное) Проверка назначения (c актуальной терапией) пациенту без сохранения или изменения чего либо",
        "description": "Получение максимального значения опасности фармакотерапии(параметр danger 0-1), с учётом предыдущих актуальных назначений.\r\n\r\nДля правильной работы API с растворами есть несколько правил:\r\n- сам раствор добавляется в запрос как отдельный объект \"MisDrug\" в \"drugs\", с \"type\": \"LQ\",\r\n- компоненты раствора добавляются как отдельные объекты \"MisDrug\" в \"drugs\",\r\n- у раствора и его компонентов должен быть одинаковый \"group\", он должен быть заполнен и не равен 0,\r\n- у компонентов раствора \"schedule\" не нужно заполнять, данные будут сохранены, но в расчетах участвовать не будут, будут использованы данные из \"schedule\" раствора,\r\n- \"method\" нужно указывать только для раствора, у компонентов раствора это будет проигнорировано,\r\n- все дозировки нужно указывать у компонентов раствора, для раствора все дозировки считаются по дозировкам компонентов,\r\n- для расчета скорости введения раствора нужно указать \"use_duration\" и \"use_duration_unit\", по умолчанию \"use_duration\" - 1, \"use_duration_unit\" - минута.\r\n\r\nВ поле disease_classifier указывается:\r\n- null или string.Empty - поиск по именам во всех классификаторах,\r\n- mkb10 - Поиск именам МКБ10,\r\n- mkb10code - Поиск кодам МКБ10,\r\n- mkb10multi - Поиск в МКБ10 и по именам и по кодам (не нежелательно - в редких случаях возможны неоднозначности в случае равноценных совпадений).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/ActualCheckFull": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "Проверка назначения пациенту без сохранения или изменения чего либо, фактически песочница, с деатализацией противопоказаний",
        "description": "Получение максимального значения опасности фармакотерапии(параметр danger 0-1), с деатализацией противопоказаний(параметр warnings), при желании, с учётом предыдущих актуальных назначений(параметр enableActualTherapy).\r\n\r\nДля правильной работы API с растворами есть несколько правил:\r\n- сам раствор добавляется в запрос как отдельный объект \"MisDrug\" в \"drugs\", с \"type\": \"LQ\",\r\n- компоненты раствора добавляются как отдельные объекты \"MisDrug\" в \"drugs\",\r\n- у раствора и его компонентов должен быть одинаковый \"group\", он должен быть заполнен и не равен 0,\r\n- у компонентов раствора \"schedule\" не нужно заполнять, данные будут сохранены, но в расчетах участвовать не будут, будут использованы данные из \"schedule\" раствора,\r\n- \"method\" нужно указывать только для раствора, у компонентов раствора это будет проигнорировано,\r\n- все дозировки нужно указывать у компонентов раствора, для раствора все дозировки считаются по дозировкам компонентов,\r\n- для расчета скорости введения раствора нужно указать \"use_duration\" и \"use_duration_unit\", по умолчанию \"use_duration\" - 1, \"use_duration_unit\" - минута.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisCheckResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisCheckResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisCheckResult"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/ActualNewTherapy": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "(Дополнительное) Проверка и назначение пациенту новой фармакотерапии c отменой всех предыдущих назначений",
        "description": "Данный API предназначен для проверки и назначения пациенту новой фармакотерапии c заменой актуальных назначений указанным. \r\nТ.е. все ЛС которые были ранее назначены будут заменены ЛС из запроса.\r\nAPI в ответ возвращает итоговое значение максимального уровня опасности (параметр danger) и URL-ссылку, по которой можно запросить результат проверки листа назначения в web-интерфейсе ЭКФ.\r\n\r\nДля всех запросов в ответе будет одинаковая ссылка, при открытии которой будет отображаться актульная фармакотерапия и противопоказания по ней.\r\n\r\nПротивопоказания и ЛС отображаемые при открытии ссылки будут меняться с течением времени, если у ЛС была указана дата окончания приема. \r\nПри запросе на /Mis/ActualAddTherapy фармакотерапия будет дополняться. \r\nПри запросах на /Mis/ActualNewTherapy или /Mis/NewTherapy фармакотерапия будет заменяться.\r\n\r\nДля правильной работы API с растворами есть несколько правил:\r\n- сам раствор добавляется в запрос как отдельный объект \"MisDrug\" в \"drugs\", с \"type\": \"LQ\",\r\n- компоненты раствора добавляются как отдельные объекты \"MisDrug\" в \"drugs\",\r\n- у раствора и его компонентов должен быть одинаковый \"group\", он должен быть заполнен и не равен 0,\r\n- у компонентов раствора \"schedule\" не нужно заполнять, данные будут сохранены, но в расчетах участвовать не будут, будут использованы данные из \"schedule\" раствора,\r\n- \"method\" нужно указывать только для раствора, у компонентов раствора это будет проигнорировано,\r\n- все дозировки нужно указывать у компонентов раствора, для раствора все дозировки считаются по дозировкам компонентов,\r\n- для расчета скорости введения раствора нужно указать \"use_duration\" и \"use_duration_unit\", по умолчанию \"use_duration\" - 1, \"use_duration_unit\" - минута.\r\n\r\nВ поле disease_classifier указывается:\r\n- null или string.Empty - поиск по именам во всех классификаторах,\r\n- mkb10 - Поиск именам МКБ10,\r\n- mkb10code - Поиск кодам МКБ10,\r\n- mkb10multi - Поиск в МКБ10 и по именам и по кодам (не нежелательно - в редких случаях возможны неоднозначности в случае равноценных совпадений).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/ActualTherapy": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "(Основное) Получение актуальной фармакотерапии пациента (по кодам)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.PatientCode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.PatientCode"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.PatientCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.ActualResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.ActualResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.ActualResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/Check": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "(Основное) Проверка назначения (без актуальной терапии) пациенту без сохранения или изменения чего либо",
        "description": "Получение максимального значения опасности фармакотерапии(параметр danger 0-1), без учёта предыдущих актуальных назначений.\r\n\r\nДля правильной работы API с растворами есть несколько правил:\r\n- сам раствор добавляется в запрос как отдельный объект \"MisDrug\" в \"drugs\", с \"type\": \"LQ\",\r\n- компоненты раствора добавляются как отдельные объекты \"MisDrug\" в \"drugs\",\r\n- у раствора и его компонентов должен быть одинаковый \"group\", он должен быть заполнен и не равен 0,\r\n- у компонентов раствора \"schedule\" не нужно заполнять, данные будут сохранены, но в расчетах участвовать не будут, будут использованы данные из \"schedule\" раствора,\r\n- \"method\" нужно указывать только для раствора, у компонентов раствора это будет проигнорировано,\r\n- все дозировки нужно указывать у компонентов раствора, для раствора все дозировки считаются по дозировкам компонентов,\r\n- для расчета скорости введения раствора нужно указать \"use_duration\" и \"use_duration_unit\", по умолчанию \"use_duration\" - 1, \"use_duration_unit\" - минута.\r\n\r\nВ поле disease_classifier указывается:\r\n- null или string.Empty - поиск по именам во всех классификаторах,\r\n- mkb10 - Поиск именам МКБ10,\r\n- mkb10code - Поиск кодам МКБ10,\r\n- mkb10multi - Поиск в МКБ10 и по именам и по кодам (не нежелательно - в редких случаях возможны неоднозначности в случае равноценных совпадений).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/ConvertUnit": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "Конвертация значений из одних единиц измерения в другие.\r\nПока только в рамках основных единиц измерения (т.е. миллиграммы в микрограммы, миллилитры в литры и т.д.)\r\nПозже добавлю и производные (мг/мл и т.д.)",
        "description": "Пример запроса, параметр key или authkey надо заполнить\r\n\r\n    POST /ConvertUnit\r\n    {\r\n        \"key\": \"\",\r\n        \"authkey\": \"\",\r\n        \"lang\": \"ru\",\r\n        \"value\": 350,\r\n        \"originalunit\": \"мкг\",\r\n        \"targetunit\": \"мг\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.RequestConvert"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.RequestConvert"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.RequestConvert"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerSimple"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerSimple"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerSimple"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/Index": {
      "get": {
        "tags": [
          "Mis"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Mis/NewTherapy": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "(Основное) Проверка и назначение пациенту новой фармакотерапии c отменой всех предыдущих назначений",
        "description": "Данный API предназначен для проверки и назначения пациенту новой фармакотерапии c заменой актуальных назначений указанным. \r\nТ.е. все ЛС которые были ранее назначены будут заменены ЛС из запроса.\r\nAPI в ответ возвращает итоговое значение максимального уровня опасности (параметр danger) и URL-ссылку, по которой можно запросить результат проверки листа назначения в web-интерфейсе ЭКФ.\r\n\r\nДля каждого запроса в ответе будет уникальная ссылка, при открытии которой всегда будут отображаться одиниковые данные, которые не меняются с течением времени или при запросах на другие API.\r\n\r\nПо данному запросу система ЭКФ анализирует лист назначения и данные пациента, формирует предупреждения и соответствующие рекомендации.\r\n\r\nДля правильной работы API с растворами есть несколько правил:\r\n- сам раствор добавляется в запрос как отдельный объект \"MisDrug\" в \"drugs\", с \"type\": \"LQ\",\r\n- компоненты раствора добавляются как отдельные объекты \"MisDrug\" в \"drugs\",\r\n- у раствора и его компонентов должен быть одинаковый \"group\", он должен быть заполнен и не равен 0,\r\n- у компонентов раствора \"schedule\" не нужно заполнять, данные будут сохранены, но в расчетах участвовать не будут, будут использованы данные из \"schedule\" раствора,\r\n- \"method\" нужно указывать только для раствора, у компонентов раствора это будет проигнорировано,\r\n- все дозировки нужно указывать у компонентов раствора, для раствора все дозировки считаются по дозировкам компонентов,\r\n- для расчета скорости введения раствора нужно указать \"use_duration\" и \"use_duration_unit\", по умолчанию \"use_duration\" - 1, \"use_duration_unit\" - минута.\r\n\r\nВ поле disease_classifier указывается:\r\n- null или string.Empty - поиск по именам во всех классификаторах,\r\n- mkb10 - Поиск именам МКБ10,\r\n- mkb10code - Поиск кодам МКБ10,\r\n- mkb10multi - Поиск в МКБ10 и по именам и по кодам (не нежелательно - в редких случаях возможны неоднозначности в случае равноценных совпадений).\r\n\r\nПример запроса с диагнозом по коду МКБ-10, параметр key надо заполнить.\r\nВ поле disease/co-disease указывается код заболевания по МКБ-10\r\n\r\n    POST /NewTherapy\r\n    {\r\n        \"key\": \"ВВЕДИТЕ ВАШ КЛЮЧ!!!\",\r\n        \"clinic\": \"Test_Clinic\",\r\n        \"clinic_name\": \"Test Clinic\",\r\n        \"department\": \"Test_Department\",\r\n        \"department_name\": \"Test Department\",\r\n        \"doctor\": \"Test_Doctor\",\r\n        \"doctor_name\": \"Test Doctor\",\r\n        \"patient\": {\r\n            \"code\": \"Test_Patient\",\r\n            \"clinical_case\": \"АБ22/5366293\",\r\n            \"lastname\": \"Patient\",\r\n            \"firstname\": \"Test\",\r\n            \"patronymic\": \"MKB10\",\r\n            \"snils\": \"123-456-789 00\",\r\n            \"email\": \"test@email.net\",\r\n            \"birthdate\": 1050095200000,\r\n            \"sex\": \"m\",\r\n            \"growth\": 190,\r\n            \"weight\": 80,\r\n            \"disease\": [\r\n                \"J11.1\"\r\n            ],\r\n            \"co_disease\": [\r\n                \"I15.2\"\r\n            ],\r\n            \"disease_classifier\": \"mkb10code\",\r\n            \"allergy\": [\r\n                \"йод\"\r\n            ],\r\n            \"alcohol\": true,\r\n            \"driving\": true\r\n        },\r\n        \"drugs\": [\r\n            {\r\n                \"name\": \"Парацетамол\",\r\n                \"type\": \"TN\",\r\n                \"form\": \"таблетка\",\r\n                \"method\": \"в/в\",\r\n                \"dosage\": [\r\n                    2.5\r\n                 ],\r\n                \"dosage_unit\": \"мг\",\r\n                \"use_calc\": 1,\r\n                \"use_calc_unit\": \"г\",\r\n                \"schedule\": {\r\n                    \"dateStart\": 1661904000000,\r\n                    \"duration\": \"ежедневно\",\r\n                    \"sequence\": \"1 раз в день\"\r\n                },\r\n                \"fp_form\": \"блистер\",\r\n                \"fp_dosage\": 10,\r\n                \"fp_dosage_unit\": \"штука\",\r\n                \"specials\": \"после еды\"\r\n            }\r\n        ],\r\n        \"parsedrugs\": [\r\n            \"Умифеновир 10 мг 3 раза в день по 0,5 г до отмены\"\r\n        ],\r\n        \"lang\": \"ru\"\r\n    }\r\n    \r\nПример запроса с диагнозом строкой, параметр key надо заполнить\r\n \r\n    POST /NewTherapy\r\n    {\r\n        \"key\": \"ВВЕДИТЕ ВАШ КЛЮЧ!!!\",\r\n        \"clinic\": \"Test_Clinic\",\r\n        \"clinic_name\": \"Test Clinic\",\r\n        \"department\": \"Test_Department\",\r\n        \"department_name\": \"Test Department\",\r\n        \"doctor\": \"Test_Doctor\",\r\n        \"doctor_name\": \"Test Doctor\",\r\n        \"patient\": {\r\n            \"code\": \"Test_Patient\",\r\n            \"clinical_case\": \"АБ22/5366293\",\r\n            \"lastname\": \"Patient\",\r\n            \"firstname\": \"Test\",\r\n            \"patronymic\": \"disease string\",\r\n            \"snils\": \"123-456-789 00\",\r\n            \"email\": \"test@email.net\",\r\n            \"birthdate\": 1050095200000,\r\n            \"sex\": \"m\",\r\n            \"growth\": 190,\r\n            \"weight\": 80,\r\n            \"disease\": [\r\n                \"Катаральная ангина\"\r\n            ],\r\n            \"co_disease\": [\r\n                \"Геморрой\"\r\n            ],\r\n            \"allergy\": [\r\n                \"йод\"\r\n            ],\r\n            \"alcohol\": true,\r\n            \"driving\": true\r\n        },\r\n        \"drugs\": [\r\n            {\r\n                \"name\": \"Парацетамол\",\r\n                \"type\": \"TN\",\r\n                \"form\": \"таблетка\",\r\n                \"method\": \"в/в\",\r\n                \"dosage\": [\r\n                    2.5\r\n                 ],\r\n                \"dosage_unit\": \"мг\",\r\n                \"use_calc\": 1,\r\n                \"use_calc_unit\": \"г\",\r\n                \"schedule\": {\r\n                    \"dateStart\": 1661904000000,\r\n                    \"duration\": \"ежедневно\",\r\n                    \"sequence\": \"1 раз в день\"\r\n                },\r\n                \"fp_form\": \"блистер\",\r\n                \"fp_dosage\": 10,\r\n                \"fp_dosage_unit\": \"штука\",\r\n                \"specials\": \"после еды\"\r\n            }\r\n        ],\r\n        \"parsedrugs\": [\r\n            \"Умифеновир 10 мг 3 раза в день по 0,5 г до отмены\"\r\n        ],\r\n        \"lang\": \"ru\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisNewTherapyReponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisNewTherapyReponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisNewTherapyReponse"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/Order": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "Логика работы старого ЭКФ - Получение сохранённого/изменённого листа назначений (для MIS)",
        "description": "Значения для параметра key надо брать из ответа API Mis/Warnings, параметр \"misurl\", все что после \"*/protocol/\" \r\n\r\nПример запроса\r\n\r\n    POST /Order\r\n    {\r\n        \"key\": \"CiEIqtTMmMAvEhg2MTQ4Nzc5OWE1Nzg0MDI1MDMwNDJkZTg=\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.Key"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.Key"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.Key"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Mis/ParseDrugs": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "Парсинг МИС-ЛС из списка строк",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.ParseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.ParseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.ParseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.ParseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.ParseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.ParseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/ParseFPDosage": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "Парсинг/формализация дозировок фармпрепаратов (ДВК, растворы), пока интеграторам не показывать",
        "description": "Пример запроса, параметр key надо заполнить\r\n\r\n    POST /ParseFPDosage\r\n    {\r\n        \"key\":\"\",\r\n        \"lang\":\"ru\",\r\n        \"fpdosage\":\"100 г+200мг+ 50мкг +20 мкг/5мл\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.MisParseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.MisParseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.MisParseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerMisDosage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerMisDosage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerMisDosage"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/Protocol": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "Логика работы старого ЭКФ - Режим \"без предыдущих назначений\". Получение сохранённого листа назначений (для фронта)",
        "description": "Значения для параметра key надо брать из ответа API Mis/Warnings, параметр \"misurl\", все что после \"*/protocol/\" \r\n\r\nПример запроса\r\n\r\n    POST /Protocol\r\n    {\r\n        \"key\": \"CiEIqtTMmMAvEhg2MTQ4Nzc5OWE1Nzg0MDI1MDMwNDJkZTg=\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.Key"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.Key"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.Key"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.CheckLog"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.CheckLog"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.CheckLog"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/ResultChecking": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "API для получения результатов конкретной проверки по ключу",
        "description": "Параметр key брать из ответа API Mis/NewTherapy, параметр url, все что после \"https://[домен]/ResultChecking/\"",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.ResultCheckingArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.ResultCheckingArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.ResultCheckingArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.SetInfoPreparations"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.SetInfoPreparations"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.SetInfoPreparations"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/Status": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "Логика работы старого ЭКФ - Проверка списка назначений на конфликты (варнинги)",
        "description": "Пример запроса, параметр key или authkey, clinic, doctor, patient.code надо заполнить\r\n\r\n    POST /Status\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"lang\": \"ru\",\r\n\t\t\"clinic\": \"\",\r\n\t\t\"clinic_name\": \"\",\r\n\t\t\"doctor\": \"\",\r\n\t\t\"doctor_name\": \"\",\r\n\t\t\"patient\": {\r\n\t\t\t\"code\": \"\",\r\n\t\t\t\"birthdate\": 672339281291,\r\n\t\t\t\"sex\": \"male\",\r\n\t\t\t\"growth\": 170,\r\n\t\t\t\"weight\": 80,\r\n\t\t\t\"disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"6TcKwCDuD0CCr2QjUgl0UA==\",\r\n\t\t\t\t\t\"name\": \"диарея\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"tDZ/lbIl+J157GZPZTaOVg==\",\r\n\t\t\t\t\t\"name\": \"геморрой\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"x9iOERvHhEvz6n5XoXwrCw==\",\r\n\t\t\t\t\t\"name\": \"коронавирусная инфекция COVID-19\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"fIWQDpvvyztQF2Xm2po7wg==\",\r\n\t\t\t\t\t\"name\": \"Геморрой\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"vneaYow+8KFxI2MN0or/3g==\",\r\n\t\t\t\t\t\"name\": \"отравление\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"co_disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"1+/JJBEa1GEkoJPaqHoAlg==\",\r\n\t\t\t\t\t\"name\": \"лактостаз\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"allergy\": [],\r\n\t\t\t\"pregnancy\": false,\r\n\t\t\t\"lactation\": false,\r\n\t\t\t\"driving\": true,\r\n\t\t\t\"alcohol\": true\r\n\t\t},\r\n\t\t\"drugs\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"FvAHVPvYcrCQRkHH0nem4g==\",\r\n\t\t\t\t\"name\": \"Лирика\",\r\n\t\t\t\t\"mnnname\": \"Pregabalinum\",\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"freq\": \"каждые 30 мин\",\r\n\t\t\t\t\"freq_id\": \"BJ6ybdRulIhypOEQtOpszQ==\",\r\n\t\t\t\t\"duration\": \"16 дней\",\r\n\t\t\t\t\"solute\": false,\r\n\t\t\t\t\"dosage\": {\r\n\t\t\t\t\t\"form\": \"LzgxSBp948dZW6Jk8Yn0Jw==\",\r\n\t\t\t\t\t\"method\": \"azk9D8yXCUT1fH5MCHl0mg==\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"value_1\": 25,\r\n\t\t\t\t\t\t\t\"id_1\": \"248\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"value\": [\r\n\t\t\t\t\t\t25\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"342\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"252\",\r\n\t\t\t\t\t\"dayCount\": 48,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0.000003125\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0.012\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0.00015000000000000001\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {\r\n\t\t\t\t\t\"dateStart\": 1631221200000,\r\n\t\t\t\t\t\"dateFinish\": 1632689999999,\r\n\t\t\t\t\t\"interval\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"every\",\r\n\t\t\t\t\t\t\t\"x\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"mnnid\": \"P4JRpmB91i8DAPnvivqr5g==\",\r\n\t\t\t\t\"liquid\": false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0002\",\r\n\t\t\t\t\"id\": \"MQ9YphmNn3183svjp1oDAA==\",\r\n\t\t\t\t\"name\": \"Трамадол\",\r\n\t\t\t\t\"mnnname\": \"Tramadolum\",\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"freq\": \"3 раза в день\",\r\n\t\t\t\t\"freq_id\": \"d0KWzXuvobA1wfOiLWyusA==\",\r\n\t\t\t\t\"duration\": \"10 дней\",\r\n\t\t\t\t\"solute\": true,\r\n\t\t\t\t\"dosage\": {\r\n\t\t\t\t\t\"form\": \"aEJd0HuLPFsMG/QDaKiwSg==\",\r\n\t\t\t\t\t\"method\": \"azk9D8yXCUT1fH5MCHl0mg==\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"value_1\": 100,\r\n\t\t\t\t\t\t\t\"id_1\": \"248\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"value\": [\r\n\t\t\t\t\t\t100\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0.1\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"342\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"248\",\r\n\t\t\t\t\t\"dayCount\": 3,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0.1\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0.00125\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0.30000000000000004\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0.00375\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {\r\n\t\t\t\t\t\"dateStart\": 1631566800000,\r\n\t\t\t\t\t\"dateFinish\": 1632517199999,\r\n\t\t\t\t\t\"interval\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"count\",\r\n\t\t\t\t\t\t\t\"x\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"mnnid\": \"4XQW4wHrVOq7KghPzzwFaA==\",\r\n\t\t\t\t\"liquid\": false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0003\",\r\n\t\t\t\t\"id\": \"MQ9YphmNn3183svjp1oDAA==\",\r\n\t\t\t\t\"name\": \"Трамадол\",\r\n\t\t\t\t\"mnnname\": \"Tramadolum\",\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"group\": 0,\r\n\t\t\t\t\"solute\": true,\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"42\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"248\",\r\n\t\t\t\t\t\"dayCount\": 1,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {},\r\n\t\t\t\t\"mnnid\": \"4XQW4wHrVOq7KghPzzwFaA==\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0004\",\r\n\t\t\t\t\"id\": \"EkCSR12cihwoG6eRvjQgsQ==\",\r\n\t\t\t\t\"name\": \"Валидол\",\r\n\t\t\t\t\"mnnname\": \"Solutio Levomentholi in Menthylii isovalerate\",\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"specials\": \"комент\",\r\n\t\t\t\t\"freq\": \"1 раз в день\",\r\n\t\t\t\t\"freq_id\": \"CrjuCSzHZJ4I6PSMAXzTpw==\",\r\n\t\t\t\t\"duration\": \"10 дней\",\r\n\t\t\t\t\"solute\": false,\r\n\t\t\t\t\"dosage\": {\r\n\t\t\t\t\t\"form\": \"Cr4vKExMlmKfD0VxZFHpfg==\",\r\n\t\t\t\t\t\"method\": \"JCdH/pHsBIClXumxbFdyWQ==\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"value_1\": 60,\r\n\t\t\t\t\t\t\t\"id_1\": \"248\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"value\": [\r\n\t\t\t\t\t\t60\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0.06\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"342\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"248\",\r\n\t\t\t\t\t\"dayCount\": 1,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0.06\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0.00075\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0.06\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0.00075\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {\r\n\t\t\t\t\t\"dateStart\": 1631566800000,\r\n\t\t\t\t\t\"dateFinish\": 1632517199999,\r\n\t\t\t\t\t\"interval\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"count\",\r\n\t\t\t\t\t\t\t\"x\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"mnnid\": \"SmsI4b+of0d5hwhW3PW0tQ==\"\r\n\t\t\t}\r\n\t\t]\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.CheckResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.CheckResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.CheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Mis/Warnings": {
      "post": {
        "tags": [
          "Mis"
        ],
        "summary": "Логика работы старого ЭКФ - Проверка списка назначений на конфликты (варнинги)",
        "description": "Пример запроса, параметр key или authkey, clinic_id, clinic_name, doctor_id, doctor_name надо заполнить\r\n\r\n    POST /Warnings\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"clinic_id\": \"\",\r\n\t\t\"clinic_name\": \"\",\r\n\t\t\"doctor_id\": \"\",\r\n\t\t\"doctor_name\": \"\",\r\n\t\t\"patient\": {\r\n\t\t\t\"misid\": \"fdgrd352\",\r\n\t\t\t\"email\": \"ecp@gmail.com\",\r\n\t\t\t\"name\": \"тест рецепт шавм\",\r\n\t\t\t\"fio\": \"тест рецепт шавм\",\r\n\t\t\t\"snils\": \"545-484-651 65\",\r\n\t\t\t\"birthdate\": 672339281291,\r\n\t\t\t\"sex\": \"male\",\r\n\t\t\t\"growth\": 170,\r\n\t\t\t\"weight\": 80,\r\n\t\t\t\"disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"6TcKwCDuD0CCr2QjUgl0UA==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"диарея\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"tDZ/lbIl+J157GZPZTaOVg==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"геморрой\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"x9iOERvHhEvz6n5XoXwrCw==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"коронавирусная инфекция COVID-19\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"fIWQDpvvyztQF2Xm2po7wg==\",\r\n\t\t\t\t\t\"type\": \"MKB10\",\r\n\t\t\t\t\t\"name\": \"Геморрой\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"vneaYow+8KFxI2MN0or/3g==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"отравление\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"co_disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"1+/JJBEa1GEkoJPaqHoAlg==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"лактостаз\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"allergy\": [],\r\n\t\t\t\"labparams\": [],\r\n\t\t\t\"pregnancy\": false,\r\n\t\t\t\"lactation\": false,\r\n\t\t\t\"driving\": true,\r\n\t\t\t\"alcohol\": true,\r\n\t\t\t\"genpassport_exist\": true,\r\n\t\t\t\"mutations\": [],\r\n\t\t\t\"lastname\": \"тест\",\r\n\t\t\t\"patronymic\": \"шаверма\",\r\n\t\t\t\"firstname\": \"рецепт\",\r\n\t\t\t\"policy_num\": \"4863 4348 6767 5345\",\r\n\t\t\t\"medcard_num\": {\r\n\t\t\t\t\"default\": \"аывпукпукп\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"liquids\": [],\r\n\t\t\"drugs\": [\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0001\",\r\n\t\t\t\t\"id\": \"FvAHVPvYcrCQRkHH0nem4g==\",\r\n\t\t\t\t\"name\": \"Лирика\",\r\n\t\t\t\t\"mnnname\": \"Pregabalinum\",\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"freq\": \"каждые 30 мин\",\r\n\t\t\t\t\"freq_id\": \"BJ6ybdRulIhypOEQtOpszQ==\",\r\n\t\t\t\t\"duration\": \"16 дней\",\r\n\t\t\t\t\"solute\": false,\r\n\t\t\t\t\"dosage\": {\r\n\t\t\t\t\t\"form\": \"LzgxSBp948dZW6Jk8Yn0Jw==\",\r\n\t\t\t\t\t\"method\": \"azk9D8yXCUT1fH5MCHl0mg==\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"value_1\": 25,\r\n\t\t\t\t\t\t\t\"id_1\": \"248\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"value\": [\r\n\t\t\t\t\t\t25\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"342\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"252\",\r\n\t\t\t\t\t\"dayCount\": 48,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0.000003125\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0.012\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0.00015000000000000001\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {\r\n\t\t\t\t\t\"dateStart\": 1631221200000,\r\n\t\t\t\t\t\"dateFinish\": 1632689999999,\r\n\t\t\t\t\t\"interval\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"every\",\r\n\t\t\t\t\t\t\t\"x\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"mnnid\": \"P4JRpmB91i8DAPnvivqr5g==\",\r\n\t\t\t\t\"liquid\": false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0002\",\r\n\t\t\t\t\"id\": \"MQ9YphmNn3183svjp1oDAA==\",\r\n\t\t\t\t\"name\": \"Трамадол\",\r\n\t\t\t\t\"mnnname\": \"Tramadolum\",\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"freq\": \"3 раза в день\",\r\n\t\t\t\t\"freq_id\": \"d0KWzXuvobA1wfOiLWyusA==\",\r\n\t\t\t\t\"duration\": \"10 дней\",\r\n\t\t\t\t\"solute\": true,\r\n\t\t\t\t\"dosage\": {\r\n\t\t\t\t\t\"form\": \"aEJd0HuLPFsMG/QDaKiwSg==\",\r\n\t\t\t\t\t\"method\": \"azk9D8yXCUT1fH5MCHl0mg==\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"value_1\": 100,\r\n\t\t\t\t\t\t\t\"id_1\": \"248\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"value\": [\r\n\t\t\t\t\t\t100\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0.1\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"342\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"248\",\r\n\t\t\t\t\t\"dayCount\": 3,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0.1\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0.00125\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0.30000000000000004\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0.00375\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {\r\n\t\t\t\t\t\"dateStart\": 1631566800000,\r\n\t\t\t\t\t\"dateFinish\": 1632517199999,\r\n\t\t\t\t\t\"interval\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"count\",\r\n\t\t\t\t\t\t\t\"x\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"mnnid\": \"4XQW4wHrVOq7KghPzzwFaA==\",\r\n\t\t\t\t\"liquid\": false\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0003\",\r\n\t\t\t\t\"id\": \"MQ9YphmNn3183svjp1oDAA==\",\r\n\t\t\t\t\"name\": \"Трамадол\",\r\n\t\t\t\t\"mnnname\": \"Tramadolum\",\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"group\": 0,\r\n\t\t\t\t\"solute\": true,\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"42\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"248\",\r\n\t\t\t\t\t\"dayCount\": 1,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {},\r\n\t\t\t\t\"mnnid\": \"4XQW4wHrVOq7KghPzzwFaA==\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0004\",\r\n\t\t\t\t\"id\": \"EkCSR12cihwoG6eRvjQgsQ==\",\r\n\t\t\t\t\"name\": \"Валидол\",\r\n\t\t\t\t\"mnnname\": \"Solutio Levomentholi in Menthylii isovalerate\",\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"specials\": \"комент\",\r\n\t\t\t\t\"freq\": \"1 раз в день\",\r\n\t\t\t\t\"freq_id\": \"CrjuCSzHZJ4I6PSMAXzTpw==\",\r\n\t\t\t\t\"duration\": \"10 дней\",\r\n\t\t\t\t\"solute\": false,\r\n\t\t\t\t\"dosage\": {\r\n\t\t\t\t\t\"form\": \"Cr4vKExMlmKfD0VxZFHpfg==\",\r\n\t\t\t\t\t\"method\": \"JCdH/pHsBIClXumxbFdyWQ==\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"value_1\": 60,\r\n\t\t\t\t\t\t\t\"id_1\": \"248\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"value\": [\r\n\t\t\t\t\t\t60\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0.06\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"342\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"248\",\r\n\t\t\t\t\t\"dayCount\": 1,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0.06\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0.00075\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0.06\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0.00075\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {\r\n\t\t\t\t\t\"dateStart\": 1631566800000,\r\n\t\t\t\t\t\"dateFinish\": 1632517199999,\r\n\t\t\t\t\t\"interval\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"count\",\r\n\t\t\t\t\t\t\t\"x\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"mnnid\": \"SmsI4b+of0d5hwhW3PW0tQ==\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"return_subjects\": false,\r\n\t\t\"service\": \"108\"\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.CheckLog"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.CheckLog"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.CheckLog"
                }
              }
            }
          }
        }
      }
    },
    "/Params/DosageCacheRemove": {
      "post": {
        "tags": [
          "Params"
        ],
        "summary": "Сервисное АПИ - удаление (сразу, без времени жизни) из кэша (дозировоки, ЛФ, СП, Упаковки и т.д.) ЛС.",
        "description": "Пример запроса, параметр key или authkey, надо заполнить\r\n\r\n    POST /DosageCacheRemove\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"libid\": 52,\r\n\t\t\"drugid\": 1446\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.DosageCacheRemoveArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.DosageCacheRemoveArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.DosageCacheRemoveArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              }
            }
          }
        }
      }
    },
    "/Params/Index": {
      "get": {
        "tags": [
          "Params"
        ],
        "summary": "Тестовый гет-запрос",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Prescript/Actual": {
      "post": {
        "tags": [
          "Prescript"
        ],
        "summary": "Получение активной фармакотерапии пациента",
        "description": "Пример запроса, параметр key или authkey, idDoctor, id (ID пациента) надо заполнить\r\n\r\n    POST /Actual\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"service\":\"108\",\r\n        \"active_language\":\"ru\",\r\n        \"idDoctor\": \"\",\r\n        \"id\":\"\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.GetPatient"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.GetPatient"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.GetPatient"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
                }
              }
            }
          }
        }
      }
    },
    "/Prescript/Index": {
      "get": {
        "tags": [
          "Prescript"
        ],
        "summary": "Тестовый гет-запрос",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Prescript/New": {
      "post": {
        "tags": [
          "Prescript"
        ],
        "summary": "Сохранение протокола назначения фармакотерапии (и изменение старых)",
        "description": "Пример запроса, параметр key или authkey, clinic_id, doctor_id, patient.id надо заполнить\r\n\r\n    POST /New\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"clinic_id\": \"\",\r\n\t\t\"clinic_name\": \"\",\r\n\t\t\"doctor_id\": \"\",\r\n\t\t\"doctor_name\": \"\",\r\n\t\t\"patient\": {\r\n\t\t\t\"id\": \"\",\r\n\t\t\t\"email\": \"ecp@gmail.com\",\r\n\t\t\t\"name\": \"тест рецепт шавм\",\r\n\t\t\t\"fio\": \"тест рецепт шавм\",\r\n\t\t\t\"snils\": \"545-484-651 65\",\r\n\t\t\t\"birthdate\": 672339281291,\r\n\t\t\t\"sex\": \"male\",\r\n\t\t\t\"growth\": 170,\r\n\t\t\t\"weight\": 80,\r\n\t\t\t\"masIndex\": 27.68,\r\n\t\t\t\"disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"key\": \"1629204136981\",\r\n\t\t\t\t\t\"id\": \"tDZ/lbIl+J157GZPZTaOVg==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"level\": 920,\r\n\t\t\t\t\t\"name\": \"геморрой\",\r\n\t\t\t\t\t\"group\": 0,\r\n\t\t\t\t\t\"main\": true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"key\": \"1629204149029\",\r\n\t\t\t\t\t\"id\": \"x9iOERvHhEvz6n5XoXwrCw==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"level\": 184,\r\n\t\t\t\t\t\"name\": \"коронавирусная инфекция COVID-19\",\r\n\t\t\t\t\t\"group\": 0,\r\n\t\t\t\t\t\"main\": true\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"co_disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"1+/JJBEa1GEkoJPaqHoAlg==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"лактостаз\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"allergy\": [],\r\n\t\t\t\"labparams\": [],\r\n\t\t\t\"pregnancy\": false,\r\n\t\t\t\"lactation\": false,\r\n\t\t\t\"driving\": true,\r\n\t\t\t\"alcohol\": true,\r\n\t\t\t\"mutations\": [],\r\n\t\t\t\"lastname\": \"тест\",\r\n\t\t\t\"patronymic\": \"шаверма\",\r\n\t\t\t\"firstname\": \"рецепт\",\r\n\t\t\t\"policy_num\": \"4863 4348 6767 5345\",\r\n\t\t\t\"medcard_num\": {\r\n\t\t\t\t\"default\": \"1447\"\r\n\t\t\t},\r\n\t\t\t\"genpassport_exist\": true\r\n\t\t},\r\n\t\t\"liquids\": [],\r\n\t\t\"deletedLiquids\": [],\r\n\t\t\"deletedDrugs\": [],\r\n\t\t\"drugs\": [\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0001\",\r\n\t\t\t\t\"id\": \"FvAHVPvYcrCQRkHH0nem4g==\",\r\n\t\t\t\t\"name\": \"Лирика\",\r\n\t\t\t\t\"mnnname\": \"Pregabalinum\",\r\n\t\t\t\t\"fpid\": null,\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"edit\": false,\r\n\t\t\t\t\"freq\": \"каждые 30 мин\",\r\n\t\t\t\t\"freq_id\": \"BJ6ybdRulIhypOEQtOpszQ==\",\r\n\t\t\t\t\"duration\": \"16 дней\",\r\n\t\t\t\t\"proto\": \"613b40f86512ebd7999ce3a1\",\r\n\t\t\t\t\"proto_date\":\"2021_09\",\r\n\t\t\t\t\"solute\": false,\r\n\t\t\t\t\"dosage\": {\r\n\t\t\t\t\t\"form\": \"LzgxSBp948dZW6Jk8Yn0Jw==\",\r\n\t\t\t\t\t\"method\": \"azk9D8yXCUT1fH5MCHl0mg==\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"value_1\": 25,\r\n\t\t\t\t\t\t\t\"id_1\": \"248\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"value\": [\r\n\t\t\t\t\t\t25\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"342\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"252\",\r\n\t\t\t\t\t\"dayCount\": 48,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0.000003125\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0.012\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0.00015000000000000001\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {\r\n\t\t\t\t\t\"dateStart\": 1631221200000,\r\n\t\t\t\t\t\"dateFinish\": 1632689999999,\r\n\t\t\t\t\t\"interval\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"every\",\r\n\t\t\t\t\t\t\t\"x\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"mnnid\": \"P4JRpmB91i8DAPnvivqr5g==\",\r\n\t\t\t\t\"liquid\": false,\r\n\t\t\t\t\"repeal\": false,\r\n\t\t\t\t\"recipes\": [\r\n\t\t\t\t\t\"JLQ\",\r\n\t\t\t\t\t\"LLQ\"\r\n\t\t\t\t],\r\n\t\t\t\t\"lastrecipe\": \"VLQ\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"recipe_data\": {\r\n\t\t\t\"formid\": \"2ApW9Ve9l7XXlXy5/59EUg==\",\r\n\t\t\t\"recipe_text\": \"комментарий к рецепту\",\r\n\t\t\t\"recipe_endtime\": null,\r\n\t\t\t\"recipe_endtimeitem\": {\r\n\t\t\t\t\"id\": \"d6xmTBQIk85ORnGJpex9gg==\",\r\n\t\t\t\t\"name\": \"30 дней\",\r\n\t\t\t\t\"value\": 30,\r\n\t\t\t\t\"unit\": 77\r\n\t\t\t},\r\n\t\t\t\"pcatcode\": \"471\",\r\n\t\t\t\"pdiscount\": \"Федеральный бюджет\",\r\n\t\t\t\"cito\": false,\r\n\t\t\t\"statim\": true,\r\n\t\t\t\"special\": true,\r\n\t\t\t\"spectext\": \"ежемесячно\"\r\n\t\t},\r\n\t\t\"return_subjects\": true\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Manager.Models.SaveProtocolResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manager.Models.SaveProtocolResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manager.Models.SaveProtocolResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Prescript/NotSaveRecipePrint": {
      "post": {
        "tags": [
          "Prescript"
        ],
        "summary": "Получить HTML-код рецепта для печати без его сохранения",
        "description": "Пример запроса, параметр key или authkey, clinic_id, doctor_id, patient.id надо заполнить\r\n\r\n    POST /RecipeNew\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"clinic_id\": \"\",\r\n\t\t\"clinic_name\": \"\",\r\n\t\t\"doctor_id\": \"\",\r\n\t\t\"doctor_name\": \"\",\r\n\t\t\"patient\": {\r\n\t\t\t\"id\": \"\",\r\n\t\t\t\"email\": \"ecp@gmail.com\",\r\n\t\t\t\"name\": \"тест рецепт шавм\",\r\n\t\t\t\"fio\": \"тест рецепт шавм\",\r\n\t\t\t\"snils\": \"545-484-651 65\",\r\n\t\t\t\"birthdate\": 672339281291,\r\n\t\t\t\"sex\": \"male\",\r\n\t\t\t\"growth\": 170,\r\n\t\t\t\"weight\": 80,\r\n\t\t\t\"masIndex\": 27.68,\r\n\t\t\t\"disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"key\": \"1629204136981\",\r\n\t\t\t\t\t\"id\": \"tDZ/lbIl+J157GZPZTaOVg==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"level\": 920,\r\n\t\t\t\t\t\"name\": \"геморрой\",\r\n\t\t\t\t\t\"group\": 0,\r\n\t\t\t\t\t\"main\": true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"key\": \"1629204149029\",\r\n\t\t\t\t\t\"id\": \"x9iOERvHhEvz6n5XoXwrCw==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"level\": 184,\r\n\t\t\t\t\t\"name\": \"коронавирусная инфекция COVID-19\",\r\n\t\t\t\t\t\"group\": 0,\r\n\t\t\t\t\t\"main\": true\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"co_disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"1+/JJBEa1GEkoJPaqHoAlg==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"лактостаз\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"allergy\": [],\r\n\t\t\t\"labparams\": [],\r\n\t\t\t\"pregnancy\": false,\r\n\t\t\t\"lactation\": false,\r\n\t\t\t\"driving\": true,\r\n\t\t\t\"alcohol\": true,\r\n\t\t\t\"mutations\": [],\r\n\t\t\t\"lastname\": \"тест\",\r\n\t\t\t\"patronymic\": \"шаверма\",\r\n\t\t\t\"firstname\": \"рецепт\",\r\n\t\t\t\"policy_num\": \"4863 4348 6767 5345\",\r\n\t\t\t\"medcard_num\": {\r\n\t\t\t\t\"default\": \"1447\"\r\n\t\t\t},\r\n\t\t\t\"genpassport_exist\": true\r\n\t\t},\r\n\t\t\"liquids\": [],\r\n\t\t\"deletedLiquids\": [],\r\n\t\t\"deletedDrugs\": [],\r\n\t\t\"drugs\": [\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0001\",\r\n\t\t\t\t\"id\": \"FvAHVPvYcrCQRkHH0nem4g==\",\r\n\t\t\t\t\"name\": \"Лирика\",\r\n\t\t\t\t\"mnnname\": \"Pregabalinum\",\r\n\t\t\t\t\"fpid\": null,\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"edit\": false,\r\n\t\t\t\t\"freq\": \"каждые 30 мин\",\r\n\t\t\t\t\"freq_id\": \"BJ6ybdRulIhypOEQtOpszQ==\",\r\n\t\t\t\t\"duration\": \"16 дней\",\r\n\t\t\t\t\"proto\": \"613b40f86512ebd7999ce3a1\",\r\n\t\t\t\t\"proto_date\":\"2021_09\",\r\n\t\t\t\t\"solute\": false,\r\n\t\t\t\t\"dosage\": {\r\n\t\t\t\t\t\"form\": \"LzgxSBp948dZW6Jk8Yn0Jw==\",\r\n\t\t\t\t\t\"method\": \"azk9D8yXCUT1fH5MCHl0mg==\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"value_1\": 25,\r\n\t\t\t\t\t\t\t\"id_1\": \"248\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"value\": [\r\n\t\t\t\t\t\t25\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"342\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"252\",\r\n\t\t\t\t\t\"dayCount\": 48,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0.000003125\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0.012\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0.00015000000000000001\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {\r\n\t\t\t\t\t\"dateStart\": 1631221200000,\r\n\t\t\t\t\t\"dateFinish\": 1632689999999,\r\n\t\t\t\t\t\"interval\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"every\",\r\n\t\t\t\t\t\t\t\"x\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"mnnid\": \"P4JRpmB91i8DAPnvivqr5g==\",\r\n\t\t\t\t\"liquid\": false,\r\n\t\t\t\t\"repeal\": false,\r\n\t\t\t\t\"recipes\": [\r\n\t\t\t\t\t\"JLQ\",\r\n\t\t\t\t\t\"LLQ\"\r\n\t\t\t\t],\r\n\t\t\t\t\"lastrecipe\": \"VLQ\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"recipe_data\": {\r\n\t\t\t\"formid\": \"2ApW9Ve9l7XXlXy5/59EUg==\",\r\n\t\t\t\"recipe_text\": \"комментарий к рецепту\",\r\n\t\t\t\"recipe_endtime\": null,\r\n\t\t\t\"recipe_endtimeitem\": {\r\n\t\t\t\t\"id\": \"d6xmTBQIk85ORnGJpex9gg==\",\r\n\t\t\t\t\"name\": \"30 дней\",\r\n\t\t\t\t\"value\": 30,\r\n\t\t\t\t\"unit\": 77\r\n\t\t\t},\r\n\t\t\t\"pcatcode\": \"471\",\r\n\t\t\t\"pdiscount\": \"Федеральный бюджет\",\r\n\t\t\t\"cito\": false,\r\n\t\t\t\"statim\": true,\r\n\t\t\t\"special\": true,\r\n\t\t\t\"spectext\": \"ежемесячно\"\r\n\t\t},\r\n\t\t\"return_subjects\": true\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.HTMLModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.HTMLModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.HTMLModel"
                }
              }
            }
          }
        }
      }
    },
    "/Prescript/Recipe": {
      "get": {
        "tags": [
          "Prescript"
        ],
        "summary": "Техническое АПИ - получение печатной формы рецепта в формате HTML по его коду.",
        "description": "Пример запроса, параметр key или authkey, id (ID пациента) надо заполнить\r\n\r\n    GET /Recipe\r\n    https://service.socmedica.dev:9004/Prescript/Recipe?code=SLQ",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.HTMLModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.HTMLModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.HTMLModel"
                }
              }
            }
          }
        }
      }
    },
    "/Prescript/RecipeCore": {
      "post": {
        "tags": [
          "Prescript"
        ],
        "summary": "Получение формализованного назначения из рецепта",
        "description": "Пример запроса, параметр key или authkey, recipe (код рецепта) надо заполнить\r\n\r\n    POST /RecipeCore\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"service\":\"108\",\r\n        \"active_language\":\"ru\",\r\n        \"recipe\":\"\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.ModelRecipeLS"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.ModelRecipeLS"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.ModelRecipeLS"
                }
              }
            }
          }
        }
      }
    },
    "/Prescript/RecipeMail": {
      "post": {
        "tags": [
          "Prescript"
        ],
        "summary": "Отправить рецепт на указанный e-mail",
        "description": "Пример запроса, параметр key или authkey, recipe (код рецепта) надо заполнить\r\n\r\n    POST /RecipeMail\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"service\":\"108\",\r\n        \"active_language\":\"ru\",\r\n        \"recipe\":\"\",\r\n        \"email\": \"ecp@gmail.com\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              }
            }
          }
        }
      }
    },
    "/Prescript/RecipeNew": {
      "post": {
        "tags": [
          "Prescript"
        ],
        "summary": "Создание нового рецепта (новый, актуальный АПИ)",
        "description": "Пример запроса, параметр key или authkey, clinic_id, doctor_id, patient.id надо заполнить\r\n\r\n    POST /RecipeNew\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"clinic_id\": \"\",\r\n\t\t\"clinic_name\": \"\",\r\n\t\t\"doctor_id\": \"\",\r\n\t\t\"doctor_name\": \"\",\r\n\t\t\"patient\": {\r\n\t\t\t\"id\": \"\",\r\n\t\t\t\"email\": \"ecp@gmail.com\",\r\n\t\t\t\"name\": \"тест рецепт шавм\",\r\n\t\t\t\"fio\": \"тест рецепт шавм\",\r\n\t\t\t\"snils\": \"545-484-651 65\",\r\n\t\t\t\"birthdate\": 672339281291,\r\n\t\t\t\"sex\": \"male\",\r\n\t\t\t\"growth\": 170,\r\n\t\t\t\"weight\": 80,\r\n\t\t\t\"masIndex\": 27.68,\r\n\t\t\t\"disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"key\": \"1629204136981\",\r\n\t\t\t\t\t\"id\": \"tDZ/lbIl+J157GZPZTaOVg==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"level\": 920,\r\n\t\t\t\t\t\"name\": \"геморрой\",\r\n\t\t\t\t\t\"group\": 0,\r\n\t\t\t\t\t\"main\": true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"key\": \"1629204149029\",\r\n\t\t\t\t\t\"id\": \"x9iOERvHhEvz6n5XoXwrCw==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"level\": 184,\r\n\t\t\t\t\t\"name\": \"коронавирусная инфекция COVID-19\",\r\n\t\t\t\t\t\"group\": 0,\r\n\t\t\t\t\t\"main\": true\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"co_disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"1+/JJBEa1GEkoJPaqHoAlg==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"лактостаз\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"allergy\": [],\r\n\t\t\t\"labparams\": [],\r\n\t\t\t\"pregnancy\": false,\r\n\t\t\t\"lactation\": false,\r\n\t\t\t\"driving\": true,\r\n\t\t\t\"alcohol\": true,\r\n\t\t\t\"mutations\": [],\r\n\t\t\t\"lastname\": \"тест\",\r\n\t\t\t\"patronymic\": \"шаверма\",\r\n\t\t\t\"firstname\": \"рецепт\",\r\n\t\t\t\"policy_num\": \"4863 4348 6767 5345\",\r\n\t\t\t\"medcard_num\": {\r\n\t\t\t\t\"default\": \"1447\"\r\n\t\t\t},\r\n\t\t\t\"genpassport_exist\": true\r\n\t\t},\r\n\t\t\"liquids\": [],\r\n\t\t\"deletedLiquids\": [],\r\n\t\t\"deletedDrugs\": [],\r\n\t\t\"drugs\": [\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0001\",\r\n\t\t\t\t\"id\": \"FvAHVPvYcrCQRkHH0nem4g==\",\r\n\t\t\t\t\"name\": \"Лирика\",\r\n\t\t\t\t\"mnnname\": \"Pregabalinum\",\r\n\t\t\t\t\"fpid\": null,\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"edit\": false,\r\n\t\t\t\t\"freq\": \"каждые 30 мин\",\r\n\t\t\t\t\"freq_id\": \"BJ6ybdRulIhypOEQtOpszQ==\",\r\n\t\t\t\t\"duration\": \"16 дней\",\r\n\t\t\t\t\"proto\": \"613b40f86512ebd7999ce3a1\",\r\n\t\t\t\t\"proto_date\":\"2021_09\",\r\n\t\t\t\t\"solute\": false,\r\n\t\t\t\t\"dosage\": {\r\n\t\t\t\t\t\"form\": \"LzgxSBp948dZW6Jk8Yn0Jw==\",\r\n\t\t\t\t\t\"method\": \"azk9D8yXCUT1fH5MCHl0mg==\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"value_1\": 25,\r\n\t\t\t\t\t\t\t\"id_1\": \"248\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"value\": [\r\n\t\t\t\t\t\t25\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"342\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"252\",\r\n\t\t\t\t\t\"dayCount\": 48,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0.000003125\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0.012\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0.00015000000000000001\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {\r\n\t\t\t\t\t\"dateStart\": 1631221200000,\r\n\t\t\t\t\t\"dateFinish\": 1632689999999,\r\n\t\t\t\t\t\"interval\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"every\",\r\n\t\t\t\t\t\t\t\"x\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"mnnid\": \"P4JRpmB91i8DAPnvivqr5g==\",\r\n\t\t\t\t\"liquid\": false,\r\n\t\t\t\t\"repeal\": false,\r\n\t\t\t\t\"recipes\": [\r\n\t\t\t\t\t\"JLQ\",\r\n\t\t\t\t\t\"LLQ\"\r\n\t\t\t\t],\r\n\t\t\t\t\"lastrecipe\": \"VLQ\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"recipe_data\": {\r\n\t\t\t\"formid\": \"2ApW9Ve9l7XXlXy5/59EUg==\",\r\n\t\t\t\"recipe_text\": \"комментарий к рецепту\",\r\n\t\t\t\"recipe_endtime\": null,\r\n\t\t\t\"recipe_endtimeitem\": {\r\n\t\t\t\t\"id\": \"d6xmTBQIk85ORnGJpex9gg==\",\r\n\t\t\t\t\"name\": \"30 дней\",\r\n\t\t\t\t\"value\": 30,\r\n\t\t\t\t\"unit\": 77\r\n\t\t\t},\r\n\t\t\t\"pcatcode\": \"471\",\r\n\t\t\t\"pdiscount\": \"Федеральный бюджет\",\r\n\t\t\t\"cito\": false,\r\n\t\t\t\"statim\": true,\r\n\t\t\t\"special\": true,\r\n\t\t\t\"spectext\": \"ежемесячно\"\r\n\t\t},\r\n\t\t\"return_subjects\": true\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.ModelRecipeNumber"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.ModelRecipeNumber"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.ModelRecipeNumber"
                }
              }
            }
          }
        }
      }
    },
    "/Prescript/RecipeNewEDS": {
      "post": {
        "tags": [
          "Prescript"
        ],
        "summary": "Создание нового рецепта подписаного ЭЦП",
        "description": "Пример запроса, параметр key или authkey надо заполнить, лучше брать готовый запрос с фронта т.к. самостоятельно правильно все сформировать будет очень сложно\r\n\r\n    POST /RecipeNewEDS\r\n    {\r\n        \"key\": \"\",\r\n        \"authkey\": \"\",\r\n        \"active_language\": \"ru\",\r\n        \"service\": \"108\",\r\n        \"message\": \"{\\\"key\\\":\\\"\\\",\\\"device_id\\\":null,\\\"active_language\\\":\\\"ru\\\",\\\"clinic_id\\\":\\\"3z3tMMpXkbyZNCdwGtspxw==\\\",\\\"clinic_code\\\":null,\\\"clinic_name\\\":\\\"Клиника ауг\\\",\\\"dep_id\\\":null,\\\"dep_code\\\":null,\\\"dep_name\\\":null,\\\"doctor_id\\\":\\\"MQLoOvfAe/jDj984HuPKXw==\\\",\\\"doctor_code\\\":null,\\\"doctor_name\\\":\\\"Светозар Пилюлькин\\\",\\\"patient\\\":{\\\"id\\\":\\\"Syxq+zvke63SFIf21oTDuA==\\\",\\\"key\\\":null,\\\"email\\\":\\\"ecp@gmail.com\\\",\\\"name\\\":\\\"тест рецепт шавм\\\",\\\"fio\\\":\\\"тест рецепт шавм\\\",\\\"snils\\\":\\\"545-484-651 65\\\",\\\"birthdate\\\":672339281291,\\\"sex\\\":\\\"male\\\",\\\"growth\\\":170,\\\"weight\\\":80,\\\"masIndex\\\":27.68,\\\"disease\\\":[{\\\"key\\\":\\\"1619110490595\\\",\\\"id\\\":\\\"6TcKwCDuD0CCr2QjUgl0UA==\\\",\\\"type\\\":\\\"Nozology\\\",\\\"level\\\":920,\\\"name\\\":\\\"диарея\\\",\\\"group\\\":0,\\\"main\\\":true},{\\\"key\\\":\\\"1629204136981\\\",\\\"id\\\":\\\"tDZ/lbIl+J157GZPZTaOVg==\\\",\\\"type\\\":\\\"Nozology\\\",\\\"level\\\":920,\\\"name\\\":\\\"геморрой\\\",\\\"group\\\":0,\\\"main\\\":true},{\\\"key\\\":\\\"1629204149029\\\",\\\"id\\\":\\\"x9iOERvHhEvz6n5XoXwrCw==\\\",\\\"type\\\":\\\"Nozology\\\",\\\"level\\\":184,\\\"name\\\":\\\"коронавирусная инфекция COVID-19\\\",\\\"group\\\":0,\\\"main\\\":true},{\\\"key\\\":\\\"1629215932727\\\",\\\"id\\\":\\\"fIWQDpvvyztQF2Xm2po7wg==\\\",\\\"type\\\":\\\"MKB10\\\",\\\"level\\\":184,\\\"name\\\":\\\"Геморрой\\\",\\\"group\\\":0,\\\"main\\\":true},{\\\"key\\\":\\\"1629215977105\\\",\\\"id\\\":\\\"vneaYow+8KFxI2MN0or/3g==\\\",\\\"type\\\":\\\"Nozology\\\",\\\"level\\\":920,\\\"name\\\":\\\"отравление\\\",\\\"group\\\":0,\\\"main\\\":true}],\\\"co_disease\\\":[{\\\"key\\\":\\\"1619110497956\\\",\\\"id\\\":\\\"1+/JJBEa1GEkoJPaqHoAlg==\\\",\\\"type\\\":\\\"Nozology\\\",\\\"level\\\":920,\\\"name\\\":\\\"лактостаз\\\",\\\"group\\\":0,\\\"main\\\":false}],\\\"allergy\\\":[],\\\"labparams\\\":[],\\\"pregnancy\\\":false,\\\"lactation\\\":false,\\\"driving\\\":true,\\\"alcohol\\\":true,\\\"mutations\\\":[],\\\"lastname\\\":\\\"тест\\\",\\\"patronymic\\\":\\\"шаверма\\\",\\\"firstname\\\":\\\"рецепт\\\",\\\"policy_num\\\":\\\"4863 4348 6767 5345\\\",\\\"medcard_num\\\":{\\\"default\\\":\\\"аывпукпукп\\\"},\\\"genpassport_exist\\\":false},\\\"liquids\\\":[],\\\"drugs\\\":[{\\\"key\\\":\\\"Drug_0001\\\",\\\"id\\\":\\\"MQ9YphmNn3183svjp1oDAA==\\\",\\\"name\\\":\\\"Трамадол\\\",\\\"mnnname\\\":\\\"Tramadolum\\\",\\\"level\\\":240,\\\"fpid\\\":null,\\\"type\\\":\\\"TN\\\",\\\"edit\\\":false,\\\"group\\\":0,\\\"text\\\":null,\\\"specials\\\":null,\\\"freq\\\":null,\\\"freq_id\\\":null,\\\"duration\\\":null,\\\"duration_id\\\":null,\\\"recipenameid\\\":null,\\\"solute\\\":true,\\\"dosage\\\":{\\\"dosage\\\":[],\\\"pack\\\":{}},\\\"calc\\\":{\\\"dosageBaseUnit\\\":\\\"42\\\",\\\"dosage\\\":[0],\\\"countBaseUnit\\\":\\\"42\\\",\\\"count\\\":1,\\\"dosageUnit\\\":\\\"248\\\",\\\"dayCount\\\":1,\\\"fullDosage\\\":[0],\\\"weightDosage\\\":[0],\\\"dayDosage\\\":[0],\\\"dayWeightDosage\\\":[0]},\\\"schedule\\\":{},\\\"helpers\\\":{\\\"dosage\\\":{},\\\"pack\\\":{}},\\\"mnnid\\\":\\\"4XQW4wHrVOq7KghPzzwFaA==\\\",\\\"liquid\\\":false,\\\"proto\\\":\\\"6138de26571cbaa8baee0bf1\\\",\\\"proto_date\\\":\\\"2021_09\\\",\\\"proto_key\\\":\\\"1631116830018\\\",\\\"repeal\\\":false,\\\"recipes\\\":[\\\"BLQ\\\",\\\"NLQ\\\",\\\"2LQ\\\"],\\\"lastrecipe\\\":\\\"2LQ\\\"}],\\\"deletedDrugs\\\":[],\\\"deletedLiquids\\\":[],\\\"text\\\":null,\\\"recipe_endtime\\\":null,\\\"recipe_endtimeitem\\\":null,\\\"recipe_formid\\\":\\\"2ApW9Ve9l7XXlXy5/59EUg==\\\",\\\"recipe_text\\\":null,\\\"service\\\":\\\"43\\\",\\\"return_subjects\\\":false,\\\"authkey\\\":\\\"c5DAQwH8p8EN7HVXibED1VmE\\\",\\\"mkb10code\\\":null,\\\"financingSource\\\":null,\\\"citizenCategory\\\":null,\\\"compensation\\\":null,\\\"fio\\\":\\\"тест рецепт шавм\\\",\\\"birthdate\\\":672339281291,\\\"snils\\\":null,\\\"insuranceNumber\\\":null,\\\"patientCard\\\":null,\\\"recipe_data\\\":{\\\"formid\\\":\\\"2ApW9Ve9l7XXlXy5/59EUg==\\\",\\\"recipe_text\\\":null,\\\"recipe_endtime\\\":null,\\\"recipe_endtimeitem\\\":null,\\\"pcatcode\\\":null,\\\"pdiscount\\\":null,\\\"cito\\\":false,\\\"statim\\\":false,\\\"special\\\":false,\\\"spectext\\\":\\\"\\\"}}\",\r\n        \"certificate\": \"MIIJLzCCCNygAwIBAgIUSX7UrfnZtdC4Zex7OX1HZKi0NAQwCgYIKoUDBwEBAwIwggFtMSAwHgYJKoZIhvcNAQkBFhF1Y19ma0Byb3NrYXpuYS5ydTEZMBcGA1UECAwQ0LMuINCc0L7RgdC60LLQsDEaMBgGCCqFAwOBAwEBEgwwMDc3MTA1Njg3NjAxGDAWBgUqhQNkARINMTA0Nzc5NzAxOTgzMDFgMF4GA1UECQxX0JHQvtC70YzRiNC+0Lkg0JfQu9Cw0YLQvtGD0YHRgtC40L3RgdC60LjQuSDQv9C10YDQtdGD0LvQvtC6LCDQtC4gNiwg0YHRgtGA0L7QtdC90LjQtSAxMRUwEwYDVQQHDAzQnNC+0YHQutCy0LAxCzAJBgNVBAYTAlJVMTgwNgYDVQQKDC/QpNC10LTQtdGA0LDQu9GM0L3QvtC1INC60LDQt9C90LDRh9C10LnRgdGC0LLQvjE4MDYGA1UEAwwv0KTQtdC00LXRgNCw0LvRjNC90L7QtSDQutCw0LfQvdCw0YfQtdC50YHRgtCy0L4wHhcNMjAwNTI5MDUzMDI5WhcNMjEwODI5MDUzMDI5WjCCAlMxGjAYBggqhQMDgQMBARIMNzczMjA3Mzc4NjYyMRYwFAYFKoUDZAMSCzAyMTIzODkzMjE2MR8wHQYJKoZIhvcNAQkBFhBtc2NoXzE1MkBtYWlsLnJ1MQswCQYDVQQGEwJSVTEsMCoGA1UECAwj0JzQvtGB0LrQvtCy0YHQutCw0Y8g0L7QsdC70LDRgdGC0YwxIzAhBgNVBAcMGtCzLiDQlNC30LXRgNC20LjQvdGB0LrQuNC5MYIBFjCCARIGA1UECgyCAQnQpNCV0JTQldCg0JDQm9Cs0J3QntCVINCT0J7QodCj0JTQkNCg0KHQotCS0JXQndCd0J7QlSDQkdCu0JTQltCV0KLQndCe0JUg0KPQp9Cg0JXQltCU0JXQndCY0JUg0JfQlNCg0JDQktCe0J7QpdCg0JDQndCV0J3QmNCvICLQnNCV0JTQmNCa0J4t0KHQkNCd0JjQotCQ0KDQndCQ0K8g0KfQkNCh0KLQrCDihJYgMTUyINCk0JXQlNCV0KDQkNCb0KzQndCe0JPQniDQnNCV0JTQmNCa0J4t0JHQmNCe0JvQntCT0JjQp9CV0KHQmtCe0JPQniDQkNCT0JXQndCi0KHQotCS0JAiMSgwJgYDVQQqDB/QmNCz0L7RgNGMINCh0LDRgNC60LjRgdC+0LLQuNGHMRswGQYDVQQEDBLQkNGA0LDQsdCw0LTQttGP0L0xOzA5BgNVBAMMMtCQ0YDQsNCx0LDQtNC20Y/QvSDQmNCz0L7RgNGMINCh0LDRgNC60LjRgdC+0LLQuNGHMGYwHwYIKoUDBwEBAQEwEwYHKoUDAgIkAAYIKoUDBwEBAgIDQwAEQGpBVDEJcP5JeqVi48jdsSwxMdql91h6paixE2CFrSzTsIdzAv5AVODsQL8w3ge3QyNdV6qgekP5qdkCdC84deKjggRhMIIEXTAMBgNVHRMBAf8EAjAAMBMGA1UdIAQMMAowCAYGKoUDZHEBMCgGA1UdEQQhMB+gHQYKKoUDAz2e1zYBCKAPEw0wMzQ4MTAwMDAwMDQwMDYGBSqFA2RvBC0MKyLQmtGA0LjQv9GC0L7Qn9GA0L4gQ1NQIiAo0LLQtdGA0YHQuNGPIDQuMCkwggFkBgUqhQNkcASCAVkwggFVDEci0JrRgNC40L/RgtC+0J/RgNC+IENTUCIg0LLQtdGA0YHQuNGPIDQuMCAo0LjRgdC/0L7Qu9C90LXQvdC40LUgMi1CYXNlKQxo0J/RgNC+0LPRgNCw0LzQvNC90L4t0LDQv9C/0LDRgNCw0YLQvdGL0Lkg0LrQvtC80L/Qu9C10LrRgSDCq9Cu0L3QuNGB0LXRgNGCLdCT0J7QodCiwrsuINCS0LXRgNGB0LjRjyAzLjAMT9Ch0LXRgNGC0LjRhNC40LrQsNGCINGB0L7QvtGC0LLQtdGC0YHRgtCy0LjRjyDihJYg0KHQpC8xMjQtMzM4MCDQvtGCIDExLjA1LjIwMTgMT9Ch0LXRgNGC0LjRhNC40LrQsNGCINGB0L7QvtGC0LLQtdGC0YHRgtCy0LjRjyDihJYg0KHQpC8xMjgtMzU4MSDQvtGCIDIwLjEyLjIwMTgwDgYDVR0PAQH/BAQDAgP4MEUGA1UdJQQ+MDwGCCsGAQUFBwMCBg0qhQMDPZ7XNgEGAwUBBg0qhQMDPZ7XNgEGAwUCBggqhQMDgXsIAQYIKoUDA4F7CAIwKwYDVR0QBCQwIoAPMjAyMDA1MjgwNTU5MDVagQ8yMDIxMDgyODA1NTkwNVowggFfBgNVHSMEggFWMIIBUoAU0GSWbXJA61h9JH+7IFvPw45setShggEspIIBKDCCASQxHjAcBgkqhkiG9w0BCQEWD2RpdEBtaW5zdnlhei5ydTELMAkGA1UEBhMCUlUxGDAWBgNVBAgMDzc3INCc0L7RgdC60LLQsDEZMBcGA1UEBwwQ0LMuINCc0L7RgdC60LLQsDEuMCwGA1UECQwl0YPQu9C40YbQsCDQotCy0LXRgNGB0LrQsNGPLCDQtNC+0LwgNzEsMCoGA1UECgwj0JzQuNC90LrQvtC80YHQstGP0LfRjCDQoNC+0YHRgdC40LgxGDAWBgUqhQNkARINMTA0NzcwMjAyNjcwMTEaMBgGCCqFAwOBAwEBEgwwMDc3MTA0NzQzNzUxLDAqBgNVBAMMI9Cc0LjQvdC60L7QvNGB0LLRj9C30Ywg0KDQvtGB0YHQuNC4ggpiq3mVAAAAAAO2MGgGA1UdHwRhMF8wLqAsoCqGKGh0dHA6Ly9jcmwucm9za2F6bmEucnUvY3JsL3VjZmtfMjAyMC5jcmwwLaAroCmGJ2h0dHA6Ly9jcmwuZnNmay5sb2NhbC9jcmwvdWNma18yMDIwLmNybDAdBgNVHQ4EFgQUl8SDgrGMGkIQBXFAttITocpGWr0wCgYIKoUDBwEBAwIDQQAIUpsDop6PUYTgZZfF8L2tbAeFJSohhCQe8s83MWApT73tgBEMB2ZD+8fjcnwtGz7Iqgk4w2fmVAzaiNXjdktm\",\r\n        \"signed_data\": \"\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeNewEDSArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeNewEDSArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeNewEDSArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.ModelRecipeNumber"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.ModelRecipeNumber"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.ModelRecipeNumber"
                }
              }
            }
          }
        }
      }
    },
    "/Prescript/RecipePrint": {
      "post": {
        "tags": [
          "Prescript"
        ],
        "summary": "Получить HTML-код рецепта для печати",
        "description": "Пример запроса, параметр key или authkey, recipe (код рецепта) надо заполнить\r\n\r\n    POST /RecipePrint\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"service\":\"108\",\r\n        \"active_language\":\"ru\",\r\n        \"recipe\":\"\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.HTMLModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.HTMLModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Methods.Recipes.HTMLModel"
                }
              }
            }
          }
        }
      }
    },
    "/Prescript/Recipes": {
      "post": {
        "tags": [
          "Prescript"
        ],
        "summary": "Получение всех рецептов выписанных пациенту со сроками окончания и действия.",
        "description": "Пример запроса, параметр key или authkey, patient_id надо заполнить\r\n\r\n    POST /Recipes\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"service\":\"108\",\r\n        \"active_language\":\"ru\",\r\n        \"patient_id\":\"\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.RecipeArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.RecipesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.RecipesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.RecipesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Prescript/RepealNew": {
      "post": {
        "tags": [
          "Prescript"
        ],
        "summary": "Сохранение протокола назначения фармакотерапии с безусловной отменой предыдущих назначений",
        "description": "Пример запроса, параметр key или authkey, clinic_id, doctor_id, patient.id надо заполнить\r\n\r\n    POST /New\r\n    {\r\n\t\t\"key\": \"\",\r\n\t\t\"authkey\": \"\",\r\n\t\t\"service\": \"108\",\r\n\t\t\"active_language\": \"ru\",\r\n\t\t\"clinic_id\": \"\",\r\n\t\t\"clinic_name\": \"\",\r\n\t\t\"doctor_id\": \"\",\r\n\t\t\"doctor_name\": \"\",\r\n\t\t\"patient\": {\r\n\t\t\t\"id\": \"\",\r\n\t\t\t\"email\": \"ecp@gmail.com\",\r\n\t\t\t\"name\": \"тест рецепт шавм\",\r\n\t\t\t\"fio\": \"тест рецепт шавм\",\r\n\t\t\t\"snils\": \"545-484-651 65\",\r\n\t\t\t\"birthdate\": 672339281291,\r\n\t\t\t\"sex\": \"male\",\r\n\t\t\t\"growth\": 170,\r\n\t\t\t\"weight\": 80,\r\n\t\t\t\"masIndex\": 27.68,\r\n\t\t\t\"disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"key\": \"1629204136981\",\r\n\t\t\t\t\t\"id\": \"tDZ/lbIl+J157GZPZTaOVg==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"level\": 920,\r\n\t\t\t\t\t\"name\": \"геморрой\",\r\n\t\t\t\t\t\"group\": 0,\r\n\t\t\t\t\t\"main\": true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"key\": \"1629204149029\",\r\n\t\t\t\t\t\"id\": \"x9iOERvHhEvz6n5XoXwrCw==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"level\": 184,\r\n\t\t\t\t\t\"name\": \"коронавирусная инфекция COVID-19\",\r\n\t\t\t\t\t\"group\": 0,\r\n\t\t\t\t\t\"main\": true\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"co_disease\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"1+/JJBEa1GEkoJPaqHoAlg==\",\r\n\t\t\t\t\t\"type\": \"Nozology\",\r\n\t\t\t\t\t\"name\": \"лактостаз\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"allergy\": [],\r\n\t\t\t\"labparams\": [],\r\n\t\t\t\"pregnancy\": false,\r\n\t\t\t\"lactation\": false,\r\n\t\t\t\"driving\": true,\r\n\t\t\t\"alcohol\": true,\r\n\t\t\t\"mutations\": [],\r\n\t\t\t\"lastname\": \"тест\",\r\n\t\t\t\"patronymic\": \"шаверма\",\r\n\t\t\t\"firstname\": \"рецепт\",\r\n\t\t\t\"policy_num\": \"4863 4348 6767 5345\",\r\n\t\t\t\"medcard_num\": {\r\n\t\t\t\t\"default\": \"1447\"\r\n\t\t\t},\r\n\t\t\t\"genpassport_exist\": true\r\n\t\t},\r\n\t\t\"liquids\": [],\r\n\t\t\"deletedLiquids\": [],\r\n\t\t\"deletedDrugs\": [],\r\n\t\t\"drugs\": [\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"Drug_0001\",\r\n\t\t\t\t\"id\": \"FvAHVPvYcrCQRkHH0nem4g==\",\r\n\t\t\t\t\"name\": \"Лирика\",\r\n\t\t\t\t\"mnnname\": \"Pregabalinum\",\r\n\t\t\t\t\"fpid\": null,\r\n\t\t\t\t\"type\": \"TN\",\r\n\t\t\t\t\"edit\": false,\r\n\t\t\t\t\"freq\": \"каждые 30 мин\",\r\n\t\t\t\t\"freq_id\": \"BJ6ybdRulIhypOEQtOpszQ==\",\r\n\t\t\t\t\"duration\": \"16 дней\",\r\n\t\t\t\t\"proto\": \"613b40f86512ebd7999ce3a1\",\r\n\t\t\t\t\"proto_date\":\"2021_09\",\r\n\t\t\t\t\"solute\": false,\r\n\t\t\t\t\"dosage\": {\r\n\t\t\t\t\t\"form\": \"LzgxSBp948dZW6Jk8Yn0Jw==\",\r\n\t\t\t\t\t\"method\": \"azk9D8yXCUT1fH5MCHl0mg==\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"value_1\": 25,\r\n\t\t\t\t\t\t\t\"id_1\": \"248\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"value\": [\r\n\t\t\t\t\t\t25\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"calc\": {\r\n\t\t\t\t\t\"dosageBaseUnit\": \"42\",\r\n\t\t\t\t\t\"dosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"countBaseUnit\": \"342\",\r\n\t\t\t\t\t\"count\": 1,\r\n\t\t\t\t\t\"dosageUnit\": \"252\",\r\n\t\t\t\t\t\"dayCount\": 48,\r\n\t\t\t\t\t\"fullDosage\": [\r\n\t\t\t\t\t\t0.00025\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"weightDosage\": [\r\n\t\t\t\t\t\t0.000003125\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayDosage\": [\r\n\t\t\t\t\t\t0.012\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"dayWeightDosage\": [\r\n\t\t\t\t\t\t0.00015000000000000001\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"schedule\": {\r\n\t\t\t\t\t\"dateStart\": 1631221200000,\r\n\t\t\t\t\t\"dateFinish\": 1632689999999,\r\n\t\t\t\t\t\"interval\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"type\": \"every\",\r\n\t\t\t\t\t\t\t\"x\": 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"mnnid\": \"P4JRpmB91i8DAPnvivqr5g==\",\r\n\t\t\t\t\"liquid\": false,\r\n\t\t\t\t\"repeal\": false,\r\n\t\t\t\t\"recipes\": [\r\n\t\t\t\t\t\"JLQ\",\r\n\t\t\t\t\t\"LLQ\"\r\n\t\t\t\t],\r\n\t\t\t\t\"lastrecipe\": \"VLQ\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"recipe_data\": {\r\n\t\t\t\"formid\": \"2ApW9Ve9l7XXlXy5/59EUg==\",\r\n\t\t\t\"recipe_text\": \"комментарий к рецепту\",\r\n\t\t\t\"recipe_endtime\": null,\r\n\t\t\t\"recipe_endtimeitem\": {\r\n\t\t\t\t\"id\": \"d6xmTBQIk85ORnGJpex9gg==\",\r\n\t\t\t\t\"name\": \"30 дней\",\r\n\t\t\t\t\"value\": 30,\r\n\t\t\t\t\"unit\": 77\r\n\t\t\t},\r\n\t\t\t\"pcatcode\": \"471\",\r\n\t\t\t\"pdiscount\": \"Федеральный бюджет\",\r\n\t\t\t\"cito\": false,\r\n\t\t\t\"statim\": true,\r\n\t\t\t\"special\": true,\r\n\t\t\t\"spectext\": \"ежемесячно\"\r\n\t\t},\r\n\t\t\"return_subjects\": true\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.GetInfoPreparations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Manager.Models.SaveProtocolResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manager.Models.SaveProtocolResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manager.Models.SaveProtocolResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Search/Allergy": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Поиск концепта по строке (ДВ и ТН. АТХ и фарм группы на данный момент отключены)",
        "description": "Пример запроса\r\n\r\n    POST /Allergy\r\n    {\r\n        \"text\":\"йод\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.SearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.SearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.SearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Search/Clinics": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Побуквенный поиск клиник",
        "description": "Пример запроса\r\n\r\n    POST /Clinics\r\n    {\r\n        \"text\":\"ауг\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.ClinicSearcherArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.ClinicSearcherArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.ClinicSearcherArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.SearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.SearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.SearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Search/Diseases": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Поиск концепта по строке (МКБ10 и пат.признаки)",
        "description": "Пример запроса\r\n\r\n    POST /Diseases\r\n    {\r\n        \"text\":\"диарея\",\r\n        \"onlycode\":false\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherDiseaseArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherDiseaseArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherDiseaseArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.SearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.SearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.SearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Search/Drugs": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Поиск концепта по строке (ДВ/ТН)",
        "description": "Пример запроса\r\n\r\n    POST /Drugs\r\n    {\r\n        \"text\":\"валидол\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.SearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.SearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.SearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Search/Form": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Поиск Лекарственной формы по строке",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerLfSp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerLfSp"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerLfSp"
                }
              }
            }
          }
        }
      }
    },
    "/Search/Index": {
      "get": {
        "tags": [
          "Search"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Search/Method": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Поиск Лекарственной формы по строке",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.LetterSearcherArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerLfSp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerLfSp"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerLfSp"
                }
              }
            }
          }
        }
      }
    },
    "/Search/MethodForm": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Поиск Лекарственной формы по строке",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.IdSearcherArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.IdSearcherArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.IdSearcherArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerLfSp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerLfSp"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerLfSp"
                }
              }
            }
          }
        }
      }
    },
    "/Search/Patients": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Побуквенный поиск пациентов",
        "description": "Пример запроса, параметр key или authkey, doctor_id надо заполнить\r\n\r\n    POST /Patients\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"doctor_id\":\"\",\r\n        \"text\":\"тест\",\r\n        \"active_language\":\"ru\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SearchPatientArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SearchPatientArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.SearchPatientArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EMC.Models.PatientsSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMC.Models.PatientsSearchResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMC.Models.PatientsSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Statistics/GetProtocol": {
      "post": {
        "tags": [
          "Statistics"
        ],
        "summary": "API для получения протокола",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.GetProtocolArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.GetProtocolArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.GetProtocolArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.SetInfoPreparations"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.SetInfoPreparations"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.SetInfoPreparations"
                }
              }
            }
          }
        }
      }
    },
    "/Statistics/Index": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Tools/CGQuestionary": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Клинические рекомендации, получение \"опросника\".",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicalGuidelines.Models.RequestCGQuestionary"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicalGuidelines.Models.RequestCGQuestionary"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicalGuidelines.Models.RequestCGQuestionary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicalGuidelines.Models.ResponseCGQuestionary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicalGuidelines.Models.ResponseCGQuestionary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicalGuidelines.Models.ResponseCGQuestionary"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/ClinicalGuidelines": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Получение \"опросника\". При заполненном \"опроснике\" в качестве аргумента - получения клинических рекомендаций.",
        "description": "Пример запроса, параметр key или authkey, patient.id надо заполнить\r\n\r\n    POST /ClinicalGuidelines\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"device_id\":null,\r\n        \"active_language\":\"ru\",\r\n        \"patient\":\r\n        {\r\n            \"id\":null,\r\n            \"alcohol\": true,\r\n\t\t    \"birthdate\": \"-41332646479\",\r\n\t\t    \"driving\": true,\r\n\t\t    \"firstname\": \"пациент\",\r\n\t\t    \"email\":\"ecp@gmail.com\",\r\n\t\t    \"name\":null,\r\n\t\t    \"fio\":null,\r\n\t\t    \"snils\":null,\r\n\t\t    \"miscode\":null,\r\n\t\t    \"misid\":null,\r\n\t\t    \"sex\":\"female\",\r\n\t\t    \"growth\":170,\r\n\t\t    \"main_address\":null,\r\n\t\t    \"masIndex\":27.68,\r\n\t\t    \"pregnancy\":false,\r\n\t\t    \"gestation\":25,\r\n\t\t    \"trimester\":2,\r\n\t\t    \"lactation\":true,\r\n\t\t    \"mutations\":[],\r\n\t\t    \"lastname\":\"тест\",\r\n\t\t    \"patronymic\":\"шаверма\",\r\n\t\t    \"policy_num\":null,\r\n\t\t    \"medcard_num\":null,\r\n\t\t    \"weight\": 80,\r\n            \"disease\":[\r\n            {\r\n                \"id\":\"tDZ/lbIl+J157GZPZTaOVg==\",\r\n                \"type\":\"Nozology\",\r\n                \"level\":920,\r\n                \"name\":\"Геморрой\",\r\n                \"group\":0,\r\n                \"main\":true,\r\n                \"key\":\"1631196323040\",\r\n                \"title\":\"Геморрой\"\r\n            }],\r\n            \"co_disease\":[],\r\n            \"allergy\":[],\r\n            \"labparams\":[],\r\n            \"genpassport_exist\":false\r\n        },\r\n        \"service\":\"108\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicalGuidelines.Models.RequestClinRec"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicalGuidelines.Models.RequestClinRec"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicalGuidelines.Models.RequestClinRec"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Tools/ClinicalGuidelinesExist": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Получение списка клинических рекомендаций для выбора по которым проходить анкетирование",
        "description": "Пример запроса, параметр key или authkey надо заполнить\r\n\r\n    POST /ClinicalGuidelinesExist\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"device_id\":null,\r\n        \"service\":\"108\",\r\n        \"active_language\":\"ru\",\r\n        \"disease\":[\r\n        {\r\n            \"id\":\"tDZ/lbIl+J157GZPZTaOVg==\",\r\n            \"type\":\"Nozology\",\r\n            \"name\":\"Геморрой\"\r\n        },\r\n        {\r\n            \"id\":\"5NPEFYebJgtVHkehexj0Zg==\",\r\n            \"type\":\"Nozology\",\r\n            \"name\":\"Рак молочной железы\"\r\n        },\r\n        {\r\n            \"id\":\"x9iOERvHhEvz6n5XoXwrCw==\",\r\n            \"type\":\"Nozology\",\r\n            \"name\":\"Коронавирусная инфекция COVID-19\"\r\n        }]\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicalGuidelines.Models.RequestClinRec"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicalGuidelines.Models.RequestClinRec"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClinicalGuidelines.Models.RequestClinRec"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicalGuidelines.Models.ClinRecExistResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicalGuidelines.Models.ClinRecExistResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClinicalGuidelines.Models.ClinRecExistResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/DoctorGet": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Получение врача по key/autkey",
        "description": "Пример запроса, параметр key или authkey надо заполнить\r\n\r\n    POST /DoctorGet\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"service\":\"108\",\r\n        \"active_language\":\"ru\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.DoctorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.DoctorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.DoctorModel"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/DoctoSet": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Редактирование информации врача о себе.",
        "description": "Пример запроса, параметр key или authkey, id (ID доктора) надо заполнить\r\n\r\n    POST /DoctoSet\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"service\":\"108\",\r\n        \"active_language\":\"ru\",\r\n\t\t\"licenses\": [\r\n\t\t\t\"лицензия\",\r\n\t\t\t\"лицензия1\"\r\n\t\t],\r\n\t\t\"diploms\": [\r\n\t\t\t\"диплом\",\r\n\t\t\t\"диплом1\"\r\n\t\t],\r\n\t\t\"snils\": \"457-882-425 84\",\r\n\t\t\"sex\": \"men\",\r\n\t\t\"patronymic\": \"шаверма\",\r\n\t\t\"lname\": \"тест\",\r\n\t\t\"fname\": \"доктор\",\r\n\t\t\"fio\": \"тест доктор шаверма\",\r\n\t\t\"id\": \"\",\r\n\t\t\"emails\": [\r\n\t\t\t\"ecp@gmail.com\",\r\n\t\t\t\"ecp1@gmail.com\"\r\n\t\t],\r\n\t\t\"phone\": [\r\n\t\t\t\"+79998884455\",\r\n\t\t\t\"89997776611\"\r\n\t\t]\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EMCLib.EMC.ECP.Models.DoctorModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EMCLib.EMC.ECP.Models.DoctorModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EMCLib.EMC.ECP.Models.DoctorModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/GetLastPatients": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Получение последних пациентов которых запрашивал врач (API Prescript/Actual, Tools/PatientGet), пациентов придет сколько указано в Count или сколько врач просмотрел",
        "description": "Пример запроса, параметр Key или Authkey, Doctor_id надо заполнить, Count по умолчанию 10\r\n\r\n    POST /GetLastPatients\r\n    {\r\n        \"Key\": \"\",\r\n        \"Authkey\": \"\",\r\n        \"Doctor_id\": \"\",\r\n        \"Service\": \"108\",\r\n        \"Active_language\": \"ru\",\r\n        \"Count\": 2\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.GetLastPatientsArgs"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.GetLastPatientsArgs"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.GetLastPatientsArgs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.Patients.LastPatientsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.Patients.LastPatientsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.Patients.LastPatientsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/Index": {
      "get": {
        "tags": [
          "Tools"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Tools/PatientAdd": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Добавление нового пациента",
        "description": "Пример запроса, параметр key или authkey, doctorId, clinicId не обязательны для заполнения но у пользователя должна быть роль врач\r\n\r\n    POST /PatientAdd\r\n    {\r\n\t    \"key\":\"\",\r\n\t    \"authkey\":\"\",\r\n\t    \"active_language\":\"ru\",\r\n\t    \"doctorId\":\"\",\r\n\t    \"clinicId\":\"\",\r\n\t    \"patient\":\r\n\t    {\r\n\t\t    \"alcohol\": true,\r\n\t\t    \"birthdate\": \"-41332646479\",\r\n\t\t    \"driving\": true,\r\n\t\t    \"firstname\": \"пациент\",\r\n\t\t    \"email\":\"ecp@gmail.com\",\r\n\t\t    \"name\":null,\r\n\t\t    \"fio\":null,\r\n\t\t    \"snils\":null,\r\n\t\t    \"miscode\":null,\r\n\t\t    \"misid\":null,\r\n\t\t    \"sex\":\"female\",\r\n\t\t    \"growth\":170,\r\n\t\t    \"main_address\":null,\r\n\t\t    \"masIndex\":27.68,\r\n\t\t    \"pregnancy\":false,\r\n\t\t    \"gestation\":25,\r\n\t\t    \"trimester\":2,\r\n\t\t    \"lactation\":true,\r\n\t\t    \"mutations\":[],\r\n\t\t    \"lastname\":\"тест\",\r\n\t\t    \"patronymic\":\"шаверма\",\r\n\t\t    \"policy_num\":null,\r\n\t\t    \"medcard_num\":null,\r\n\t\t    \"weight\": 80,\r\n\t\t    \"disease\":\r\n\t\t    [\r\n\t\t\t    {\r\n\t\t\t    \"id\":\"tDZ/lbIl+J157GZPZTaOVg==\",\r\n\t\t\t    \"type\":\"Nozology\",\r\n\t\t\t    \"level\":920,\r\n\t\t\t    \"name\":\"Геморрой\",\r\n\t\t\t    \"key\":\"1630418159649\",\r\n\t\t\t    \"title\":\"Геморрой\",\r\n\t\t\t    \"main\":true\r\n\t\t\t    },\r\n\t\t\t    {\r\n\t\t\t    \"id\":\"5NPEFYebJgtVHkehexj0Zg==\",\r\n\t\t\t    \"type\":\"Nozology\",\r\n\t\t\t    \"level\":1102,\r\n\t\t\t    \"name\":\"Рак молочной железы\",\r\n\t\t\t    \"key\":\"1630418165433\",\r\n\t\t\t    \"title\":\"Рак молочной железы\",\r\n\t\t\t    \"main\":true\r\n\t\t\t    },\r\n\t\t\t    {\r\n\t\t\t    \"id\":\"1+/JJBEa1GEkoJPaqHoAlg==\",\r\n\t\t\t    \"type\":\"Nozology\",\r\n\t\t\t    \"level\":920,\r\n\t\t\t    \"name\":\"Лактостаз\",\r\n\t\t\t    \"key\":\"1630418173937\",\r\n\t\t\t    \"title\":\"Лактостаз\",\r\n\t\t\t    \"main\":true\r\n\t\t\t    },\r\n\t\t\t    {\r\n\t\t\t    \"id\":\"vneaYow+8KFxI2MN0or/3g==\",\r\n\t\t\t    \"type\":\"Nozology\",\r\n\t\t\t    \"level\":920,\r\n\t\t\t    \"name\":\"Отравление\",\r\n\t\t\t    \"key\":\"1630418179329\",\r\n\t\t\t    \"title\":\"Отравление\",\r\n\t\t\t    \"main\":true\r\n\t\t\t    },\r\n\t\t\t    {\r\n\t\t\t    \"id\":\"PuXB7inJkkS+2sJx/fYF1A==\",\r\n\t\t\t    \"type\":\"Nozology\",\r\n\t\t\t    \"level\":920,\r\n\t\t\t    \"name\":\"Бредовые идеи\",\r\n\t\t\t    \"key\":\"1630418183329\",\r\n\t\t\t    \"title\":\"Бредовые идеи\",\r\n\t\t\t    \"main\":true\r\n\t\t\t    },\r\n\t\t\t    {\r\n\t\t\t    \"id\":\"FjcB6F/QVg5rGEf1C1aQHw==\",\r\n\t\t\t    \"type\":\"Nozology\",\r\n\t\t\t    \"level\":920,\r\n\t\t\t    \"name\":\"Опухоль\",\r\n\t\t\t    \"key\":\"1630418188113\",\r\n\t\t\t    \"title\":\"Опухоль\",\r\n\t\t\t    \"main\":true\r\n\t\t\t    }\r\n\t\t    ],\r\n\t\t    \"co_disease\":\r\n\t\t    [\r\n\t\t\t    {\r\n\t\t\t    \"id\":\"ciMFIRlZCgqX0LJqtigCpA==\",\r\n\t\t\t    \"type\":\"Nozology\",\r\n\t\t\t    \"level\":920,\r\n\t\t\t    \"name\":\"Лактозурия\",\r\n\t\t\t    \"group\":0,\r\n\t\t\t    \"main\":false,\r\n\t\t\t    \"key\":\"1631199078742\",\r\n\t\t\t    \"title\":\"Лактозурия\"\r\n\t\t\t    },\r\n\t\t\t    {\r\n\t\t\t    \"id\":\"zE8e2VKW6u8Ugs5hAcTu1A==\",\r\n\t\t\t    \"type\":\"Nozology\",\r\n\t\t\t    \"level\":920,\r\n\t\t\t    \"name\":\"Эпидурит\",\r\n\t\t\t    \"group\":0,\r\n\t\t\t    \"main\":false,\r\n\t\t\t    \"key\":\"1631199085398\",\r\n\t\t\t    \"title\":\"Эпидурит\"\r\n\t\t\t    },\r\n\t\t\t    {\r\n\t\t\t    \"id\":\"Kr5m4Pjn8nXD47fViWih3Q==\",\r\n\t\t\t    \"type\":\"Nozology\",\r\n\t\t\t    \"level\":920,\r\n\t\t\t    \"name\":\"Сколиоз\",\r\n\t\t\t    \"group\":0,\r\n\t\t\t    \"main\":false,\r\n\t\t\t    \"key\":\"1631199089926\",\r\n\t\t\t    \"title\":\"Сколиоз\"\r\n\t\t\t    }\r\n\t\t    ],\r\n\t\t    \"allergy\":[],\r\n\t\t    \"labparams\":[]\r\n\t    },\r\n\t    \"service\":\"108\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Patients.UpsertPatient"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Patients.UpsertPatient"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Patients.UpsertPatient"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EMC.Models.ResultPatient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMC.Models.ResultPatient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMC.Models.ResultPatient"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/PatientGet": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Получение данных о пациенте",
        "description": "Пример запроса, параметр key или authkey, idDoctor, id - это ID пациента надо заполнить, code - это уникальный код пациента в сторонних МИС \r\n\r\n    POST /PatientGet\r\n    {\r\n        \"key\": \"\",\r\n        \"authkey\": \"\",\r\n        \"service\": \"108\",\r\n        \"active_language\": \"ru\",\r\n        \"id\": \"\",\r\n        \"idDoctor\": \"\",\r\n        \"code\": \"\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.GetPatient"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.GetPatient"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.GetPatient"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EMC.Models.ResultPatient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMC.Models.ResultPatient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMC.Models.ResultPatient"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/PatientGetMutations": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Получение списка мутаций генов пациента",
        "description": "Пример запроса, параметр key или authkey, IdPatient надо заполнить\r\n\r\n    POST /PatientGetMutations\r\n    {\r\n        \"key\": \"\",\r\n        \"authkey\": \"\",\r\n        \"active_language\": \"ru\",\r\n        \"IdPatient\": \"\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.PatientMutations"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.PatientMutations"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.PatientMutations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.PatientMutations"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.PatientMutations"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebServer.Models.PatientMutations"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/PatientNewMutations": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Добавление мутаций генов c удалением предыдущих, уже имеющимся у пациента",
        "description": "Пример запроса, параметр key или authkey, IdPatient надо заполнить\r\n\r\n    POST /PatientNewMutations\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"active_language\":\"ru\",\r\n        \"idPatient\":\"\",\r\n        \"service\":\"108\",\r\n        \"mutations\":\r\n        [\r\n            {\r\n                \"gene\":\"SERPINE1\",\r\n                \"code\":\"rs1799768\"\r\n            },\r\n            {\r\n                \"gene\":\"MYH6\",\r\n                \"code\":\"rs28730774\",\r\n                \"reference\":\"G\",\r\n                \"alleles\":\r\n                [\r\n                    \"G\",\r\n                    \"G\"\r\n                ]\r\n            },\r\n            {\r\n                \"gene\":\"-no_gene-\",\r\n                \"code\":\"rs17782313\",\r\n                \"reference\":\"T\",\r\n                \"alleles\":\r\n                [\r\n                    \"А\",\r\n                    \"T\"\r\n                ]\r\n            },\r\n            {\r\n                \"gene\":\"IFNGR1\",\r\n                \"code\":\"rs587776856\",\r\n                \"reference\":\"ATTAATT\",\r\n                \"alleles\":\r\n                [\r\n                    \"AGT\",\r\n                    \"ATTAATT\"\r\n                ]\r\n            }\r\n        ]\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.PatientMutations"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.PatientMutations"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.PatientMutations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/PatientSetMutations": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Добавление мутаций генов к уже имеющимся у пациента",
        "description": "Пример запроса, параметр key или authkey, IdPatient надо заполнить\r\n\r\n    POST /PatientSetMutations\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"active_language\":\"ru\",\r\n        \"idPatient\":\"\",\r\n        \"service\":\"108\",\r\n        \"mutations\":\r\n        [\r\n            {\r\n                \"gene\":\"SERPINE1\",\r\n                \"code\":\"rs1799768\"\r\n            },\r\n            {\r\n                \"gene\":\"MYH6\",\r\n                \"code\":\"rs28730774\",\r\n                \"reference\":\"G\",\r\n                \"alleles\":\r\n                [\r\n                    \"G\",\r\n                    \"G\"\r\n                ]\r\n            },\r\n            {\r\n                \"gene\":\"-no_gene-\",\r\n                \"code\":\"rs17782313\",\r\n                \"reference\":\"T\",\r\n                \"alleles\":\r\n                [\r\n                    \"A\",\r\n                    \"T\"\r\n                ]\r\n            },\r\n            {\r\n                \"gene\":\"IFNGR1\",\r\n                \"code\":\"rs587776856\",\r\n                \"reference\":\"ATTAATT\",\r\n                \"alleles\":\r\n                [\r\n                    \"AGGG\",\r\n                    \"ATTAATT\"\r\n                ]\r\n            }\r\n        ]\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.PatientMutations"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.PatientMutations"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.PatientMutations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/PatientUpdate": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Обновление данных пациента",
        "description": "Пример запроса, параметр key или authkey, patient.id надо заполнить\r\n\r\n    POST /PatientUpdate\r\n\t{\r\n\t\t\"key\":\"\",\r\n\t\t\"authkey\":\"\",\r\n\t\t\"active_language\":\"ru\",\r\n\t\t\"doctorId\":\"\",\r\n\t\t\"clinicId\":\"\",\r\n\t\t\"service\":\"108\",\r\n\t\t\"patient\":\r\n\t\t{\r\n\t\t\t\"id\":\"\",\r\n\t\t\t\"key\":null,\r\n\t\t\t\"email\":\"ecp@gmail.com\",\r\n\t\t\t\"name\":\"тест тест тест\",\r\n\t\t\t\"fio\":\"тест т. т.\",\r\n\t\t\t\"snils\":\"545-484-651 65\",\r\n\t\t\t\"miscode\":null,\r\n\t\t\t\"misid\":null,\r\n\t\t\t\"birthdate\":\"672488608188\",\r\n\t\t\t\"sex\":null,\r\n\t\t\t\"growth\":180,\r\n\t\t\t\"weight\":null,\r\n\t\t\t\"masIndex\":0,\r\n\t\t\t\"lastname\":\"тест\",\r\n\t\t\t\"patronymic\":\"тест\",\r\n\t\t\t\"firstname\":\"тест\",\r\n\t\t\t\"policy_num\":\"4863 4348 6767 5345\",\r\n\t\t\t\"medcard_num\":null,\r\n\t\t\t\"main_address\":null,\r\n\t\t\t\"disease\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\"id\":\"tDZ/lbIl+J157GZPZTaOVg==\",\r\n\t\t\t\t\"type\":\"Nozology\",\r\n\t\t\t\t\"name\":\"геморрой\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\"id\":\"x9iOERvHhEvz6n5XoXwrCw==\",\r\n\t\t\t\t\"type\":\"Nozology\",\r\n\t\t\t\t\"name\":\"коронавирусная инфекция COVID-19\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"co_disease\":[],\r\n\t\t\t\"allergy\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\"id\":\"Oa+p5TgosxxPog9AYlQjLQ==\",\r\n\t\t\t\t\"type\":\"TN\",\r\n\t\t\t\t\"name\":\"Рефакто АФ\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"labparams\":[],\r\n\t\t\t\"pregnancy\":false,\r\n\t\t\t\"gestation\":null,\r\n\t\t\t\"trimester\":null,\r\n\t\t\t\"lactation\":false,\r\n\t\t\t\"driving\":false,\r\n\t\t\t\"alcohol\":false,\r\n\t\t\t\"mutations\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\"id\":null,\r\n\t\t\t\t\"reference\":null,\r\n\t\t\t\t\"code\":null,\r\n\t\t\t\t\"idgene\":null,\r\n\t\t\t\t\"gene\":\"rs3\",\r\n\t\t\t\t\"alleles\":[\r\n\t\t\t\t\"c\",\r\n\t\t\t\t\"A\"\r\n\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Patients.UpsertPatient"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Patients.UpsertPatient"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.Patients.UpsertPatient"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EMC.Models.ResultPatient"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMC.Models.ResultPatient"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMC.Models.ResultPatient"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/ReportError": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Отправка сообщения об ошибке",
        "description": "Пример запроса, параметр key или authkey надо заполнить\r\n\r\n    POST /ReportError\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"active_language\":\"ru\",\r\n        \"nameUser\":\"тест erorr шаверма\"\r\n        \"emailUser\":\"ecp@gmail.com\"\r\n        \"message\":\"Сообщение о какой то ошибке\",\r\n        \"service\":\"108\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.REIncome"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.REIncome"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebServer.Models.REIncome"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/StockBalances": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Получение остатков ДВ/ТН на складах",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Stock.Models.Balances.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Stock.Models.Balances.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Stock.Models.Balances.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Stock.Models.Balances.Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stock.Models.Balances.Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stock.Models.Balances.Response"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/UnitsComplex": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Получение элементарных единиц из комплексных",
        "description": "Пример запроса, параметр key или authkey, units надо заполнить\r\n\r\n    POST /UnitsComplex\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"units\":[\"112\",\"291\"],\r\n        \"active_language\":\"ru\",\r\n        \"service\":\"108\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerUnits"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerUnits"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerUnits"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/UnitsPharm": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Получение единиц, использующихся в фармакологии с формулами.",
        "description": "Пример запроса, параметр key или authkey надо заполнить\r\n\r\n    POST /UnitsPharm\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"units\":[\"112\",\"291\"],\r\n        \"active_language\":\"ru\",\r\n        \"service\":\"108\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerUnits"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerUnits"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerUnits"
                }
              }
            }
          }
        }
      }
    },
    "/Tools/UnitsPrimary": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Получение производных единиц с формулами преобразования. В качестве аргумента - набор первообразных.",
        "description": "Пример запроса, параметр key или authkey надо заполнить\r\n\r\n    POST /UnitsPrimary\r\n    {\r\n        \"key\":\"\",\r\n        \"authkey\":\"\",\r\n        \"active_language\":\"ru\",\r\n        \"service\":\"108\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUMKBInfo.Models.Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerUnits"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerUnits"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerUnits"
                }
              }
            }
          }
        }
      }
    },
    "/Pharm/V2/Check": {
      "post": {
        "tags": [
          "V2"
        ],
        "summary": "(Основное) Проверка назначения (без актуальной терапии) пациенту без сохранения или изменения чего либо",
        "description": "Получение максимального значения опасности фармакотерапии(параметр danger 0-1), без учёта предыдущих актуальных назначений.\r\n\r\nДля правильной работы API с растворами есть несколько правил:\r\n- сам раствор добавляется в запрос как отдельный объект \"MisDrug\" в \"drugs\", с \"type\": \"LQ\",\r\n- компоненты раствора добавляются как отдельные объекты \"MisDrug\" в \"drugs\",\r\n- у раствора и его компонентов должен быть одинаковый \"group\", он должен быть заполнен и не равен 0,\r\n- у компонентов раствора \"schedule\" не нужно заполнять, данные будут сохранены, но в расчетах участвовать не будут, будут использованы данные из \"schedule\" раствора,\r\n- \"method\" нужно указывать только для раствора, у компонентов раствора это будет проигнорировано,\r\n- все дозировки нужно указывать у компонентов раствора, для раствора все дозировки считаются по дозировкам компонентов,\r\n- для расчета скорости введения раствора нужно указать \"use_duration\" и \"use_duration_unit\", по умолчанию \"use_duration\" - 1, \"use_duration_unit\" - минута.\r\n\r\nВ поле disease_classifier указывается:\r\n- null или string.Empty - поиск по именам во всех классификаторах,\r\n- mkb10 - Поиск именам МКБ10,\r\n- mkb10code - Поиск кодам МКБ10,\r\n- mkb10multi - Поиск в МКБ10 и по именам и по кодам (не нежелательно - в редких случаях возможны неоднозначности в случае равноценных совпадений).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
                }
              }
            }
          }
        }
      }
    },
    "/Pharm/V2/Index": {
      "get": {
        "tags": [
          "V2"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Pharm/V2/NewTherapy": {
      "post": {
        "tags": [
          "V2"
        ],
        "summary": "(Основное) Проверка и назначение пациенту новой фармакотерапии c отменой всех предыдущих назначений",
        "description": "Данный API предназначен для проверки и назначения пациенту новой фармакотерапии c заменой актуальных назначений указанным. \r\nТ.е. все ЛС которые были ранее назначены будут заменены ЛС из запроса.\r\nAPI в ответ возвращает итоговое значение максимального уровня опасности (параметр danger) и URL-ссылку, по которой можно запросить результат проверки листа назначения в web-интерфейсе ЭКФ.\r\n\r\nДля каждого запроса в ответе будет уникальная ссылка, при открытии которой всегда будут отображаться одиниковые данные, которые не меняются с течением времени или при запросах на другие API.\r\n\r\nПо данному запросу система ЭКФ анализирует лист назначения и данные пациента, формирует предупреждения и соответствующие рекомендации.\r\n\r\nДля правильной работы API с растворами есть несколько правил:\r\n- сам раствор добавляется в запрос как отдельный объект \"MisDrug\" в \"drugs\", с \"type\": \"LQ\",\r\n- компоненты раствора добавляются как отдельные объекты \"MisDrug\" в \"drugs\",\r\n- у раствора и его компонентов должен быть одинаковый \"group\", он должен быть заполнен и не равен 0,\r\n- у компонентов раствора \"schedule\" не нужно заполнять, данные будут сохранены, но в расчетах участвовать не будут, будут использованы данные из \"schedule\" раствора,\r\n- \"method\" нужно указывать только для раствора, у компонентов раствора это будет проигнорировано,\r\n- все дозировки нужно указывать у компонентов раствора, для раствора все дозировки считаются по дозировкам компонентов,\r\n- для расчета скорости введения раствора нужно указать \"use_duration\" и \"use_duration_unit\", по умолчанию \"use_duration\" - 1, \"use_duration_unit\" - минута.\r\n\r\nВ поле disease_classifier указывается:\r\n- null или string.Empty - поиск по именам во всех классификаторах,\r\n- mkb10 - Поиск именам МКБ10,\r\n- mkb10code - Поиск кодам МКБ10,\r\n- mkb10multi - Поиск в МКБ10 и по именам и по кодам (не нежелательно - в редких случаях возможны неоднозначности в случае равноценных совпадений).\r\n\r\nПример запроса с диагнозом по коду МКБ-10, параметр key надо заполнить.\r\nВ поле disease/co-disease указывается код заболевания по МКБ-10\r\n\r\n    POST /NewTherapy\r\n    {\r\n        \"key\": \"ВВЕДИТЕ ВАШ КЛЮЧ!!!\",\r\n        \"clinic\": \"Test_Clinic\",\r\n        \"clinic_name\": \"Test Clinic\",\r\n        \"department\": \"Test_Department\",\r\n        \"department_name\": \"Test Department\",\r\n        \"doctor\": \"Test_Doctor\",\r\n        \"doctor_name\": \"Test Doctor\",\r\n        \"patient\": {\r\n            \"code\": \"Test_Patient\",\r\n            \"clinical_case\": \"АБ22/5366293\",\r\n            \"lastname\": \"Patient\",\r\n            \"firstname\": \"Test\",\r\n            \"patronymic\": \"MKB10\",\r\n            \"snils\": \"123-456-789 00\",\r\n            \"email\": \"test@email.net\",\r\n            \"birthdate\": 1050095200000,\r\n            \"sex\": \"m\",\r\n            \"growth\": 190,\r\n            \"weight\": 80,\r\n            \"disease\": [\r\n                \"J11.1\"\r\n            ],\r\n            \"co_disease\": [\r\n                \"I15.2\"\r\n            ],\r\n            \"disease_classifier\": \"mkb10code\",\r\n            \"allergy\": [\r\n                \"йод\"\r\n            ],\r\n            \"alcohol\": true,\r\n            \"driving\": true\r\n        },\r\n        \"drugs\": [\r\n            {\r\n                \"name\": \"Парацетамол\",\r\n                \"type\": \"TN\",\r\n                \"form\": \"таблетка\",\r\n                \"method\": \"в/в\",\r\n                \"dosage\": [\r\n                    2.5\r\n                 ],\r\n                \"dosage_unit\": \"мг\",\r\n                \"use_calc\": 1,\r\n                \"use_calc_unit\": \"г\",\r\n                \"schedule\": {\r\n                    \"dateStart\": 1661904000000,\r\n                    \"duration\": \"ежедневно\",\r\n                    \"sequence\": \"1 раз в день\"\r\n                },\r\n                \"fp_form\": \"блистер\",\r\n                \"fp_dosage\": 10,\r\n                \"fp_dosage_unit\": \"штука\",\r\n                \"specials\": \"после еды\"\r\n            }\r\n        ],\r\n        \"parsedrugs\": [\r\n            \"Умифеновир 10 мг 3 раза в день по 0,5 г до отмены\"\r\n        ],\r\n        \"lang\": \"ru\"\r\n    }\r\n    \r\nПример запроса с диагнозом строкой, параметр key надо заполнить\r\n \r\n    POST /NewTherapy\r\n    {\r\n        \"key\": \"ВВЕДИТЕ ВАШ КЛЮЧ!!!\",\r\n        \"clinic\": \"Test_Clinic\",\r\n        \"clinic_name\": \"Test Clinic\",\r\n        \"department\": \"Test_Department\",\r\n        \"department_name\": \"Test Department\",\r\n        \"doctor\": \"Test_Doctor\",\r\n        \"doctor_name\": \"Test Doctor\",\r\n        \"patient\": {\r\n            \"code\": \"Test_Patient\",\r\n            \"clinical_case\": \"АБ22/5366293\",\r\n            \"lastname\": \"Patient\",\r\n            \"firstname\": \"Test\",\r\n            \"patronymic\": \"disease string\",\r\n            \"snils\": \"123-456-789 00\",\r\n            \"email\": \"test@email.net\",\r\n            \"birthdate\": 1050095200000,\r\n            \"sex\": \"m\",\r\n            \"growth\": 190,\r\n            \"weight\": 80,\r\n            \"disease\": [\r\n                \"Катаральная ангина\"\r\n            ],\r\n            \"co_disease\": [\r\n                \"Геморрой\"\r\n            ],\r\n            \"allergy\": [\r\n                \"йод\"\r\n            ],\r\n            \"alcohol\": true,\r\n            \"driving\": true\r\n        },\r\n        \"drugs\": [\r\n            {\r\n                \"name\": \"Парацетамол\",\r\n                \"type\": \"TN\",\r\n                \"form\": \"таблетка\",\r\n                \"method\": \"в/в\",\r\n                \"dosage\": [\r\n                    2.5\r\n                 ],\r\n                \"dosage_unit\": \"мг\",\r\n                \"use_calc\": 1,\r\n                \"use_calc_unit\": \"г\",\r\n                \"schedule\": {\r\n                    \"dateStart\": 1661904000000,\r\n                    \"duration\": \"ежедневно\",\r\n                    \"sequence\": \"1 раз в день\"\r\n                },\r\n                \"fp_form\": \"блистер\",\r\n                \"fp_dosage\": 10,\r\n                \"fp_dosage_unit\": \"штука\",\r\n                \"specials\": \"после еды\"\r\n            }\r\n        ],\r\n        \"parsedrugs\": [\r\n            \"Умифеновир 10 мг 3 раза в день по 0,5 г до отмены\"\r\n        ],\r\n        \"lang\": \"ru\"\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisNewTherapyReponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisNewTherapyReponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Common.Models.MIS.MisNewTherapyReponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ClinicalGuidelines.Models.ClinRecExistResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicalGuidelines.Models.RootElement"
            },
            "nullable": true
          },
          "names": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClinicalGuidelines.Models.ClinRecNode": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "parents": {
            "type": "string",
            "nullable": true
          },
          "childs": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "offlable": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "efficiency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "warning": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "trust": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "drug": {
            "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
          },
          "form": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "method": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dosage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Dosage"
            },
            "nullable": true
          },
          "schedulepreset": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "intervalpreset": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "concept": {
            "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
          },
          "check": {
            "type": "boolean",
            "nullable": true
          },
          "cource": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ClinicalGuidelines.Models.Element": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID заболевания",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Наименование заболевания",
            "nullable": true
          },
          "exist": {
            "type": "boolean",
            "description": "Флаг - есть ли клинреки у заболевания.\r\nЕсли клинреки есть - дочерних элементов нет."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicalGuidelines.Models.Element"
            },
            "description": "Дочерние элементы (при наличии)",
            "nullable": true
          },
          "clinicalpatterns": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Клиническая картина - проявление заболевания",
            "nullable": true
          },
          "clinicalreference": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ClinicalGuidelines.Models.NameSource"
            },
            "description": "Клинические рекомендации (ключ: id, в теле: первое - наименование, второе - источник клинрека)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClinicalGuidelines.Models.LSList": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "concepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
            },
            "nullable": true
          },
          "childs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClinicalGuidelines.Models.NameSource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование",
            "nullable": true
          },
          "source": {
            "type": "string",
            "description": "Источник",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClinicalGuidelines.Models.PersonalizationItem": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unitid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "helper": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClinicalGuidelines.Models.RequestCGQuestionary": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Постоянный ключ авторизации",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Временный токен авторизации (https://cs.socmedica.com/api/user/authorization)",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Язык пользователя",
            "nullable": true
          },
          "patient": {
            "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.Patient"
          },
          "clinicalGuidelines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Id выбранных клинреков",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClinicalGuidelines.Models.RequestClinRec": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "nullable": true
          },
          "device_id": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          },
          "misid": {
            "type": "string",
            "nullable": true
          },
          "misprotocol": {
            "type": "string",
            "nullable": true
          },
          "clinic": {
            "$ref": "#/components/schemas/Common.Models.KeyValue"
          },
          "department": {
            "$ref": "#/components/schemas/Common.Models.KeyValue"
          },
          "doctor": {
            "$ref": "#/components/schemas/Common.Models.KeyValue"
          },
          "patient": {
            "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.Patient"
          },
          "checker": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ClinicalGuidelines.Models.PersonalizationItem"
            },
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "nullable": true
          },
          "disease": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
            },
            "description": "Устаревшее! не использовать! Служит для обеспечения совместимости со старыми версиями.",
            "nullable": true
          },
          "clinicalGuidelines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Id выбранных клинреков",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClinicalGuidelines.Models.ResponseCGQuestionary": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "checker": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ClinicalGuidelines.Models.PersonalizationItem"
            },
            "description": "Список вопросов анкеты",
            "nullable": true
          },
          "names": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Имена к вопросам анкеты",
            "nullable": true
          },
          "shortnames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Не нужно, но без этого не работает фронт",
            "nullable": true
          },
          "clinRec": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ClinicalGuidelines.Models.ClinRecNode"
            },
            "description": "Не нужно, но без этого не работает фронт",
            "nullable": true
          },
          "cources": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
              },
              "nullable": true
            },
            "description": "Не нужно, но без этого не работает фронт",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClinicalGuidelines.Models.RootElement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID заболевания",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Наименование заболевания",
            "nullable": true
          },
          "exist": {
            "type": "boolean",
            "description": "Флаг - есть ли клинреки у заболевания.\r\nЕсли клинреки есть - дочерних элементов нет."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicalGuidelines.Models.Element"
            },
            "description": "Дочерние элементы (при наличии)",
            "nullable": true
          },
          "route": {
            "type": "string",
            "description": "Направление для древовидного меню\r\nup - корневой элемент является самым верхним, дочерние элементы открыты вниз\r\ndown - корневой элемент является самым нижним, дочерние элементы открыты вверх",
            "nullable": true
          },
          "clinicalpatterns": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Клиническая картина - проявление заболевания",
            "nullable": true
          },
          "clinicalreference": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ClinicalGuidelines.Models.NameSource"
            },
            "description": "Клинические рекомендации (ключ: id, в теле: первое - наименование, второе - источник клинрека)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Methods.Recipes.HTMLModel": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Methods.Recipes.LS": {
        "type": "object",
        "properties": {
          "liquid": {
            "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
          },
          "drugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Methods.Recipes.ModelRecipeLS": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "liquids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Methods.Recipes.LS"
            },
            "description": "Назначеная фармакотерапия",
            "nullable": true
          },
          "names": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Имена к айдишникам (если их нет в кэше) в фармакотерапии в нужной локали",
            "nullable": true
          },
          "patient": {
            "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.Patient"
          },
          "idDoc": {
            "type": "string",
            "description": "Id врача выписавшего рецепт",
            "nullable": true
          },
          "idUser": {
            "type": "string",
            "description": "Id юзера, выписавшего рецепт",
            "nullable": true
          },
          "idDep": {
            "type": "string",
            "description": "Id отделения, где выписали рецепт",
            "nullable": true
          },
          "idClinic": {
            "type": "string",
            "description": "Id клиники, где выписали рецепт",
            "nullable": true
          },
          "dateStart": {
            "type": "integer",
            "description": "Дата выписки рецепта (UnixTime мс.)",
            "format": "int64"
          },
          "dateEnd": {
            "type": "integer",
            "description": "Дата окончания действия рецепта (UnixTime мс.)",
            "format": "int64",
            "nullable": true
          },
          "dateEndItem": {
            "$ref": "#/components/schemas/ECPLib.Common.TableValueItem"
          },
          "idForm": {
            "type": "string",
            "description": "ID Рецептурной формы",
            "nullable": true
          },
          "idStatus": {
            "type": "integer",
            "description": "ID статуса рецепта",
            "format": "int32"
          },
          "dCode": {
            "type": "string",
            "description": "Диагноз по МКБ10",
            "nullable": true
          },
          "pBirthday": {
            "type": "string",
            "description": "Дата рождения пациента (на момент выписки)",
            "nullable": true
          },
          "pSnils": {
            "type": "string",
            "description": "СНИЛС пациента (на момент выписки)",
            "nullable": true
          },
          "dTextComment": {
            "type": "string",
            "description": "Коментарий врача",
            "nullable": true
          },
          "dText": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Список тегов шаблона",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Methods.Recipes.ModelRecipeNumber": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.DoctorModel": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ клиента",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Ключ авторизации (генерируется биллингом)",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "индекс приложения/сервиса к которому обращается клиент",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Индентификатор для набора получаемой информации",
            "nullable": true
          },
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "id": {
            "type": "string",
            "description": "id врача",
            "nullable": true
          },
          "fio": {
            "type": "string",
            "description": "Фио фрача",
            "nullable": true
          },
          "fname": {
            "type": "string",
            "description": "Имя врача",
            "nullable": true
          },
          "lname": {
            "type": "string",
            "description": "Фамилия врача",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "description": "Отчество(второе имя) врача",
            "nullable": true
          },
          "sex": {
            "type": "string",
            "description": "пол врача",
            "nullable": true
          },
          "snils": {
            "type": "string",
            "description": "Снилс врача",
            "nullable": true
          },
          "diploms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "дипломы врача",
            "nullable": true
          },
          "licenses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "лицензии врача",
            "nullable": true
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "e-mail врача",
            "nullable": true
          },
          "phone": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Телефон врача",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.DrugDosage": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "form": {
            "type": "string",
            "description": "ЛФ (форма применения ЛС). bigid",
            "nullable": true
          },
          "method": {
            "type": "string",
            "description": "Метод применения ЛС. bigid",
            "nullable": true
          },
          "packname": {
            "type": "string",
            "nullable": true
          },
          "lf": {
            "type": "string",
            "nullable": true
          },
          "fp": {
            "type": "string",
            "nullable": true
          },
          "dosage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Dosage"
            },
            "nullable": true
          },
          "pack": {
            "$ref": "#/components/schemas/ECPLib.Common.General.Models.Dosage"
          },
          "name": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "shortname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "solute": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Common.Models.GetInfoPreparations": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "key": {
            "type": "string",
            "description": "Постоянный ключ авторизации",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Временный токен авторизации",
            "nullable": true
          },
          "device_id": {
            "type": "string",
            "description": "Идентификатор устройства",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "Номер сервиса (4 - экф, 108 технический экф2, 2 - Экф премиум)",
            "nullable": true
          },
          "misid": {
            "type": "string",
            "description": "id МИСа",
            "nullable": true
          },
          "misprotocol": {
            "type": "string",
            "description": "МИС-овский id протокола\r\nТехническое поле, используется при интеграции с МИС-ами",
            "nullable": true
          },
          "doctor_id": {
            "type": "string",
            "description": "id врача",
            "nullable": true
          },
          "doctor_code": {
            "type": "string",
            "description": "МИС-совский код\r\nТехническое поле, используется при интеграции с МИС-ами",
            "nullable": true
          },
          "doctor_name": {
            "type": "string",
            "description": "Имя врача",
            "nullable": true
          },
          "clinic_id": {
            "type": "string",
            "description": "id клиники",
            "nullable": true
          },
          "clinic_code": {
            "type": "string",
            "description": "МИС-совский код клиники\r\nТехническое поле, используется при интеграции с МИС-ами",
            "nullable": true
          },
          "clinic_name": {
            "type": "string",
            "description": "Наименование клиники",
            "nullable": true
          },
          "dep_id": {
            "type": "string",
            "description": "id отделения",
            "nullable": true
          },
          "dep_code": {
            "type": "string",
            "description": "МИС-совский код отделения \r\nТехническое поле, используется при интеграции с МИС-ами",
            "nullable": true
          },
          "dep_name": {
            "type": "string",
            "description": "Наименование отделения",
            "nullable": true
          },
          "patient": {
            "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.Patient"
          },
          "active_language": {
            "type": "string",
            "description": "Локаль пользователя",
            "default": "ru",
            "nullable": true
          },
          "drugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
            },
            "description": "Список активных ЛС",
            "nullable": true
          },
          "liquids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
            },
            "description": "Список активных растворов",
            "nullable": true
          },
          "deletedDrugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
            },
            "description": "Список деактивированных ЛС",
            "nullable": true
          },
          "deletedLiquids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
            },
            "description": "Список деактивированных растворов",
            "nullable": true
          },
          "return_subjects": {
            "type": "boolean",
            "description": "Флаг того, что необходимо вернуть формализованные поля активных ЛС/растворов и т.д."
          },
          "misurl": {
            "type": "string",
            "description": "Ссылка на сервис на стороне МИС-ов, куда необходимо переслать результаты",
            "nullable": true
          },
          "protocol": {
            "type": "string",
            "description": "Номер протокола.\r\nТехническое поле, необходимо при интеграции с МИС-ами",
            "nullable": true
          },
          "recipe_endtime": {
            "type": "integer",
            "description": "Время окончания действия рецепта (используется при выписке рецепта) в UnixTime(мc). Устарело, уже не используется.",
            "format": "int64",
            "nullable": true,
            "deprecated": true
          },
          "recipe_endtimeitem": {
            "$ref": "#/components/schemas/ECPLib.Common.TableValueItem"
          },
          "recipe_formid": {
            "type": "string",
            "description": "ID формы рецепта. Устарело, уже не используется.",
            "nullable": true,
            "deprecated": true
          },
          "recipe_text": {
            "type": "string",
            "description": "Комментарий к рецепту (используется при выписке рецепта). Устарело, уже не используется.",
            "nullable": true,
            "deprecated": true
          },
          "recipe_data": {
            "$ref": "#/components/schemas/Common.Models.RecipeData"
          },
          "сlinical_guidelines": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Назначенные клинические рекомендации",
            "nullable": true
          },
          "checker": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ECPLib.ClinicalGuide.Models.PersonalizationItem"
            },
            "description": "ответы на клинреки",
            "nullable": true
          },
          "is_collector_available": {
            "type": "boolean",
            "description": "Наличие переходов(коллекторов) по назначенным клиническим рекомендациям"
          }
        },
        "additionalProperties": false,
        "description": "Основная внутренняя структура данных для общения с фронтом"
      },
      "Common.Models.GetMNNResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "mnn": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Common.Models.IdName"
            },
            "description": "Список найденных МНН. Ключ - id из списка айдишников аргумента.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.IdName": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id MNN",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Наименование МНН",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.IdsList": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ клиента",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Ключ авторизации (генерируется биллингом)",
            "nullable": true
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список Id (ЛС)",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Локаль клиента",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.InfoTypesResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "сalculation": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "instruction": {
            "type": "array",
            "items": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.KeyValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "val": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.LpuDocPatList": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "lpu": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "doc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "patients": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "names": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.MIS.ActualResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "patient": {
            "$ref": "#/components/schemas/Common.Models.MIS.MisPatient"
          },
          "drugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.MIS.MisDrug"
            },
            "description": "Список ЛС",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Ссылка на ЭКФ для получения и проверки всей актуальной фармакотерапии пациента",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Формат передачи данных при работе с МИС-ами"
      },
      "Common.Models.MIS.Calc": {
        "type": "object",
        "properties": {
          "dosage": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Список дозировок (список необходим для ДВК)",
            "nullable": true
          },
          "count": {
            "type": "number",
            "description": "Кол-во доз (итоговый вариант разовой дозы = dosage[n]*count )",
            "format": "double",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "description": "Единицы измерения.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Значение калькулятора приёма ЛС (разовая доза)"
      },
      "Common.Models.MIS.Caution": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Заголовок",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": { },
            "description": "Список",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.MIS.CheckResponse": {
        "type": "object",
        "properties": {
          "danger": {
            "type": "number",
            "description": "Степень опасности лекарственного назначения",
            "format": "double",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Ссылка на назначение в ЭКФ",
            "nullable": true
          },
          "protocol": {
            "type": "string",
            "description": "Идентификатор назначения",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Common.Models.MIS.Dose": {
        "type": "object",
        "properties": {
          "form_name": {
            "type": "string",
            "description": "Лекарственная форма",
            "nullable": true
          },
          "method_name": {
            "type": "string",
            "description": "Способ применения",
            "nullable": true
          },
          "mnn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.MIS.Mnn"
            },
            "description": "Дозировка ЛС",
            "nullable": true
          },
          "pack": {
            "$ref": "#/components/schemas/Common.Models.MIS.Pack"
          }
        },
        "additionalProperties": false,
        "description": "Подробности ЛС - дозировки, способ  применения, лекарственная форма"
      },
      "Common.Models.MIS.Drug": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование ЛС",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Тип ЛС (Действующее вещество(DV)/торговое наименование(TN)/раствор(LQ))",
            "nullable": true
          },
          "text": {
            "type": "string",
            "description": "Аннотация к ЛС со страницы назначения(выписки рецепта)",
            "nullable": true
          },
          "group": {
            "type": "integer",
            "description": "Номер группы  при вхождении в раствор (0-не входит в раствор)",
            "format": "int32",
            "nullable": true
          },
          "form": {
            "type": "string",
            "description": "Лекарственная форма",
            "nullable": true
          },
          "method": {
            "type": "string",
            "description": "Метод применения",
            "nullable": true
          },
          "schedule": {
            "$ref": "#/components/schemas/Common.Models.MIS.Schedule"
          },
          "doctor_code": {
            "type": "string",
            "description": "Код врача, назначившего ЛС",
            "nullable": true
          },
          "date": {
            "type": "integer",
            "description": "Дата (UNIXTime) времени назначения",
            "format": "int64"
          },
          "dose": {
            "$ref": "#/components/schemas/Common.Models.MIS.Dose"
          },
          "calc": {
            "$ref": "#/components/schemas/Common.Models.MIS.Calc"
          },
          "liquid": {
            "type": "boolean",
            "description": "Флаг, что это ЛС является раствором.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.MIS.IdCodeName": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.MIS.MisCheckResult": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "warnings": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Common.Models.MIS.MisWarning"
              },
              "nullable": true
            },
            "description": "Список конфликтов фармакотерапии (Ключ - тип конфликта)",
            "nullable": true
          },
          "literature": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Common.Models.MIS.Mislink"
            },
            "description": "Список литературы/источников (ключ - Id из MisWarning.links)",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Ссылка на фронт ЭКФ для получения и проверки всей актуальной фармакотерапии пациента, только если указан код клиники, доктора, пациента",
            "nullable": true
          },
          "patient": {
            "$ref": "#/components/schemas/Common.Models.MIS.MisPatient"
          },
          "drugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.MIS.MisDrug"
            },
            "description": "Список ЛС",
            "nullable": true
          },
          "danger": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.MIS.MisInfo"
            },
            "description": "Информация, о количественных показателях - опасность",
            "nullable": true
          },
          "trust": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.MIS.MisInfo"
            },
            "description": "Информация, о количественных показателях - уровень доверия",
            "nullable": true
          },
          "caution": {
            "$ref": "#/components/schemas/Common.Models.MIS.Caution"
          }
        },
        "additionalProperties": false
      },
      "Common.Models.MIS.MisDrug": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование ЛС",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Тип ЛС (Действующее вещество(DV)/торговое наименование(TN)/раствор(LQ)).\r\nLQ указывается когда раствор делается из ДВ или ТН, для растворов в упаковке производителя нужно указывать TN. \r\nУ раствора и ЛС входящих в него, параметр group должен быть одинаковый",
            "nullable": true
          },
          "group": {
            "type": "integer",
            "description": "Номер группы раствора (или DV/TN в составе раствора), Null или 0 - не входит в раствор, указывается только для ЛС входящих в раствор",
            "format": "int32",
            "nullable": true
          },
          "clinic_code": {
            "type": "string",
            "description": "Код клиники, в которой назначили ЛС",
            "nullable": true
          },
          "dep_code": {
            "type": "string",
            "description": "Код отделения, в котором назначили ЛС",
            "nullable": true
          },
          "doctor_code": {
            "type": "string",
            "description": "Код врача, назначившего ЛС",
            "nullable": true
          },
          "form": {
            "type": "string",
            "description": "Лекарственная форма ЛС, например: таблетки, таб, драже, држ, раствор, р-р, капсулы, капс, мазь, крем, порошок, пор, спрей, гель, настойка, н-ка",
            "nullable": true
          },
          "method": {
            "type": "string",
            "description": "Метод применения ЛС, например: в/в, внутривенное введение, в/м, внутримышечное введение, подкожно, назально, интраназально, \r\nвнутрь, сублингвально, суббуккально, субарахноидально,  эпидурально, ушные капли, транстимпальное введение, глазные капли, ингаляционно",
            "nullable": true
          },
          "date": {
            "type": "integer",
            "description": "Дата (UNIXTime) времени назначения, данные запроса заменяются текущей датой",
            "format": "int64"
          },
          "dosage": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Дозировка/концентрация(например, в случаях раствора) фармпрепарата",
            "nullable": true
          },
          "dosage_unit": {
            "type": "string",
            "description": "Единица измерения дозировки/характеристики(концентрации, например, в случаях раствора) фармпрепарата",
            "nullable": true
          },
          "use_dosage": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Дозировка(кол-ва вещества ЛС) приёма ЛС (1 доза)",
            "nullable": true
          },
          "use_dosage_unit": {
            "type": "string",
            "description": "Единица измерения приёма ЛС",
            "nullable": true
          },
          "parsedosage": {
            "type": "string",
            "description": "Дозировка ФП - используется в случае сложностей при самостоятельном формировании dosage и dosage_unit.\r\n(ДВК/растворы/и т.д. Например: \"2.18г+350мг+109мг/5мл\")",
            "nullable": true
          },
          "use_calc": {
            "type": "number",
            "description": "Количество доз/вещества за 1 приём. Например: 2(г), 20(мл), 300(мг)",
            "format": "double",
            "nullable": true
          },
          "use_calc_unit": {
            "type": "string",
            "description": "Единица измерения количества доз/вещества, нужно указывать грамм, миллиграмм, литр, миллилитр, т.е. точные единицы измерения",
            "nullable": true
          },
          "use_duration": {
            "type": "number",
            "description": "Время за которое надо ввести раствор (капельница), указывается только для растворов",
            "format": "double",
            "nullable": true
          },
          "use_duration_unit": {
            "type": "string",
            "description": "Единица времени введения раствора, указывается только для растворов",
            "nullable": true
          },
          "schedule": {
            "$ref": "#/components/schemas/Common.Models.MIS.Schedule"
          },
          "fp_form": {
            "type": "string",
            "description": "Форма фармпрепарата (первичная упаковка) - ампулы, флакон, блистер, упаковка",
            "nullable": true
          },
          "fp_dosage": {
            "type": "number",
            "description": "Дозировка ФП - 500 (мл), 10(шт) и т.д.",
            "format": "double",
            "nullable": true
          },
          "fp_dosage_unit": {
            "type": "string",
            "description": "Единица измерения дозировки фармпрепарата",
            "nullable": true
          },
          "specials": {
            "type": "string",
            "description": "Комментарий к ЛС",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Дополнительные поля для чего-либо к ЛС",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.MIS.MisInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование",
            "nullable": true
          },
          "min": {
            "type": "number",
            "description": "Минимальный показатель (исключительно)",
            "format": "double",
            "nullable": true
          },
          "max": {
            "type": "number",
            "description": "Максимальный показатель (включительно)",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.MIS.MisNewTherapyReponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Сгенерированный биллингом токен",
            "nullable": true
          },
          "clinic": {
            "type": "string",
            "description": "Индентификатор(код) клиники. Обязательное поле",
            "nullable": true
          },
          "clinic_name": {
            "type": "string",
            "description": "Наименование клиники",
            "nullable": true
          },
          "department": {
            "type": "string",
            "description": "Индентификатор(код) отделения",
            "nullable": true
          },
          "department_name": {
            "type": "string",
            "description": "Наименование отделения",
            "nullable": true
          },
          "doctor": {
            "type": "string",
            "description": "Индентификатор(код) врача. Обязательное поле",
            "nullable": true
          },
          "doctor_name": {
            "type": "string",
            "description": "Имя врача",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Ссылка на фронт ЭКФ на результаты назначения конкретной фармакотерапии, только если указан код клиники, доктора, пациента",
            "nullable": true
          },
          "danger": {
            "type": "number",
            "description": "Степень максимальной опасности лекарственного назначения",
            "format": "double",
            "nullable": true
          },
          "caution": {
            "$ref": "#/components/schemas/Common.Models.MIS.Caution"
          },
          "lang": {
            "type": "string",
            "description": "Язык, на котором будет восприниматься запрос и формироваться ответ",
            "default": "ru",
            "nullable": true
          },
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          }
        },
        "additionalProperties": false,
        "description": "Формат передачи данных при работе с МИС-ами"
      },
      "Common.Models.MIS.MisPatient": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Идентификатор(код) пациента. Обязательное поле",
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "description": "Имя пациента",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "description": "Фамилия пациента",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "description": "Отчество пациента",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email пациента",
            "nullable": true
          },
          "snils": {
            "type": "string",
            "description": "СНИЛС",
            "nullable": true
          },
          "birthdate": {
            "type": "integer",
            "description": "День рождения пациента (UnixTime мс)\r\nпри рождении до 00:00:00 UTC 1 января 1970 года - отрицательное число.",
            "format": "int64",
            "nullable": true
          },
          "sex": {
            "type": "string",
            "description": "Пол: man/woman, male/femail, m/f",
            "nullable": true
          },
          "growth": {
            "type": "number",
            "description": "Рост (в см)",
            "format": "double",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "description": "Вес (в кг)",
            "format": "double",
            "nullable": true
          },
          "disease": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Основные заболевания, при заполнении обратить внимание на параметр disease_classifier",
            "nullable": true
          },
          "co_disease": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Сопутствующие заболевания, при заполнении обратить внимание на параметр disease_classifier",
            "nullable": true
          },
          "disease_classifier": {
            "type": "string",
            "description": "Классификатор болезней (mkb10, mkb11, SNOMED и т.д.) - определение конкретного классификатора нозологий (по умолчанию null)\r\nВ данный момент список работающих тегов:\r\nnull или string.Empty - поиск по именам во всех классификаторах\r\nmkb10 - Поиск именам МКБ10\r\nmkb10code - Поиск кодам МКБ10\r\nmkb10multi - Поиск в МКБ10 и по именам и по кодам (не нежелательно - в редких случаях возможны неоднозначности в случае равноценных совпадений)",
            "nullable": true
          },
          "allergy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Аллергия",
            "nullable": true
          },
          "pregnancy": {
            "type": "boolean",
            "description": "Флаг беременности"
          },
          "trimester": {
            "type": "integer",
            "description": "Триместер беременности",
            "format": "int32",
            "nullable": true
          },
          "gestation": {
            "type": "integer",
            "description": "Неделя беременности",
            "format": "int32",
            "nullable": true
          },
          "lactation": {
            "type": "boolean",
            "description": "Флаг кормления грудью"
          },
          "alcohol": {
            "type": "boolean",
            "description": "Флаг употребления алкоголя (включение проверки на алкоголь)"
          },
          "driving": {
            "type": "boolean",
            "description": "Флаг вождения"
          },
          "name": {
            "type": "string",
            "description": "ФИО пациента (не рекомендуется к использованию т.к. устаревшее, при заполнении firstname, lastname и patronymic будет заменяться их содержимым)",
            "nullable": true,
            "deprecated": true
          },
          "labparams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Лабораторные данные (пока не используется)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Данные пациента"
      },
      "Common.Models.MIS.MisRequest": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Сгенерированный биллингом токен",
            "nullable": true
          },
          "clinical_case": {
            "type": "string",
            "description": "№ истории болезни/эпизода. Обязательное поле",
            "nullable": true
          },
          "clinic": {
            "type": "string",
            "description": "Индентификатор(код) клиники. Обязательное поле",
            "nullable": true
          },
          "clinic_name": {
            "type": "string",
            "description": "Наименование клиники",
            "nullable": true
          },
          "department": {
            "type": "string",
            "description": "Индентификатор(код) отделения",
            "nullable": true
          },
          "department_name": {
            "type": "string",
            "description": "Наименование отделения",
            "nullable": true
          },
          "doctor": {
            "type": "string",
            "description": "Индентификатор(код) врача. Обязательное поле",
            "nullable": true
          },
          "doctor_name": {
            "type": "string",
            "description": "Имя врача",
            "nullable": true
          },
          "patient": {
            "$ref": "#/components/schemas/Common.Models.MIS.MisPatient"
          },
          "drugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.MIS.MisDrug"
            },
            "description": "Список формализованных ЛС. Более предпочтительное поле при обмене информацией. \r\nЕсли одно ЛС будет указано здесь и в parsedrugs, то в назначении будут оба",
            "nullable": true
          },
          "parsedrugs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список ЛС свободным текстом, используется только в случае, если нет возможности передать ЛС в формализованном виде. \r\nЕсли одно ЛС будет указано здесь и в drugs, то в назначении будут оба",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Ссылка на фронт ЭКФ для получения и проверки всей актуальной фармакотерапии пациента, \r\nа не какой то конкретной проверки(только если указан код клиники, доктора, пациента)",
            "nullable": true
          },
          "danger": {
            "type": "number",
            "description": "Степень максимальной опасности лекарственного назначения",
            "format": "double",
            "nullable": true
          },
          "caution": {
            "$ref": "#/components/schemas/Common.Models.MIS.Caution"
          },
          "return_subjects": {
            "type": "boolean",
            "description": "Флаг того, что необходимо вернуть всю актуальную фармакотерапию, true - для тестирования и отладки, false - для штатной работы"
          },
          "enableActualTherapy": {
            "type": "boolean",
            "description": "Проверка с учётом всех предыдущих актуальных фарм. назначений пациента"
          },
          "duplicate_drugs_allow": {
            "type": "boolean",
            "description": "Разрешить добавление дубликатов ЛС. По умолчанию false.\r\nИспользуется при учёте предыдущей фармакотерапии.\r\nМеханизм: если добавляется копия уже назначенного ЛС (с такой же лекарственной формой и способом применения), то ЛС предыдущего назначения отменяется.\r\nНе касается самодельных растворов.\r\n\r\nЭто булевой параметр, который включает и отключает возможность дублирования назначения препаратов. \r\nНапример, если ранее пациенту был назначен Ибупрофен с дозировкой 200мг, то при отправке повторного запроса, \r\nсодержащего Ибупрофен с дозировкой 200мг, система будет считать, что это - дублирующее назначение и, при условии, что параметр \r\nduplicate_drugs_allow передан как false, не будет добавлять ещё один Ибупрофен с дозировкой 200мг. В случае же, если параметр передан как true, \r\nпроверка на дубли не производится и в итоговой фармакотерапии будет два препарата Ибупрофен с дозировкой 200мг.\r\nНеобходимо учитывать, что, исходя из логики работы этого параметра, он актуален только для изменения уже существующей фармакотерапии"
          },
          "lang": {
            "type": "string",
            "description": "Язык, на котором будет восприниматься запрос и формироваться ответ",
            "default": "ru",
            "nullable": true
          },
          "shortecp": {
            "type": "boolean",
            "description": "Флаг, для выбора версии. false - полноценная, true - обрезанная.\r\nВлияет на сервис через который будет проходить авторизация и адрес ссылки которая будет в ответе"
          },
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          }
        },
        "additionalProperties": false,
        "description": "Формат передачи данных при работе с МИС-ами"
      },
      "Common.Models.MIS.MisWarning": {
        "type": "object",
        "properties": {
          "descriptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Описание конфликта",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "ID источника указанного в literature",
            "nullable": true
          },
          "danger": {
            "type": "number",
            "description": "Степень опасности",
            "format": "double"
          },
          "trust": {
            "type": "number",
            "description": "Степень доверия",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Common.Models.MIS.Mislink": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование источника",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Ссылка на внешний источник (если есть)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.MIS.Mnn": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Тип числового значения (value - значение; range - диапазон; ratio - отношение\"/\"; ratio2 - отношение\":\";  size - размеры)",
            "nullable": true
          },
          "value_1": {
            "type": "number",
            "description": "Значение 1",
            "format": "double",
            "nullable": true
          },
          "value_2": {
            "type": "number",
            "description": "Значение 2",
            "format": "double",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "description": "Единица измерения",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Дозировка ЛС"
      },
      "Common.Models.MIS.Pack": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Кол-во в упаковке",
            "format": "double",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "description": "Единица измерения",
            "nullable": true
          },
          "pack_name": {
            "type": "string",
            "description": "Наименование упаковки",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Упаковка ЛС"
      },
      "Common.Models.MIS.ParseRequest": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ клиента",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Ключ авторизации (генерируется биллингом)",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список ЛС, в свободной форме, которые необходимо формализовать",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "description": "Язык, на котором будет восприниматься запрос и формироваться ответ (по умолчанию \"ru\")",
            "default": "ru",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.MIS.ParseResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "drugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.MIS.MisDrug"
            },
            "description": "Список ЛС",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.MIS.Patient": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "birthdate": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sex": {
            "type": "string",
            "nullable": true
          },
          "growth": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "disease": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.MIS.IdCodeName"
            },
            "nullable": true
          },
          "co_disease": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.MIS.IdCodeName"
            },
            "nullable": true
          },
          "allergy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.MIS.IdCodeName"
            },
            "nullable": true
          },
          "pregnancy": {
            "type": "boolean"
          },
          "trimester": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "gestation": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lactation": {
            "type": "boolean"
          },
          "alcohol": {
            "type": "boolean"
          },
          "driving": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Common.Models.MIS.Request": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Сгенерированный биллингом токен",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "description": "Язык, на котором будет формироваться ответ",
            "nullable": true
          },
          "misid": {
            "type": "string",
            "description": "Индентификатор МИС",
            "nullable": true
          },
          "clinic": {
            "type": "string",
            "description": "Индентификатор клиники",
            "nullable": true
          },
          "clinic_name": {
            "type": "string",
            "description": "Индентификатор клиники",
            "nullable": true
          },
          "department": {
            "type": "string",
            "description": "Индентификатор отделения",
            "nullable": true
          },
          "department_name": {
            "type": "string",
            "description": "Индентификатор отделения",
            "nullable": true
          },
          "doctor": {
            "type": "string",
            "description": "Индентификатор врача",
            "nullable": true
          },
          "doctor_name": {
            "type": "string",
            "description": "Индентификатор врача",
            "nullable": true
          },
          "patient": {
            "$ref": "#/components/schemas/Common.Models.MIS.Patient"
          },
          "drugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.MIS.Drug"
            },
            "description": "Список ЛС",
            "nullable": true
          },
          "misurl": {
            "type": "string",
            "description": "URL на стороне МИС-а, куда необходимо послать\r\nэтот же класс после изменения на фронте ЭКФ",
            "nullable": true
          },
          "protocol": {
            "type": "string",
            "description": "Номер протокола",
            "nullable": true
          },
          "recipe": {
            "type": "string",
            "description": "Номер рецепта (при выписке)",
            "nullable": true
          },
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          }
        },
        "additionalProperties": false,
        "description": "Формат передачи данных при работе с МИС-ами"
      },
      "Common.Models.MIS.ResultCheckingArgs": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "key из ответа на запрос API Mis/NewTherapy",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "description": "Язык, на котором будет восприниматься запрос и формироваться ответ (по умолчанию \"ru\")",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Формат передачи данных для API Mis/ResultChecking"
      },
      "Common.Models.MIS.Schedule": {
        "type": "object",
        "properties": {
          "appointmentСalendar": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.AppointmentСalendar"
            },
            "description": "Календарь приёма ЛС",
            "nullable": true
          },
          "sequence": {
            "type": "string",
            "description": "Кратность приёма ЛС, например: \r\n\"1 раз в день\", \"2 раза в день\", \"2 р\\д\", \"3 раза в день\", \"4 раза в день\", \"5 раз в день\", \r\n\"каждые 30 мин\", \"каждый час\", \"каждые 2 часа\", \"каждые 3 часа\", \"каждые 4 часа\", \r\n\"1 раз в 2 дня\", \"1 раз в 3 дня\", \"1 раз в 4 дня\", \"1 раз в 5 дней\", \"1 раз в 10 дней\", \r\n\"1 раз в неделю\", \"1 раз в 2 недели\", \"1 раз в 3 недели\", \r\n\"1 раз в месяц\", \"1 раз в 2 месяца\", \"1 раз в 3 месяца\", \"1 раз в полгода\", \"1 раз в год\"",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "Продолжительность приёма, например: \"5 дней\"",
            "nullable": true
          },
          "dateStart": {
            "type": "integer",
            "description": "Дата начала приёма ЛС (unixtime в мс)",
            "format": "int64",
            "nullable": true
          },
          "dateFinish": {
            "type": "integer",
            "description": "Дата окончания приёма (unixtime в мс)",
            "format": "int64",
            "nullable": true
          },
          "finishAlternate": {
            "type": "string",
            "description": "Условия окончания приёма (не дата), например: \"до отмены\"",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Расписание приёма"
      },
      "Common.Models.MisProtocol": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "nullable": true
          },
          "patient_id": {
            "type": "string",
            "nullable": true
          },
          "patient_code": {
            "type": "string",
            "nullable": true
          },
          "patient_name": {
            "type": "string",
            "nullable": true
          },
          "clinic_id": {
            "type": "string",
            "nullable": true
          },
          "clinic_code": {
            "type": "string",
            "nullable": true
          },
          "clinic_name": {
            "type": "string",
            "nullable": true
          },
          "dep_id": {
            "type": "string",
            "nullable": true
          },
          "dep_code": {
            "type": "string",
            "nullable": true
          },
          "dep_name": {
            "type": "string",
            "nullable": true
          },
          "doctor_id": {
            "type": "string",
            "nullable": true
          },
          "doctor_code": {
            "type": "string",
            "nullable": true
          },
          "doctor_name": {
            "type": "string",
            "nullable": true
          },
          "protocol_id": {
            "type": "string",
            "nullable": true
          },
          "protocol_date": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.ParseRequest": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ клиента",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Ключ авторизации (генерируется биллингом)",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список ЛС, в свободной форме, которые необходимо формализовать",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Локаль клиента",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.ParseResult": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "drugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
            },
            "description": "Список формализованных ЛС. Индекс в списке совпадает с индексом в texts запроса. Если формализовать не удалось, то будет NULL",
            "nullable": true
          },
          "names": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Имена концептов, которые могут понадобиться, но не предусмотрены в drug",
            "nullable": true
          },
          "shortnames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Сокращённые имена концептов, которые могут понадобиться, но не предусмотрены в drug",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.Patients.LastPatient": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Ид пациента",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Полное ФИО (тто что в пациенте name только без даты рождения и почты)",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Почта",
            "nullable": true
          },
          "birthdate": {
            "type": "integer",
            "description": "Дата рождения",
            "format": "int64",
            "nullable": true
          },
          "date": {
            "type": "integer",
            "description": "Дата просмотра пациента",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.Patients.LastPatientsResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "patients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.Patients.LastPatient"
            },
            "description": "Список последних пациентов",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.Patients.UpsertPatient": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Постоянный ключ авторизации",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Временный токен авторизации",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "Номер сервиса (4 - экф, 108 технический экф2, 2 - Экф премиум)",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Локаль пользователя",
            "nullable": true
          },
          "patient": {
            "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.Patient"
          },
          "doctorId": {
            "type": "string",
            "description": "ИД врача",
            "nullable": true
          },
          "doctorName": {
            "type": "string",
            "description": "Название врача",
            "nullable": true
          },
          "clinicId": {
            "type": "string",
            "description": "ИД больницы",
            "nullable": true
          },
          "clinicName": {
            "type": "string",
            "description": "Название больницы",
            "nullable": true
          },
          "departmentId": {
            "type": "string",
            "description": "ИД отделения",
            "nullable": true
          },
          "departmentName": {
            "type": "string",
            "description": "Название отделения",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.RecipeData": {
        "type": "object",
        "properties": {
          "formid": {
            "type": "string",
            "description": "ID формы документа",
            "nullable": true
          },
          "formType": {
            "type": "string",
            "description": "Тип документа(нужен для определения типа документа рецепт, лист назначения или протокол), \r\nдолжны быть значения из Common.Methods.Recipes.FormType",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "Номер документа(если ЛПУ указывает свой номер, если ЛПУ не указал заполнится ID`шником документа)",
            "nullable": true
          },
          "series": {
            "type": "string",
            "description": "Серия документа(если ЛПУ указывает свою серию)",
            "nullable": true
          },
          "dateСreation": {
            "type": "integer",
            "description": "Дата создания документа (UnixTime в мс)",
            "format": "int64"
          },
          "dateStart": {
            "type": "integer",
            "description": "Дата начала действия документа (UnixTime в мс)",
            "format": "int64"
          },
          "recipe_text": {
            "type": "string",
            "description": "Комментарий к документу (используется при выписке документа)",
            "nullable": true
          },
          "recipe_endtime": {
            "type": "integer",
            "description": "Время окончания действия документа (используется при выписке документа) в UnixTime(мc)",
            "format": "int64",
            "nullable": true
          },
          "recipe_endtimeitem": {
            "$ref": "#/components/schemas/ECPLib.Common.TableValueItem"
          },
          "pdid": {
            "type": "string",
            "description": "ID заболевания пациента (на момент выписки)",
            "nullable": true
          },
          "pdcode": {
            "type": "string",
            "description": "Код(коды) МКБ10 заболевания пациента (на момент выписки)",
            "nullable": true
          },
          "pchronic": {
            "type": "boolean",
            "description": "Флаг, что заболевание хроническое",
            "nullable": true
          },
          "pcatlevel": {
            "type": "string",
            "description": "Источник финансирования (варианты: федеральный бюджет, бюджет субъекта Российской Федерации, муниципальный бюджет)",
            "nullable": true
          },
          "pcatcode": {
            "type": "string",
            "description": "Льготная категория гражданина(пациента)",
            "nullable": true
          },
          "pdiscount": {
            "type": "string",
            "description": "% оплаты - следствие скидки по категории",
            "nullable": true
          },
          "cito": {
            "type": "boolean",
            "description": "Отметка “cito” - «срочно»",
            "nullable": true
          },
          "statim": {
            "type": "boolean",
            "description": "Отметка “statim” - «немедленно»",
            "nullable": true
          },
          "special": {
            "type": "boolean",
            "description": "Отметка отметка «По специальному назначению» (булево значение, только для бланка 107у, по умолчанию ставится true если срок действия рецепта больше 60 дней. Если срок действия рецепта меньше или равно 60 дней, то false )",
            "nullable": true
          },
          "spectext": {
            "type": "string",
            "description": "Периодичность отпуска лекарственных препаратов (только если отметка «По специальному назначению» true) (поле типа input, куда врач должен написать «еженедельно» или «ежемесячно», или иное)",
            "nullable": true
          },
          "docsign": {
            "type": "string",
            "description": "Электронная подпись врача (т.е. подписанные данные)",
            "nullable": true
          },
          "doccertify": {
            "type": "string",
            "description": "Электронный сертификат врача",
            "nullable": true
          },
          "commsign": {
            "type": "string",
            "description": "Электронная подпись врач. комиссии (т.е. подписанные данные)",
            "nullable": true
          },
          "commcertify": {
            "type": "string",
            "description": "Электронный сертификат врачебной комисии",
            "nullable": true
          },
          "cert_owner": {
            "type": "string",
            "description": "Владелец электронного сертификата",
            "nullable": true
          },
          "cert_code": {
            "type": "string",
            "description": "Код электронного сертификата",
            "nullable": true
          },
          "validity_start_date": {
            "type": "string",
            "description": "Дата начала дествия сертификата",
            "nullable": true
          },
          "validity_end_date": {
            "type": "string",
            "description": "Дата окончания дествия сертификата",
            "nullable": true
          },
          "org_name": {
            "type": "string",
            "description": "Название мед. организации",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Адрес мед. организации",
            "nullable": true
          },
          "doctors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Recipes.Models.Doctor"
            },
            "description": "Список врачей",
            "nullable": true
          },
          "reasonСouncil": {
            "type": "string",
            "description": "Причина созыва консилиума",
            "nullable": true
          },
          "solutionСouncil": {
            "type": "string",
            "description": "Решение консилиума",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.RecipeDataResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Common.Models.RecipeForm"
            },
            "description": "Печатные формы (ключ - id формы рецепта)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Common.Models.RecipeDuration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID концепта",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Наименование концепта",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "Параметрическое значение",
            "format": "double",
            "nullable": true
          },
          "unit": {
            "type": "integer",
            "description": "Единица измерения значения",
            "format": "int32",
            "nullable": true
          },
          "default": {
            "type": "boolean",
            "description": "Флаг дефолтного значения"
          }
        },
        "additionalProperties": false,
        "description": "Время действия рецепта"
      },
      "Common.Models.RecipeForm": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование формы",
            "nullable": true
          },
          "durations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.RecipeDuration"
            },
            "description": "Список вариантов времени действия",
            "nullable": true
          },
          "maxcount": {
            "type": "integer",
            "description": "Максимальное количество ЛС, которое можно выписать на данной форме",
            "format": "int32"
          },
          "tags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список тегов полей, которые необходимо заполнить",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Тип печатной формы(recipe - рецепт, list - Лист назначений, protocol - протокол)",
            "nullable": true
          },
          "buttons": {
            "type": "boolean",
            "description": "Флаг показывать отдельную кнопку для этой формы на фронте"
          },
          "default": {
            "type": "boolean",
            "description": "Флаг дефолтного значения"
          }
        },
        "additionalProperties": false
      },
      "Common.Models.Request": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ клиента",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Ключ авторизации (генерируется биллингом)",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "индекс приложения/сервиса к которому обращается клиент",
            "nullable": true
          },
          "drug": {
            "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
          },
          "active_language": {
            "type": "string",
            "description": "Локаль клиента",
            "nullable": true
          },
          "disablePrices": {
            "type": "boolean",
            "description": "Нужно ли отключить получение стоимости ФП (по умолчанию false )",
            "nullable": true
          },
          "disableLicensies": {
            "type": "boolean",
            "description": "Нужно ли отключить получение состояние лицензий ФП по странам (по умолчанию false )",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Запрос клиента к серверу для GetDosage/GetDescriptions и т.д."
      },
      "Common.Models.RequestConcepts": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ клиента",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Ключ авторизации (генерируется биллингом)",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "индекс приложения/сервиса к которому обращается клиент",
            "nullable": true
          },
          "drug": {
            "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
          },
          "concepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
            },
            "description": "Список концептов",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Локаль клиента",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Запрос клиента к серверу для List/Concepts/."
      },
      "Common.Models.RequestDrug": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ клиента",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Ключ авторизации (генерируется биллингом)",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "индекс приложения/сервиса к которому обращается клиент",
            "nullable": true
          },
          "drug": {
            "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
          },
          "active_language": {
            "type": "string",
            "description": "Локаль клиента",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Запрос клиента к серверу для GetDosage/GetDescriptions и т.д."
      },
      "Common.Models.SetInfoPreparations": {
        "type": "object",
        "properties": {
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "lang": {
            "type": "string",
            "description": "Локализация",
            "nullable": true
          },
          "drugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
            },
            "nullable": true
          },
          "names": {
            "type": "object",
            "additionalProperties": { },
            "description": "Список имён. Ключ - id в системе умкб, тело - имя, показываемое пользователю\r\nВ случае работы с фронтом - все ключи зашифрованы",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Checkup.Models.Warning"
            },
            "description": "Список конфликтов",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": { },
            "description": "Описания (взаимодействий)",
            "nullable": true
          },
          "guidance": {
            "type": "object",
            "additionalProperties": { },
            "description": "Рекомендации",
            "nullable": true
          },
          "literature": {
            "type": "object",
            "additionalProperties": { },
            "description": "Список литературы",
            "nullable": true
          },
          "outcome": {
            "type": "object",
            "additionalProperties": { },
            "description": "Последствия/результат",
            "nullable": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": { },
            "description": "Ключ-bigid варнинга, тело - список филдов варнинга (для получения инструкций лс)",
            "nullable": true
          },
          "urls": {
            "type": "object",
            "additionalProperties": { },
            "description": "Ссылки на внешние источники",
            "nullable": true
          },
          "cautiontitle": {
            "type": "string",
            "nullable": true
          },
          "cautionitems": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "patient": {
            "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.Patient"
          },
          "hinttype": {
            "type": "object",
            "additionalProperties": { },
            "description": "Тут заголовок подсказок для значков (Id типа варнинга->id текста в names)",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "nullable": true
          },
          "misurl": {
            "type": "string",
            "nullable": true
          },
          "device_id": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          },
          "misid": {
            "type": "string",
            "nullable": true
          },
          "misprotocol": {
            "type": "string",
            "nullable": true
          },
          "clinic_id": {
            "type": "string",
            "nullable": true
          },
          "clinic_code": {
            "type": "string",
            "nullable": true
          },
          "clinic_name": {
            "type": "string",
            "nullable": true
          },
          "dep_id": {
            "type": "string",
            "nullable": true
          },
          "dep_code": {
            "type": "string",
            "nullable": true
          },
          "dep_name": {
            "type": "string",
            "nullable": true
          },
          "doctor_id": {
            "type": "string",
            "nullable": true
          },
          "doctor_code": {
            "type": "string",
            "nullable": true
          },
          "doctor_name": {
            "type": "string",
            "nullable": true
          },
          "recipe": {
            "type": "string",
            "nullable": true
          },
          "protocol": {
            "type": "string",
            "nullable": true
          },
          "liquids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
            },
            "nullable": true
          },
          "repeal": {
            "type": "boolean",
            "description": "Флаг отмены"
          }
        },
        "additionalProperties": false
      },
      "Common.Models.WarningInfoArgs": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Постоянный ключ авторизации",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Временный токен авторизации (https://cs.socmedica.com/api/user/authorization)",
            "nullable": true
          },
          "device_id": {
            "type": "string",
            "description": "Идентификатор устройства",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "Номер сервиса",
            "nullable": true
          },
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Common.Models.WarningItem"
            },
            "description": "Список данных к варнингу (обязательное поле)",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Язык(локаль) пользователя",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "В случае аргументов - список к получению инструкций к противопоказаниям/взаимодействиям\r\nВ случае ответа - Список текста из инструкций"
      },
      "Common.Models.WarningItem": {
        "type": "object",
        "properties": {
          "fields": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Тип варнинга (обязательное поле)",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "id ЛС (обязательное поле)",
            "nullable": true
          },
          "text": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Текст из инструкции ЛС, относящийся к варнингу",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Элемент описывающий варнинг"
      },
      "ECPLib.Checkup.Models.Warning": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "BigId взаимодействия",
            "nullable": true
          },
          "subjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Checkup.Models.WarningSubject"
            },
            "description": "WarningSubject: Субъект для варнинга. Ключ ЛС и BigId элемента на котором произошло взаимодействие",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "Уровень опасности",
            "format": "double",
            "nullable": true
          },
          "trust": {
            "type": "number",
            "description": "Уровень доказательности",
            "format": "double",
            "nullable": true
          },
          "step": {
            "type": "integer",
            "description": "Шаг, на котором найдено",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "Тип варнинга",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "description": "Иконка взаимодействия",
            "nullable": true
          },
          "hint": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "ID текста из неймов, из которых будет формироваться список в подсказках (например фармгруппа в однонаправленных действиях)",
            "nullable": true
          },
          "delimiter": {
            "type": "integer",
            "description": "Разделитель для списка(лс) в верхнем блоке",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Конфликты/Варнинги"
      },
      "ECPLib.Checkup.Models.WarningSubject": {
        "type": "object",
        "properties": {
          "subjectid": {
            "type": "string",
            "description": "BigId элемента, на котором произошло взаимодейтвие",
            "nullable": true
          },
          "drugkey": {
            "type": "string",
            "description": "Ключ изначального препарата",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Тип элемента:\r\ndrug - лекарство\r\ndisease - заболевание\r\nallergy - аллерген\r\nother - остальное (противопоказания)",
            "nullable": true
          },
          "arrow": {
            "type": "boolean",
            "description": "стрелочка (для показа направления межлекарственного взаимодействия)"
          },
          "hidekeys": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список ключей драгов, к которым не нужно рисовать стрелки.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Субъект для варнинга. Ключ ЛС и BigId элемента на котором произошло взаимодействие"
      },
      "ECPLib.ClinicalGuide.Models.PersonalizationItem": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "unitid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "parent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ECPLib.Common.Drugs.Models.AppointmentСalendar": {
        "type": "object",
        "properties": {
          "date": {
            "type": "integer",
            "description": "Дата приёма (unixtime в мс)",
            "format": "int64",
            "nullable": true
          },
          "timeReceipt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.AppointmentСalendarItem"
            },
            "description": "Время приема и дозировка",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Календарь приема ЛС"
      },
      "ECPLib.Common.Drugs.Models.AppointmentСalendarItem": {
        "type": "object",
        "properties": {
          "hours": {
            "type": "integer",
            "description": "Часы",
            "format": "int32"
          },
          "minutes": {
            "type": "integer",
            "description": "Минуты",
            "format": "int32"
          },
          "count": {
            "type": "number",
            "description": "Дозировка, указывается: для мисов в ЕИ use_calc_unit, для фронта в ЕИ calc.countBaseUnit",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Время приема и дозировка"
      },
      "ECPLib.Common.Drugs.Models.Calc": {
        "type": "object",
        "properties": {
          "dosageBaseUnit": {
            "type": "string",
            "description": "Первообразная единица измерения дозировки ЛС\r\nВсе количества дозировок указаны в ней",
            "nullable": true
          },
          "dosage": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Дозировка ЛС",
            "nullable": true
          },
          "countBaseUnit": {
            "type": "string",
            "description": "Первообразная единицы измерения количества ЛС (шт/мл)",
            "nullable": true
          },
          "countUnit": {
            "type": "string",
            "description": "Основная единица измерения количества ЛС (шт/мл)",
            "nullable": true
          },
          "count": {
            "type": "number",
            "description": "Количество доз",
            "format": "double",
            "nullable": true
          },
          "dosageUnit": {
            "type": "string",
            "description": "Основная единица измерения дозировки",
            "nullable": true
          },
          "dayCount": {
            "type": "number",
            "description": "Количество доз в день",
            "format": "double",
            "nullable": true
          },
          "fullDosage": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Разовая доза",
            "nullable": true
          },
          "weightDosage": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Разовая доза на кг веса (dosageUnit/кг)",
            "nullable": true
          },
          "dayDosage": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Суточная доза",
            "nullable": true
          },
          "dayWeightDosage": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Дозировка на кг веса в сутки",
            "nullable": true
          },
          "durationCount": {
            "type": "number",
            "description": "Длительность введения для растворов",
            "format": "double",
            "nullable": true
          },
          "durationUnit": {
            "type": "string",
            "description": "Единица измерения длительности введения растворов",
            "nullable": true
          },
          "fullSpeed": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Скорость введения ДВ (dosageUnit/durationUnit)",
            "nullable": true
          },
          "liquidSpeed": {
            "type": "number",
            "description": "Скорость введения раствора, общего. (мл/durationUnit)",
            "format": "double",
            "nullable": true
          },
          "tintSpeed": {
            "type": "number",
            "description": "Скорость введения раствора в каплях",
            "format": "double",
            "nullable": true
          },
          "weightSpeed": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Скорость введения действующих веществ в виде в раствора (dosageUnit/кг/durationUnit)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Калькулятор ЛС"
      },
      "ECPLib.Common.Drugs.Models.Drug": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Уникальный индентификатор (нужен для GUI)",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "BigId (в случае работы с фронтом - зашифрованный)",
            "nullable": true
          },
          "fpid": {
            "type": "string",
            "description": "Id фармпрепарата (при выборе конкретных ФП)",
            "nullable": true
          },
          "recipeCount": {
            "type": "integer",
            "description": "Количесво ФП",
            "format": "int32"
          },
          "mnnid": {
            "type": "string",
            "description": "ID МНН ЛС",
            "nullable": true
          },
          "mnnname": {
            "type": "string",
            "description": "МНН ЛС",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Тип ЛС (Действующее вещество(DV)/торговое наименование(TN)/раствор(LQ))",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "description": "Левел",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Наименование ЛС",
            "nullable": true
          },
          "namesearch": {
            "type": "string",
            "description": "Строка по которой был осуществлён поиск",
            "nullable": true
          },
          "group": {
            "type": "integer",
            "description": "Номер группы  при вхождении в раствор",
            "format": "int32",
            "nullable": true
          },
          "recipenameid": {
            "type": "string",
            "description": "id концепта, имя которого будет выведено в рецептe",
            "nullable": true
          },
          "text": {
            "type": "string",
            "description": "Аннотация к ЛС со страницы назначения(выписки рецепта)",
            "nullable": true
          },
          "parsedosage": {
            "type": "string",
            "description": "Сохранённый исходный текст дозировок из мисов, интеграторов и т.д.\r\nИспользуется в том случае, когда они не в состоянии сами указать дозировки.\r\nНапример:\"250МЕ+5000МЕ/1г\", \"2.18г+350мг+109мкг/5мл\" и т.д.",
            "nullable": true
          },
          "dosage": {
            "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.FDosage"
          },
          "calc": {
            "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Calc"
          },
          "schedule": {
            "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Schedule"
          },
          "duration": {
            "type": "string",
            "description": "Длительность приёма польз.название",
            "nullable": true
          },
          "duration_id": {
            "type": "string",
            "description": "Длительность приёма id",
            "nullable": true
          },
          "freq": {
            "type": "string",
            "description": "Частота приёма (польз. название)",
            "nullable": true
          },
          "freq_id": {
            "type": "string",
            "description": "Частота приёма (id)",
            "nullable": true
          },
          "solute": {
            "type": "boolean",
            "description": "Флаг возможно ли сделать раствор"
          },
          "specials": {
            "type": "string",
            "description": "Особые указания/уточнение/комментарий \r\nсо страницы калькулятора ЛС",
            "nullable": true
          },
          "liquid": {
            "type": "boolean",
            "description": "Флаг, что это ЛС является раствором.",
            "nullable": true
          },
          "proto": {
            "type": "string",
            "description": "id протокола (надо для функционирования системы актуальных назначений)",
            "nullable": true
          },
          "proto_date": {
            "type": "string",
            "description": "имя коллекции протокола (надо для функционирования системы актуальных назначений)",
            "nullable": true
          },
          "proto_key": {
            "type": "string",
            "description": "ключ ЛС в протоколе (надо для функционирования системы актуальных назначений)",
            "nullable": true
          },
          "pdate": {
            "type": "string",
            "description": "Техническое поле\r\nДата родительского ЛС, если это ЛС является наследником от более раннего назначения.",
            "nullable": true
          },
          "pproto": {
            "type": "string",
            "description": "Техническое поле\r\nНомер протокола родительского ЛС, если это ЛС является наследником от более раннего назначения.",
            "nullable": true
          },
          "pkey": {
            "type": "string",
            "description": "Техническое поле\r\nКлюч(уникальный индентификатор) родительского ЛС, если это ЛС является наследником от более раннего назначения.",
            "nullable": true
          },
          "repeal": {
            "type": "boolean",
            "description": "Техническое поле.\r\nФлаг отмены ЛС."
          },
          "repealdoc": {
            "type": "string",
            "description": "Техническое поле\r\nid доктора, отменившего назначение",
            "nullable": true
          },
          "repealdate": {
            "type": "string",
            "description": "Техническое поле\r\nдата отмены назначения (имя коллекции старого протокола)",
            "nullable": true
          },
          "repealproto": {
            "type": "string",
            "description": "Техническое поле\r\nid протокола, отменившего назначение",
            "nullable": true
          },
          "edit": {
            "type": "boolean",
            "description": "Флаг того, что произведено редактирование этого ЛС\r\nТехническое поле, необходимое для работы с фронтом. в базе не хранится"
          },
          "recipes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список рецептов, выписанных на это ЛС.\r\nПо тех. заданию - там должен быть один рецепт, но мало-ли:\r\nесли опять изменится концепция - потом будет не легко исправить. Поэтому лист.",
            "nullable": true
          },
          "lastrecipe": {
            "type": "string",
            "description": "Костыль для фронта",
            "nullable": true,
            "readOnly": true
          },
          "date": {
            "type": "integer",
            "description": "Время назначения (нужно для МИС-ов). Техническое поле, существует только внутри экф",
            "format": "int64"
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Дополнительные поля для чего-либо к ЛС",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Класс данных ЛС"
      },
      "ECPLib.Common.Drugs.Models.FDosage": {
        "type": "object",
        "properties": {
          "form": {
            "type": "string",
            "description": "Id лекарственной формы",
            "nullable": true
          },
          "form_name": {
            "type": "string",
            "description": "Наименование лекарственной формы",
            "nullable": true
          },
          "form_name_short": {
            "type": "string",
            "description": "Наименование лекарственной формы (краткая)",
            "nullable": true
          },
          "method": {
            "type": "string",
            "description": "Id Способа применения",
            "nullable": true
          },
          "method_name": {
            "type": "string",
            "description": "Наименование способа применения",
            "nullable": true
          },
          "method_name_short": {
            "type": "string",
            "description": "Наименование способа применения (краткая)",
            "nullable": true
          },
          "dosage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Dosage"
            },
            "description": "Список дозировок ЛС (списком в случаев комбинированных ЛС)",
            "nullable": true
          },
          "pack": {
            "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Pack"
          },
          "value": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Уже посчитаные дозировки (в случае ratio и т.д.)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ECPLib.Common.Drugs.Models.Pack": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID упаковки ЛС",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Наименование упаковки ЛС",
            "nullable": true
          },
          "dosage": {
            "$ref": "#/components/schemas/ECPLib.Common.General.Models.Dosage"
          }
        },
        "additionalProperties": false,
        "description": "Дозировки упаковок"
      },
      "ECPLib.Common.Drugs.Models.Schedule": {
        "type": "object",
        "properties": {
          "dateStart": {
            "type": "integer",
            "description": "Дата начала приёма (unixtime в мс)",
            "format": "int64",
            "nullable": true
          },
          "dateFinish": {
            "type": "integer",
            "description": "Дата окончания приёма (unixtime в мс)",
            "format": "int64",
            "nullable": true
          },
          "finishAlternate": {
            "type": "string",
            "description": "ID условия окончания приёма",
            "nullable": true
          },
          "interval": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Interval"
            },
            "description": "Набор расписаний приёма",
            "nullable": true
          },
          "once": {
            "type": "boolean",
            "description": "Флаг единократного приёма",
            "nullable": true
          },
          "appointmentСalendar": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.AppointmentСalendar"
            },
            "description": "Календарь приема ЛС",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Расписание приёма ЛС"
      },
      "ECPLib.Common.General.Models.Concept": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Уникальный индентификатор (нужен для GUI)",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "BigId (в случае работы с фронтом - зашифрованный)",
            "nullable": true
          },
          "fpid": {
            "type": "string",
            "description": "Дополнительное поле (id фармпрепарата, публичный код заболевания и т.д.)",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Тип концепта",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "description": "Левел",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Наименование ЛС",
            "nullable": true
          },
          "namesearch": {
            "type": "string",
            "description": "Строка по которой был осуществлён поиск",
            "nullable": true
          },
          "group": {
            "type": "integer",
            "description": "Номер группы (для растворов)",
            "format": "int32"
          },
          "main": {
            "type": "boolean",
            "description": "Флаг - true - основное заболевание, false - сопутствующее заболевание"
          },
          "code": {
            "type": "string",
            "description": "Публичный код (если есть)",
            "nullable": true
          },
          "nameshort": {
            "type": "string",
            "description": "Краткое имя (если есть)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ECPLib.Common.General.Models.Dosage": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Тип числового значения (value - значение; range - диапазон; ratio - отношение\"/\"; ratio2 - отношение\":\";  size - размеры)",
            "nullable": true
          },
          "value_1": {
            "type": "number",
            "description": "Значение 1",
            "format": "double",
            "nullable": true
          },
          "value_2": {
            "type": "number",
            "description": "Значение 2",
            "format": "double",
            "nullable": true
          },
          "id_1": {
            "type": "string",
            "description": "id единиц измерения для значения 1",
            "nullable": true
          },
          "id_2": {
            "type": "string",
            "description": "id единиц измерения для значения 2",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "id ДВ",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Табличные значения/дозировки"
      },
      "ECPLib.Common.General.Models.Interval": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Тип интервала",
            "nullable": true
          },
          "x": {
            "type": "number",
            "description": "Количественный параметр",
            "format": "double"
          },
          "timesx": {
            "type": "string",
            "description": "единица измерения",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ECPLib.Common.MIS.Models.ScheduleItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Тег-тип",
            "nullable": true
          },
          "value_1": {
            "type": "number",
            "description": "количественное значение 1",
            "format": "double",
            "nullable": true
          },
          "value_2": {
            "type": "number",
            "description": "количественное значение 2",
            "format": "double",
            "nullable": true
          },
          "unit_1": {
            "type": "string",
            "description": "единица измерения для значения 1 (id или текст)",
            "nullable": true
          },
          "unit_2": {
            "type": "string",
            "description": "единица измерения для значения 1 (id или текст)",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "umkb id этой функциональной единицы",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Функциональная единица календаря приёма ЛС"
      },
      "ECPLib.Common.Patient.Models.CheckLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "BsonID записи",
            "nullable": true
          },
          "date": {
            "type": "integer",
            "description": "Дата создания класса",
            "format": "int64"
          },
          "userid": {
            "type": "string",
            "description": "Id пользователя",
            "nullable": true
          },
          "patientid": {
            "type": "string",
            "description": "id пациента",
            "nullable": true
          },
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "names": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Список имён. Ключ - id в системе умкб(или сгенерированное), тело - имя, показываемое пользователю\r\nВ случае работы с фронтом - все ключи зашифрованы",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Checkup.Models.Warning"
            },
            "description": "Список конфликтов",
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Описания (взаимодействий)",
            "nullable": true
          },
          "guidance": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Рекомендации (взаимодействий)",
            "nullable": true
          },
          "literature": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Список литературы",
            "nullable": true
          },
          "outcome": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Последствия/результат",
            "nullable": true
          },
          "urls": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Ссылки на внешние источники",
            "nullable": true
          },
          "cautiontitle": {
            "type": "string",
            "description": "Заголовок предупреждений при назначении",
            "nullable": true
          },
          "cautionitems": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список предупреждений при назначении",
            "nullable": true
          },
          "patient": {
            "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.Patient"
          },
          "hinttype": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Тут заголовок подсказок для значков (Id типа варнинга->id текста в names)",
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "Постоянный ключ авторизации",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Временный токен авторизации (https://cs.socmedica.com/api/user/authorization)",
            "nullable": true
          },
          "device_id": {
            "type": "string",
            "description": "Идентификатор устройства",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "Номер сервиса (4 - экф, 108 технический экф2, 2 - Экф премиум)",
            "nullable": true
          },
          "misurl": {
            "type": "string",
            "description": "Зарезервированно на будущее.\r\nURL на стороне сервера МИС, куда необходимо отсылать данные.",
            "nullable": true
          },
          "misid": {
            "type": "string",
            "description": "Зарезервированно на будущее.\r\nid МИС-а в системе UMKB",
            "nullable": true
          },
          "misprotocol": {
            "type": "string",
            "description": "Зарезервированно на будущее.\r\nid протокола в системе МИС (посторонний идентификатор, не в UMKB)",
            "nullable": true
          },
          "clinic_id": {
            "type": "string",
            "description": "id клиники",
            "nullable": true
          },
          "clinic_code": {
            "type": "string",
            "description": "МИС-совский код клиники\r\nТехническое поле, используется при интеграции с МИС-ами",
            "nullable": true
          },
          "clinic_name": {
            "type": "string",
            "description": "Наименование клиники",
            "nullable": true
          },
          "dep_id": {
            "type": "string",
            "description": "id отделения",
            "nullable": true
          },
          "dep_code": {
            "type": "string",
            "description": "МИС-совский код отделения \r\nТехническое поле, используется при интеграции с МИС-ами",
            "nullable": true
          },
          "dep_name": {
            "type": "string",
            "description": "Наименование отделения",
            "nullable": true
          },
          "doctor_id": {
            "type": "string",
            "description": "id врача",
            "nullable": true
          },
          "doctor_code": {
            "type": "string",
            "description": "МИС-совский код\r\nТехническое поле, используется при интеграции с МИС-ами",
            "nullable": true
          },
          "doctor_name": {
            "type": "string",
            "description": "Имя врача",
            "nullable": true
          },
          "recipe": {
            "type": "string",
            "description": "Устарело, уже не используется. Номер сгенерированного рецепта сформированного из этой структуры.",
            "nullable": true,
            "deprecated": true
          },
          "protocol": {
            "type": "string",
            "description": "Устарело, уже не используется. Номер протокола.\r\nТехническое поле, необходимо при интеграции с МИС-ами",
            "nullable": true,
            "deprecated": true
          },
          "liquids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
            },
            "description": "Список активных растворов",
            "nullable": true
          },
          "drugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
            },
            "description": "Список активных ЛС",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "description": "Локаль пользователя",
            "nullable": true
          },
          "repeal": {
            "type": "boolean",
            "description": "Флаг отмены портокола.",
            "deprecated": true
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Ключ-bigid варнинга, тело - список филдов варнинга (для получения инструкций лс)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ECPLib.Common.Patient.Models.Mutation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id гена мутации",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "description": "Референс",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Код мутации",
            "nullable": true
          },
          "idgene": {
            "type": "string",
            "description": "id гена мутации (LongId)",
            "nullable": true
          },
          "gene": {
            "type": "string",
            "description": "Ген мутации",
            "nullable": true
          },
          "allele1": {
            "type": "string",
            "description": "Аллель 1",
            "nullable": true,
            "deprecated": true
          },
          "allele2": {
            "type": "string",
            "description": "Аллель 2",
            "nullable": true,
            "deprecated": true
          },
          "alleles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список уникальных Аллелей (техническое поле)",
            "nullable": true
          },
          "newentry": {
            "type": "boolean",
            "description": "Техническое поле, для определения новой/старой записи.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Мутация"
      },
      "ECPLib.Common.Patient.Models.Patient": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ulong id пациента в системе UMKB",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Имя пациента (ник)",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "e-mail пациента",
            "nullable": true
          },
          "miscode": {
            "type": "string",
            "description": "на будущее ID в МИСе",
            "nullable": true
          },
          "misid": {
            "type": "string",
            "description": "ID пациента в МИСе",
            "nullable": true
          },
          "keyid": {
            "type": "string",
            "description": "ID ключа пользователя (для МИСов)",
            "nullable": true
          },
          "fio": {
            "type": "string",
            "description": "ФИО",
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "description": "fio surname",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "description": "fio name",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "description": "fio patrinymic",
            "nullable": true
          },
          "policy_serial": {
            "type": "string",
            "description": "Серия ОМС мед. полиса",
            "nullable": true
          },
          "policy_num": {
            "type": "string",
            "description": "Номер ОМС мед. полиса",
            "nullable": true
          },
          "medcard_num": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Номера мед.карт (ключ - идентификатор организации)",
            "nullable": true
          },
          "categories": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Категории гражданина(пациента)\r\nКлюч - источник финансирования (варианты: федеральный бюджет, бюджет субъекта Российской Федерации, муниципальный бюджет)",
            "nullable": true
          },
          "main_address": {
            "type": "string",
            "description": "main adress",
            "nullable": true
          },
          "addresses": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "list of adresses (type-value)",
            "nullable": true
          },
          "snils": {
            "type": "string",
            "description": "СНИЛС",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Телефон пациента",
            "nullable": true
          },
          "passport": {
            "type": "string",
            "description": "Паспорт пациента",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "birthdate": {
            "type": "integer",
            "description": "Дата рождения (UNIXTIME). до 1970 года - отрицательная",
            "format": "int64",
            "nullable": true
          },
          "sex": {
            "type": "string",
            "description": "Пол (male|female)",
            "nullable": true
          },
          "growth": {
            "type": "number",
            "description": "Рост (см)",
            "format": "double",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "description": "Вес (кг)",
            "format": "double",
            "nullable": true
          },
          "disease": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
            },
            "description": "Основные заболевания (lib 61|25)",
            "nullable": true
          },
          "co_disease": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
            },
            "description": "Сопутствующие заболевания (lib 61|25)",
            "nullable": true
          },
          "pregnancy": {
            "type": "boolean",
            "description": "Флаг беременности"
          },
          "gestation": {
            "type": "integer",
            "description": "Неделя беременности",
            "format": "int32",
            "nullable": true
          },
          "trimester": {
            "type": "integer",
            "description": "Триместр беременности",
            "format": "int32",
            "nullable": true
          },
          "lactation": {
            "type": "boolean",
            "description": "Флаг кормления грудью"
          },
          "driving": {
            "type": "boolean",
            "description": "Флаг вождения"
          },
          "alcohol": {
            "type": "boolean",
            "description": "Флаг порверки на алкоголь"
          },
          "allergy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
            },
            "description": "Аллергия пациента (lib 62|52|37|60)",
            "nullable": true
          },
          "labparams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Лабораторные показатели",
            "nullable": true
          },
          "actualProtocols": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "mutations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.Mutation"
            },
            "description": "Мутации генов пациента",
            "nullable": true
          },
          "genpassport_exist": {
            "type": "boolean",
            "description": "Признак наличия генпаспорта у пациента"
          },
          "undefined": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Техническое поле: не формализованные/не найденные в УМКБ концепты",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Информация о пациенте"
      },
      "ECPLib.Common.Recipes.Models.Doctor": {
        "type": "object",
        "properties": {
          "position": {
            "type": "string",
            "description": "Должность",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "Имя",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Фаимлия",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "description": "Отчество",
            "nullable": true
          },
          "specialization": {
            "type": "string",
            "description": "Специализация",
            "nullable": true
          },
          "qualification": {
            "type": "string",
            "description": "Квалификация",
            "nullable": true
          },
          "opinions": {
            "type": "string",
            "description": "Особое мнение(если есть)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Описание врача"
      },
      "ECPLib.Common.TableValueItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID концепта",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Наименование концепта",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "Параметрическое значение",
            "format": "double",
            "nullable": true
          },
          "unit": {
            "type": "integer",
            "description": "Единица измерения значения",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Табличный элемент с одиночным значением"
      },
      "ECPLib.Common.UnitsCalc.Models.AnswerMisDosage": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "dosage": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Дозировка ЛС",
            "nullable": true
          },
          "dosage_unit": {
            "type": "string",
            "description": "Единица измерения дозировки ЛС",
            "nullable": true
          },
          "use_calc": {
            "type": "number",
            "description": "Количество доз за 1 приём",
            "format": "double",
            "nullable": true
          },
          "use_calc_unit": {
            "type": "string",
            "description": "Единица измерения для количества доз",
            "nullable": true
          },
          "use_duration": {
            "type": "number",
            "description": "Для растворов - время за которое надо ввести раствор (капельница)",
            "format": "double",
            "nullable": true
          },
          "use_duration_unit": {
            "type": "string",
            "description": "Для растворов - единица времени введения раствора",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ECPLib.Common.UnitsCalc.Models.AnswerSimple": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "originalvalue": {
            "type": "number",
            "description": "Исходное значение (например 10)",
            "format": "double",
            "nullable": true
          },
          "originalunit": {
            "type": "string",
            "description": "Единица измерения исходного значения (микрограмм)",
            "nullable": true
          },
          "originalunitshort": {
            "type": "string",
            "description": "Единица измерения исходного значения (мкг)",
            "nullable": true
          },
          "basevalue": {
            "type": "number",
            "description": "Базовое значения (например 0.00001)",
            "format": "double",
            "nullable": true
          },
          "baseunit": {
            "type": "string",
            "description": "Единица измерения исходного значения (грамм)",
            "nullable": true
          },
          "baseunitshort": {
            "type": "string",
            "description": "Единица измерения исходного значения (г)",
            "nullable": true
          },
          "targetvalue": {
            "type": "number",
            "description": "Необходимое значение ()",
            "format": "double",
            "nullable": true
          },
          "targetunit": {
            "type": "string",
            "description": "Единица измерения необходимого значения (миллиграмм)",
            "nullable": true
          },
          "targetunitshort": {
            "type": "string",
            "description": "Единица измерения необходимого значения (мг)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ECPLib.Common.UnitsCalc.Models.AnswerUnits": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "units": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.complexUnit"
              },
              "nullable": true
            },
            "description": "Ответ. Ключ - BigId из запроса, значание - Список [математическая операция, BigId]",
            "nullable": true
          },
          "unitrefs": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "nullable": true
          },
          "unitpharm": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "names": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "nameshort": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ECPLib.Common.UnitsCalc.Models.MisParseRequest": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Сгенерированный биллингом токен",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "description": "Язык, на котором будет формироваться ответ",
            "nullable": true
          },
          "fpdosage": {
            "type": "string",
            "description": "Дозировка фармпрепарата, которую необходимо формализовать.\r\nНапример: \"2.18 г+350мг+ 109 мг/5мл\"",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ECPLib.Common.UnitsCalc.Models.RequestConvert": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Сгенерированный биллингом токен",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "description": "Язык, на котором будет формироваться ответ",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "Значение, которое необходимо конвертировать (например 10)",
            "format": "double",
            "nullable": true
          },
          "originalunit": {
            "type": "string",
            "description": "Единица измерения значения (например мг)",
            "nullable": true
          },
          "targetunit": {
            "type": "string",
            "description": "Единица измерения, куда необходимо конвертировать значение (например мкг)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ECPLib.Common.UnitsCalc.Models.complexUnit": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          }
        },
        "additionalProperties": false
      },
      "EMC.Models.PatientSearch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "birthdate": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EMC.Models.PatientsSearchResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "patients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EMC.Models.PatientSearch"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EMC.Models.ResultPatient": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "patient": {
            "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.Patient"
          }
        },
        "additionalProperties": false
      },
      "EMCLib.EMC.ECP.Models.DoctorModel": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ клиента",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Ключ авторизации (генерируется биллингом)",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "индекс приложения/сервиса к которому обращается клиент",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Индентификатор для набора получаемой информации",
            "nullable": true
          },
          "alert": {
            "$ref": "#/components/schemas/UMKBNeedStuff.Alert"
          },
          "id": {
            "type": "string",
            "description": "id врача",
            "nullable": true
          },
          "fio": {
            "type": "string",
            "description": "Фио фрача",
            "nullable": true
          },
          "fname": {
            "type": "string",
            "description": "Имя врача",
            "nullable": true
          },
          "lname": {
            "type": "string",
            "description": "Фамилия врача",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "description": "Отчество(второе имя) врача",
            "nullable": true
          },
          "sex": {
            "type": "string",
            "description": "пол врача",
            "nullable": true
          },
          "snils": {
            "type": "string",
            "description": "Снилс врача",
            "nullable": true
          },
          "diploms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "дипломы врача",
            "nullable": true
          },
          "licenses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "лицензии врача",
            "nullable": true
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "e-mail врача",
            "nullable": true
          },
          "phone": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Телефон врача",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAnalog.Models.Answer": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "names": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Список имён. Ключ - id в системе умкб, тело - имя, показываемое пользователю\r\nВ случае работы с фронтом - все ключи зашифрованы",
            "nullable": true
          },
          "tn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAnalog.Models.TNFP"
            },
            "description": "Список Торговых наименований",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAnalog.Models.FD_FG": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id ФармДействия",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Наименование ФармДействия",
            "nullable": true
          },
          "fgroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAnalog.Models.FG_Drug"
            },
            "description": "Список ФармГрупп",
            "nullable": true
          },
          "drugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
            },
            "description": "Список ЛС без ФармГруппы",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAnalog.Models.FG_Drug": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id ФармГруппы",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Наименование ФармГруппы",
            "nullable": true
          },
          "sort": {
            "type": "integer",
            "description": "Сортировка ФармГруппы - сделана на бэке",
            "format": "int32"
          },
          "drugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
            },
            "description": "Список концептов ЛС",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAnalog.Models.ResponseDrugs": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "factions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAnalog.Models.FD_FG"
            },
            "description": "Список ФармДействий",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAnalog.Models.ResponseFD": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "concepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
            },
            "description": "Список ФармДействий. Поле main - флаг, что ФД должен быть выбрано по умолчанию.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAnalog.Models.TNFP": {
        "type": "object",
        "properties": {
          "drug": {
            "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
          }
        },
        "additionalProperties": false
      },
      "GetDosage.Models.Answer": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "drug": {
            "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
          },
          "names": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Словарь имён. ключ-бигайди, содержимое-имя показываемое пользователю.",
            "nullable": true
          },
          "nameshort": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Словарь коротких имён(сокращения, абревиатуры). ключ-бигайди, содержимое- короткое имя показываемое пользователю.",
            "nullable": true
          },
          "methodform": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Ключ - BigId метода использования, содержимое - список BigId лекарственных форм. необходимо для красивого фронта.",
            "nullable": true
          },
          "form": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/GetDosage.Models.LForm"
            },
            "description": "Ключ - BigID лекарственной формы, содержимое - дозировка ЛФ и, привязанные к дозировке ЛФ дозировки первичных упаковок.",
            "nullable": true
          },
          "units": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "ID-шники единиц измерения",
            "nullable": true
          },
          "dosagelimits": {
            "$ref": "#/components/schemas/GetDosage.Models.DosageLimitsResponse"
          }
        },
        "additionalProperties": false,
        "description": "Ответ сервера для GetDosage"
      },
      "GetDosage.Models.DosageLimitsResponse": {
        "type": "object",
        "properties": {
          "maxonedose": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDosage.Models.Dose"
            },
            "nullable": true
          },
          "minonedose": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDosage.Models.Dose"
            },
            "nullable": true
          },
          "maxdaydose": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDosage.Models.Dose"
            },
            "nullable": true
          },
          "mindaydose": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDosage.Models.Dose"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDosage.Models.Dose": {
        "type": "object",
        "properties": {
          "doselimit": {
            "$ref": "#/components/schemas/ECPLib.Common.General.Models.Dosage"
          },
          "conditions": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDosage.Models.LFDosage": {
        "type": "object",
        "properties": {
          "dosage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Dosage"
            },
            "description": "Дозировка лекарственной формы\r\nСписок необходим в случае комбинированных ДВ. В остальных вариантах тут будет лист с одним значением.",
            "nullable": true
          },
          "pack": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDosage.Models.PackDosage"
            },
            "description": "Дозировка(кол-во) первичной упаковки.\r\nСписок необходим при различных вариантах первичных упаковок, но при совпадающих вариантах дозировки ЛФ",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Дозировки лекарственной формы."
      },
      "GetDosage.Models.LForm": {
        "type": "object",
        "properties": {
          "solute": {
            "type": "boolean",
            "description": "Флаг, что можно делать раствор"
          },
          "method": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "BigId Допустимые методы применения",
            "nullable": true
          },
          "dosage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDosage.Models.LFDosage"
            },
            "description": "Класс дозировок",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Свойства лекарственной формы"
      },
      "GetDosage.Models.PackDosage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "BigID упаковки",
            "nullable": true
          },
          "dosage": {
            "$ref": "#/components/schemas/ECPLib.Common.General.Models.Dosage"
          }
        },
        "additionalProperties": false,
        "description": "Дозировка упаковки"
      },
      "GetUMKBInfo.Models.AnswerElements": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "risk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUMKBInfo.Models.Element"
            },
            "nullable": true
          },
          "freq": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUMKBInfo.Models.Element"
            },
            "nullable": true
          },
          "trust": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUMKBInfo.Models.Element"
            },
            "nullable": true
          },
          "interaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUMKBInfo.Models.Element"
            },
            "nullable": true
          },
          "efficiency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUMKBInfo.Models.Element"
            },
            "nullable": true
          },
          "warning": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUMKBInfo.Models.Element"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.AnswerLfSp": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUMKBInfo.Models.LFSPForFront"
            },
            "nullable": true
          },
          "searched": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.AnswerNames": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "text": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Ответ. Ключ - публичный код, значание - текст.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.AnswerSchedule": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "freq": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ECPLib.Common.MIS.Models.ScheduleItem"
              },
              "nullable": true
            },
            "nullable": true
          },
          "duration": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ECPLib.Common.MIS.Models.ScheduleItem"
              },
              "nullable": true
            },
            "nullable": true
          },
          "names": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.AnswerUIText": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "freq": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "duration": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "button": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "suptext": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "caution": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "ecptext": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.Element": {
        "type": "object",
        "properties": {
          "from": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "to": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.LFSPForFront": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id концепта",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Полное имя концепта",
            "nullable": true
          },
          "shortname": {
            "type": "string",
            "description": "Краткое имя концепта",
            "nullable": true
          },
          "prnts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUMKBInfo.Models.LFSPItemForFront"
            },
            "description": "Количество \"родителей\"",
            "nullable": true
          },
          "chlds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUMKBInfo.Models.LFSPItemForFront"
            },
            "description": "Количество \"детей\"",
            "nullable": true
          },
          "lnks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUMKBInfo.Models.LFSPItemForFront"
            },
            "description": "Возможные способы применения или лекарственные формы (в зависимости от того, что запрашивают)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.LFSPItemForFront": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id концепта",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Полное имя концепта",
            "nullable": true
          },
          "shortname": {
            "type": "string",
            "description": "Краткое имя концепта",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.LiqMethodResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "methods": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.MKB10Args": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Постоянный ключ авторизации",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Временный токен авторизации (https://cs.socmedica.com/api/user/authorization)",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Локаль пользователя",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Id нозологии, пат признака и т.д.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Наименование нозологии, пат признака и т.д. (Если нет id)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.MKB10Response": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "id": {
            "type": "string",
            "description": "Id найденного заболевания из МКБ10",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Наименование найденного заболевания из МКБ10",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Код найденного заболевания из МКБ10",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.NamesArgs": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "nullable": true
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список (string) ID-шников для получения имён в указанной локали (по умолчанию ru)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.NamesResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "names": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "shortnames": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.Request": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ клиента",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Ключ авторизации (генерируется биллингом)",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "индекс приложения/сервиса к которому обращается клиент",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Индентификатор для набора получаемой информации",
            "nullable": true
          },
          "units": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список Id комлплексных значений, которые надо разложить на элементы",
            "nullable": true
          },
          "nocache": {
            "type": "boolean",
            "description": "Флаг для перерасчёта кэша новыми данными из УМКБ (true - необходимо пересчитать). Если небыло изменений через онторедактор, то должен false или просто пропущен."
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Models.ResponseByCodes": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "texts": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Services.TextByCode+PublicCodesArgs": {
        "type": "object",
        "properties": {
          "active_language": {
            "type": "string",
            "description": "Необходимая локаль (если указываемая не найдена, то будет \"ru\")",
            "nullable": true
          },
          "codes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Services.TextByCode+PublicCodesResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "active_language": {
            "type": "string",
            "nullable": true
          },
          "texts": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/GetUMKBInfo.Services.TextByCode+TextItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUMKBInfo.Services.TextByCode+TextItem": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Manager.Models.AIRequestCG": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Постоянный ключ авторизации",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Временный токен авторизации (https://cs.socmedica.com/api/user/authorization)",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Язык пользователя",
            "nullable": true
          },
          "patient": {
            "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.Patient"
          }
        },
        "additionalProperties": false
      },
      "Manager.Models.AIResponseCG": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "request": {
            "type": "string",
            "nullable": true
          },
          "responseai": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Manager.Models.GPTAnswer"
            },
            "nullable": true
          },
          "responsedrugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Manager.Models.ConceptAnswer": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "mnn": {
            "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
          }
        },
        "additionalProperties": false
      },
      "Manager.Models.GPTAnswer": {
        "type": "object",
        "properties": {
          "mnn": {
            "type": "string",
            "nullable": true
          },
          "form": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string",
            "nullable": true
          },
          "dose": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Manager.Models.SaveProtocolResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "newdrugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
            },
            "nullable": true
          },
          "newliquids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Drugs.Models.Drug"
            },
            "nullable": true
          },
          "misproto": {
            "type": "string",
            "nullable": true
          },
          "proto": {
            "type": "string",
            "nullable": true
          },
          "proto_date": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Костыли для Данилы. пока не определились с механизмом актуализации инфы на фронте"
      },
      "Serilog.Events.LogEventLevel": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Stock.Models.Balances.FPbalance": {
        "type": "object",
        "properties": {
          "fpid": {
            "type": "string",
            "nullable": true
          },
          "fpname": {
            "type": "string",
            "nullable": true
          },
          "qty": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "qty_free": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dosage": {
            "type": "string",
            "nullable": true
          },
          "dosage_value": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dosage_unit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "form_id": {
            "type": "string",
            "nullable": true
          },
          "method_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Stock.Models.Balances.Request": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "nullable": true
          },
          "clinic_code": {
            "type": "string",
            "nullable": true
          },
          "clinic_id": {
            "type": "string",
            "nullable": true
          },
          "dep_code": {
            "type": "string",
            "nullable": true
          },
          "dep_id": {
            "type": "string",
            "nullable": true
          },
          "concept": {
            "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
          }
        },
        "additionalProperties": false
      },
      "Stock.Models.Balances.Response": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "concept": {
            "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
          },
          "fps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Stock.Models.Balances.FPbalance"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UMKBCoreAPI.Models.Api.Requests.Registration.RequestConfirmEmail": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UMKBCoreAPI.Models.Api.Requests.Registration.RequestGetConfirmEmail": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "messageType": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Enums.Billing.GetConfirmEmailMessageType"
          }
        },
        "additionalProperties": false
      },
      "UMKBCoreAPI.Models.Api.Requests.Registration.RequestRegistrationSend": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lpuName": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "roleCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UMKBCoreAPI.Models.Api.Requests.Shared.Device": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "deviceModel": {
            "type": "string",
            "nullable": true
          },
          "browser": {
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UMKBCoreAPI.Models.Api.Requests.User.RequestAuthExit": {
        "type": "object",
        "properties": {
          "authKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UMKBCoreAPI.Models.Api.Requests.User.RequestAuthorization": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "device": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Requests.Shared.Device"
          }
        },
        "additionalProperties": false
      },
      "UMKBCoreAPI.Models.Api.Requests.User.RequestGetUserInfoByEmail": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UMKBCoreAPI.Models.Api.Requests.User.RequestRecovery": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UMKBCoreAPI.Models.Api.Responses.Alert": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "actionCode": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "string",
            "nullable": true
          },
          "sticky": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UMKBCoreAPI.Models.Api.Responses.User.ResponseAuthorization": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "result": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UMKBCoreAPI.Models.Api.Responses.User.ResponseGetUserInfoByEmail": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "isEmailConfirmed": {
            "type": "boolean"
          },
          "services": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UMKBCoreAPI.Models.Enums.Billing.GetConfirmEmailMessageType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "UMKBNeedStuff.Alert": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Код ошибки",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Заголовок",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Описание ошибки",
            "nullable": true
          },
          "level": {
            "type": "string",
            "description": "Тип сообщения, влияет на внешний вид сообщения, по умолчанию error. Возможные варианты: error-ошибка, success-успех, info-информация, danger-опасность",
            "nullable": true
          },
          "sticky": {
            "type": "boolean",
            "description": "Должно ли сообщение само пропасть, через несколько секунд. true - зафиксированное сообщение. По умолчанию false."
          }
        },
        "additionalProperties": false,
        "description": "Коллекция параметров оповещения"
      },
      "WebServer.Models.AUploadsArgs": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "nullable": true
          },
          "clinic_code": {
            "type": "string",
            "nullable": true
          },
          "xls": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.ClinicSearcherArgs": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Текст, по которому нужно найти концепты в UMKB. Обязательный параметр.",
            "nullable": true
          },
          "doctor_id": {
            "type": "string",
            "description": "Идентификатор врача",
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "Постоянный токен доступа",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Временный токен доступа",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Локализация",
            "default": "ru",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Аргументы для поиска больницы"
      },
      "WebServer.Models.CodesArgs": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "nullable": true
          },
          "codes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.DosageCacheRemoveArgs": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Лицензионный ключ клиента",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Ключ авторизации (генерируется биллингом)",
            "nullable": true
          },
          "libid": {
            "type": "integer",
            "description": "LibId. 52(ДВ) или 62(ТН)",
            "format": "int32"
          },
          "drugid": {
            "type": "integer",
            "description": "Id ЛС, кэш дозировок которого надо очистить.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.FunctionalResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Список кодов функционала",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ответ для API Auth/Functional"
      },
      "WebServer.Models.GetLastPatientsArgs": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Масимальное количество пациентов в ответе",
            "format": "int32"
          },
          "doctor_id": {
            "type": "string",
            "description": "ID врача",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Сгенерированный биллингом токен",
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "Лицензионный ключ",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "Индекс приложения/сервиса к которому обращается клиент",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Язык, на котором будет формироваться ответ",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.GetPatient": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Постоянный ключ авторизации - включается режим работы c MIS",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Временный токен авторизации (https://cs.socmedica.com/api/user/authorization)",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "Номер сервиса (108 технический экф2)",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Локаль пользователя (по умолчанию \"ru\")",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Уникальный id пациента в системе УМКБ",
            "nullable": true
          },
          "doctor_id": {
            "type": "string",
            "description": "Уникальный id врача в системе УМКБ",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Уникальный код пациента (в сторонних МИС)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.GetProtocolArgs": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Постоянный токен авторизации",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Временный токен авторизации",
            "nullable": true
          },
          "protocolId": {
            "type": "string",
            "description": "Идентификатор протокола",
            "nullable": true
          },
          "lang": {
            "type": "string",
            "description": "Язык, на котором будет восприниматься запрос и формироваться ответ (по умолчанию \"ru\")",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.IdSearcherArgs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id, по которому нужно найти концепты в UMKB. Обязательный параметр.",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.InfoTechData": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "uitext": {
            "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerUIText"
          },
          "elements": {
            "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerElements"
          },
          "names": {
            "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerNames"
          },
          "recipedata": {
            "$ref": "#/components/schemas/Common.Models.RecipeDataResponse"
          },
          "unitsprimary": {
            "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerUnits"
          },
          "unitspharm": {
            "$ref": "#/components/schemas/ECPLib.Common.UnitsCalc.Models.AnswerUnits"
          },
          "schedule": {
            "$ref": "#/components/schemas/GetUMKBInfo.Models.AnswerSchedule"
          }
        },
        "additionalProperties": false,
        "description": "Результат работы технического АПИ (объединение всех технических апи в одно)"
      },
      "WebServer.Models.Key": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.LetterSearcherArgs": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Текст, по которому нужно найти концепты в UMKB. Обязательный параметр.",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.LetterSearcherDiseaseArgs": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Текст, по которому нужно найти концепты в UMKB. Обязательный параметр.",
            "nullable": true
          },
          "onlycode": {
            "type": "boolean",
            "description": "Поиск только по кодам MKB10"
          },
          "active_language": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.MisArgsResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "args": {
            "$ref": "#/components/schemas/Common.Models.MisProtocol"
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.PatientCode": {
        "type": "object",
        "properties": {
          "shortecp": {
            "type": "boolean",
            "description": "Флаг, для выбора версии. false - полноценная, true - обрезанная."
          },
          "key": {
            "type": "string",
            "description": "Постоянный ключ авторизации",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Временный токен авторизации (https://cs.socmedica.com/api/user/authorization)",
            "nullable": true
          },
          "clinical_case": {
            "type": "string",
            "description": "№ истории болезни/эпизода",
            "nullable": true
          },
          "patient_code": {
            "type": "string",
            "description": "код пациента",
            "nullable": true
          },
          "clinic_code": {
            "type": "string",
            "description": "код клиники",
            "nullable": true
          },
          "doctor_code": {
            "type": "string",
            "description": "код врача",
            "nullable": true
          },
          "disease_classifier": {
            "type": "string",
            "description": "Пока не работает: Классификатор болезней (mkb10, mkb11, SNOMED и т.д.) - нозологии, которым найдены соответствия в указанном классификаторе вернутся в виде кодов (по умолчанию null)\r\nВ данный момент список работающих тегов:\r\nnull или string.Empty - поиск по именам во всех классификаторах\r\nmkb10 - Имя в МКБ10\r\nmkb10code - Имя Поиск кодам МКБ10\r\nmkb10multi - Поиск в МКБ10 и по именам и по кодам (не нежелательно - в редких случаях возможны неоднозначности в случае равноценных совпадений)",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Язык, на котором будет восприниматься запрос и формироваться ответ",
            "default": "ru",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.PatientMutations": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "key": {
            "type": "string",
            "description": "Лицензионный ключ клиента",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Ключ авторизации (генерируется биллингом)",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Локаль пользователя (по умолчанию \"ru\")",
            "nullable": true
          },
          "idPatient": {
            "type": "string",
            "description": "Id Пациента (обязательный параметр)",
            "nullable": true
          },
          "mutations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.Patient.Models.Mutation"
            },
            "description": "Мутации генов пациента",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Добавление вариантов мутаций для пациента"
      },
      "WebServer.Models.REIncome": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "nullable": true
          },
          "nameUser": {
            "type": "string",
            "nullable": true
          },
          "emailUser": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.RecipeArgs": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Постоянный ключ авторизации",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Временный токен авторизации (https://cs.socmedica.com/api/user/authorization)",
            "nullable": true
          },
          "device_id": {
            "type": "string",
            "description": "Идентификатор устройства",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "Номер сервиса (4 - экф, 108 технический экф2)",
            "nullable": true
          },
          "recipe": {
            "type": "string",
            "description": "Код(номер) рецепта",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "E-mail, коротый используется при отправке рецепта",
            "nullable": true
          },
          "patient_id": {
            "type": "string",
            "description": "id пациента, по которому необходимо получить список рецептов",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Локаль пользователя",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Аргументы для получения рецепта"
      },
      "WebServer.Models.RecipeNewEDSArgs": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Постоянный ключ авторизации",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "description": "Временный токен авторизации (https://cs.socmedica.com/api/user/authorization)",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Оригинальные данные",
            "nullable": true
          },
          "certificate": {
            "type": "string",
            "description": "Строка сертификата",
            "nullable": true
          },
          "signed_data": {
            "type": "string",
            "description": "Подписанные данные",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "description": "Локализация",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "Индекс приложения/сервиса к которому обращается клиент",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Аргументы для запроса"
      },
      "WebServer.Models.RecipesResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "patient_id": {
            "type": "string",
            "nullable": true
          },
          "recipes": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Список рецептов пациента"
      },
      "WebServer.Models.SearchPatientArgs": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "doctor_id": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.SearchResponse": {
        "type": "object",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/UMKBCoreAPI.Models.Api.Responses.Alert"
          },
          "concepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECPLib.Common.General.Models.Concept"
            },
            "nullable": true
          },
          "searched": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebServer.Models.SecurityArgs": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "authkey": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          },
          "active_language": {
            "type": "string",
            "nullable": true
          },
          "nocache": {
            "type": "boolean",
            "description": "Флаг для перерасчёта кэша новыми данными из УМКБ (true - необходимо пересчитать). Если небыло изменений через онторедактор, то должен false или просто пропущен."
          }
        },
        "additionalProperties": false
      }
    }
  }
}