@using DocumentManagementSystem.Shared.OpenApi;

<div class="wrapper">
    <section class="block col-12 block-desktop col-12-desktop">
        <div>
            @if (Tags is not null)
            {
                @foreach (var tag in Tags)
                {
                    @if (!string.IsNullOrEmpty(tag.Name))
                    {
                        <UIController Tag="@tag" Paths="@controllers[tag.Name]"/>
                    }
                }
            }
        </div>
    </section>
</div>

@code {
    [Parameter]
    [EditorRequired]
    public Dictionary<string, PathItem>? Paths { get; set; }
    [Parameter]
    [EditorRequired]
    public IList<Tag>? Tags { get; set; }
    [CascadingParameter]
    [EditorRequired]
    public Components? Components { get; set; }

    Dictionary<string, Dictionary<string, PathItem>>? controllers;

    protected override void OnInitialized()
    {
        if (Paths is not null)
        {
            controllers = new();

            foreach (var path in Paths)
            {
                #region get
                if (path.Value.Get is not null && path.Value.Get.Tags is not null && path.Value.Get.Tags.Count > 0)
                {
                    var tag = path.Value.Get.Tags[0];

                    if (controllers.ContainsKey(tag))
                    {
                        if (!controllers[tag].ContainsKey(path.Key))
                            controllers[tag].Add(path.Key, path.Value);
                    }
                    else
                    {
                        var dictionary = new Dictionary<string, PathItem>();
                        dictionary.Add(path.Key, path.Value);

                        controllers.Add(tag, dictionary);
                    }
                }
                #endregion

                #region put
                if (path.Value.Put is not null && path.Value.Put.Tags is not null && path.Value.Put.Tags.Count > 0)
                {
                    var tag = path.Value.Put.Tags[0];

                    if (controllers.ContainsKey(tag))
                    {
                        if (!controllers[tag].ContainsKey(path.Key))
                            controllers[tag].Add(path.Key, path.Value);
                    }
                    else
                    {
                        var dictionary = new Dictionary<string, PathItem>();
                        dictionary.Add(path.Key, path.Value);

                        controllers.Add(tag, dictionary);
                    }
                }
                #endregion

                #region post
                if (path.Value.Post is not null && path.Value.Post.Tags is not null && path.Value.Post.Tags.Count > 0)
                {
                    var tag = path.Value.Post.Tags[0];

                    if (controllers.ContainsKey(tag))
                    {
                        if (!controllers[tag].ContainsKey(path.Key))
                            controllers[tag].Add(path.Key, path.Value);
                    }
                    else
                    {
                        var dictionary = new Dictionary<string, PathItem>();
                        dictionary.Add(path.Key, path.Value);

                        controllers.Add(tag, dictionary);
                    }
                }
                #endregion

                #region delete
                if (path.Value.Delete is not null && path.Value.Delete.Tags is not null && path.Value.Delete.Tags.Count > 0)
                {
                    var tag = path.Value.Delete.Tags[0];

                    if (controllers.ContainsKey(tag))
                    {
                        if (!controllers[tag].ContainsKey(path.Key))
                            controllers[tag].Add(path.Key, path.Value);
                    }
                    else
                    {
                        var dictionary = new Dictionary<string, PathItem>();
                        dictionary.Add(path.Key, path.Value);

                        controllers.Add(tag, dictionary);
                    }
                }
                #endregion
            }

            if (Tags is null)
            {
                Tags = new List<Tag>();

                foreach (var tag in controllers.Keys)
                {
                    Tags.Add(new Tag() { Name = tag });
                }
            }
        }
    }
}
