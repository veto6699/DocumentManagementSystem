@using DocumentManagementSystem.Client.Models;
@using DocumentManagementSystem.Shared
@using System.Text.RegularExpressions;
@using Microsoft.AspNetCore.Components.Rendering;



@if (Info is not null)
{
    <div class="information-container wrapper">
        <section class="block col-12">
            <div>
                <div class="info">
                    <hgroup class="main">
                        <h2 class="title">
                            @if (!string.IsNullOrWhiteSpace(Info.Title))
                            {
                                @Info.Title

                                <span>
                                    @if (!string.IsNullOrWhiteSpace(Info.Version))
                                    {
                                        <small>
                                            <pre class="version">@Info.Version</pre>
                                        </small>
                                    }
                                    @if (!string.IsNullOrWhiteSpace(openAPI))
                                    {
                                        <small class="version-stamp">
                                            <pre class="version">@openAPI</pre>
                                        </small>
                                    }
                                </span>
                            }
                        </h2>
                        <a target="_blank" href="@URL" rel="noopener noreferrer" class="link">
                            <span class="url">@URL</span>
                        </a>
                    </hgroup>
                    @if (!string.IsNullOrWhiteSpace(Info?.Description))
                    {
                        <div class="description">
                            <div class="renderedMarkdown">
                                @((MarkupString)Markdig.Markdown.ToHtml(Info.Description))
                            </div>
                        </div>
                    }
                </div>
            </div>
        </section>
    </div>
}

@code {
    [Parameter] public Info? Info { get; set; }
    [Parameter] public string? OpenAPI { get; set; }
    [Parameter] public string? URL { get; set; }
    string? openAPI;

    protected override void OnInitialized()
    {
        if (!string.IsNullOrWhiteSpace(OpenAPI))
        {
            var openAPIVersion = OpenAPI.Split('.', StringSplitOptions.RemoveEmptyEntries);

            if (openAPIVersion.Length > 0)
                openAPI = "OAS" + openAPIVersion[0];
            if (openAPIVersion.Length > 1 && openAPIVersion[1] != "0")
                openAPI += "." + openAPIVersion[1];
        }
    }
}
