@using DocumentManagementSystem.Client.Components.OpenAPI.Actions.Action.Example
@using DocumentManagementSystem.Client.Components.OpenAPI.Actions.Action.ComponentSchema
@using DocumentManagementSystem.Shared.OpenApi

<div class="opblock-section-header">
    <h4>Ответ</h4>
</div>
<div class="responses-inner">
    <table class="responses-table">
        <thead>
            <tr class="responses-header">
                <td class="col_header response-col_status">HTTP Код</td>
                <td class="col_header response-col_description">Описание</td>
                <td class="col col_header response-col_links">Ссылки</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var response in Responses)
            {
                @if (response.Value is not null)
                {
                    <tr class="response">
                        <td class="response-col_status">@response.Key</td>
                        <td class="response-col_description">
                            @if (!string.IsNullOrEmpty(response.Value.Description))
                            {
                                <div class="response-col_description__inner">
                                    <div class="renderedMarkdown">
                                        @((MarkupString)Markdig.Markdown.ToHtml(response.Value.Description))
                                    </div>
                                </div>
                            }
                            @if (mediaTypes.ContainsKey(response.Key) && response.Value.Content is not null)
                            {
                                string selectedMediaType = mediaTypes[response.Key];

                                <section class="response-controls">
                                    <div class="response-control-media-type response-control-media-type--accept-controller">
                                        <small class="response-control-media-type__title">Медиа тип</small>
                                        <div class="content-type-wrapper">
                                            <select class="content-type" @bind="@selectedMediaType">
                                                @foreach (string mediaType in response.Value.Content.Keys)
                                                {
                                                    <option value="@mediaType">@mediaType</option>
                                                }
                                            </select>
                                        </div>
                                        <small class="response-control-media-type__accept-message">
                                            Controls <code>Accept</code> header.
                                        </small>
                                    </div>
                                </section>
                                <CascadingValue Value="@selectedMediaType" Name="MediaType">
                                    <UIResponseBody HttpCode="@response.Key" Response="@response.Value" />
                                </CascadingValue>
                            }
                        </td>
                        <td class="response-col_links"><i>Нет ссылок</i></td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    [EditorRequired]
    public Dictionary<string, Response>? Responses { get; set; }
    [CascadingParameter]
    [EditorRequired]
    public Components? Components { get; set; }

    bool exampleValueActivate = true;
    Dictionary<string, string?> mediaTypes = new();

    protected override void OnInitialized()
    {
        foreach (var response in Responses)
        {
            if (response.Value.Content is not null && response.Value.Content.Count > 0)
            {
                var types = response.Value.Content.Keys.ToList();

                if (types.Contains("application/json"))
                    mediaTypes.Add(response.Key, "application/json");
                else
                    mediaTypes.Add(response.Key, response.Value.Content.Keys.First());
            }
            else
                mediaTypes.Add(response.Key, null);
        }
    }

    void ExampleValueClick()
    {
        if (exampleValueActivate)
            return;

        exampleValueActivate = true;
    }

    void SchemaClick()
    {
        if (!exampleValueActivate)
            return;

        exampleValueActivate = false;
    }
}
