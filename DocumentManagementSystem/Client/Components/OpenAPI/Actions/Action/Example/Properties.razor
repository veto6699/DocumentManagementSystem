@using DocumentManagementSystem.Client.Constants
@foreach (var property in properties)
{
    @if (lastPropertyKey is not null && lastPropertyKey.Equals(property.Key))
    {
        IsLastProperty = true;
    }

    @switch(property.Value.Type)
    {
        case null:
            <PropertyName Name="@property.Key" Space="@internalSpace" /><span>{</span>@Environment.NewLine<Properties SchemaRef="@property.Value.Ref" SpaceCount="@spaceCount" />@internalSpace<span>}</span>            
            @if (!IsLastProperty)
            {
                <span>,</span>
            }
            @Environment.NewLine
            break;
        case PropertyTypes.Object:
            <PropertyName Name="@property.Key" Space="@internalSpace" /><PropertyTypeObject Property="@property.Value" SpaceCount="@spaceCount" LastProperty="@IsLastProperty" />
            break;
        case PropertyTypes.Array:
            <PropertyName Name="@property.Key" Space="@internalSpace" /><PropertyTypeArray Property="@property.Value" SpaceCount="@spaceCount" LastProperty="@IsLastProperty" />
            break;
        default:
            <PropertyName Name="@property.Key" Space="@internalSpace" /><PropertyType Type="@property.Value.Type" LastProperty="@IsLastProperty" DefaultValue="@property.Value.Default" MinLength="@property.Value.MinLength" Format="@property.Value.Format"/>
            break;
    }
}

@code {
    [Parameter]
    [EditorRequired]
    public string? SchemaRef { get; set; }
    [CascadingParameter]
    [EditorRequired]
    public Components? Components { get; set; }
    [Parameter]
    public uint SpaceCount { get; set; } = 0;
    [Parameter]
    public bool IsLastProperty { get; set; } = false;

    uint spaceCount = 0;
    string? internalSpace;

    string? lastPropertyKey;

    Dictionary<string, Property>? properties;

    protected override void OnInitialized()
    {
        properties = Components.Schemas[SchemaRef[21..]].Properties;

        spaceCount = SpaceCount;
        spaceCount++;
        SpaceAdd();

        lastPropertyKey = properties.Last().Key;
    }

    void SpaceAdd()
    {
        for (uint i = 0; i < spaceCount; i++)
            internalSpace += SystemConstants.PropertySpace;
    }
}
