@using DocumentManagementSystem.Client.Constants;

<span>{</span>@Environment.NewLine
@if (Property.AdditionalProperties.Items is null)
{
    @internalSpace<PropertyName Name="additionalProp1" /><PropertyType Type="@Property.AdditionalProperties.Type" />
    @internalSpace<PropertyName Name="additionalProp2" /><PropertyType Type="@Property.AdditionalProperties.Type" />
    @internalSpace<PropertyName Name="additionalProp3" /><PropertyType Type="@Property.AdditionalProperties.Type" LastProperty="true" />
}
else
{
    @internalSpace<PropertyName Name="additionalProp1" /><span>[</span>@Environment.NewLine@internalSpacePlus<PropertyType Type="@Property.AdditionalProperties.Items.Type" LastProperty="true" />@internalSpace<span>],</span>@Environment.NewLine
    @internalSpace<PropertyName Name="additionalProp2" /><span>[</span>@Environment.NewLine@internalSpacePlus<PropertyType Type="@Property.AdditionalProperties.Items.Type" LastProperty="true" />@internalSpace<span>],</span>@Environment.NewLine
    @internalSpace<PropertyName Name="additionalProp3" /><span>[</span>@Environment.NewLine@internalSpacePlus<PropertyType Type="@Property.AdditionalProperties.Items.Type" LastProperty="true" />@internalSpace<span>]</span>@Environment.NewLine
}
@externalSpace}@if (!LastProperty)
{
    <span>,</span>
}@Environment.NewLine

@code {
    [Parameter]
    [EditorRequired]
    public Property? Property { get; set; }
    [Parameter]
    [EditorRequired]
    public uint SpaceCount { get; set; }
    [Parameter]
    [EditorRequired]
    public bool LastProperty { get; set; }

    uint spaceCount = 0;
    string? internalSpace, internalSpacePlus, externalSpace;

    protected override void OnInitialized()
    {
        spaceCount = SpaceCount;
        spaceCount++;
        SpaceAdd();
    }

    void SpaceAdd()
    {
        for (uint i = 0; i < spaceCount; i++)
            internalSpace += SystemConstants.PropertySpace;

        internalSpacePlus = internalSpace + SystemConstants.PropertySpace;
        externalSpace = internalSpace[..^SystemConstants.PropertySpace.Length];
    }
}
