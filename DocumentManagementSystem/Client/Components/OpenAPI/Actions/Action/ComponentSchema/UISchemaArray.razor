@using DocumentManagementSystem.Client.Constants

<span>[</span>
@if (!string.IsNullOrEmpty(Items.Type))
{
    @if (MaxLength is not null)
    {
        <span class="property primitive">
            <br>maxLength: @MaxLength
        </span>
    }

    @if (MinLength is not null)
    {
        <span class="property primitive">
            <br>minLength: @MinLength
        </span>
    }

    @if (!string.IsNullOrEmpty(DefaultValue))
    {
        <span class="property primitive">
            <br>default: @DefaultValue
        </span>
    }

    @if (Nullable is not null)
    {
        <span class="property primitive">
            <br>nullable: @Nullable.ToString().ToLower()
        </span>
    }

    @if (!string.IsNullOrEmpty(Description))
    {
        <div class="renderedMarkdown">
            <p>@((MarkupString)Markdig.Markdown.ToHtml(Description))</p>
        </div>
    }

    @if (Enum is not null && Enum.Count > 0)
    {
        string enums = string.Empty;

        @foreach (var en in Enum)
        {
            enums += $"{en}, ";
        }

        enums = enums[..2];

        <span class="prop-enum">
            Enum:<br>
            <span>
                [ @enums ]
            </span>
        </span>
    }

    @switch (Items.Type)
    {
        case PropertyTypes.Object:
            <UISchemaAdditionalProperties AdditionalProperties="@Items.AdditionalProperties" />
            break;
        case PropertyTypes.Array:
            <UISchemaArray Items="@Items.Items" />
            break;
        default:
            <UISchemaPropertyPrimitive Type="@Items.Type" />
            break;
    }
}
else
{
    <UISchemaRef SchemaRef="@Items.Ref" />
}
<span>]</span>

@code {
    [Parameter]
    [EditorRequired]
    public Item Items { get; set; }

    [CascadingParameter(Name = "DefaultValue")]
    public string? DefaultValue { get; set; }

    [CascadingParameter(Name = "MaxLength")]
    public int? MaxLength { get; set; }

    [CascadingParameter(Name = "MinLength")]
    public int? MinLength { get; set; }

    [CascadingParameter(Name = "Format")]
    public string? Format { get; set; }

    [CascadingParameter(Name = "Nullable")]
    public bool? Nullable { get; set; }

    [CascadingParameter(Name = "Description")]
    public string? Description { get; set; }

    [CascadingParameter(Name = "Enum")]
    public List<string>? Enum { get; set; }
}
